{"version":3,"sources":["Firebase.js","stores/errors.js","stores/groups.js","stores/users.js","components/AuthenticatedRoute.js","components/CallToActionButton.js","components/Button.js","components/NavBar.js","components/HelpTool.js","components/Main.js","components/Input.js","stores/newGroup.js","components/NewGroup.js","components/NewTasks.js","components/CircleInitials.js","components/TaskCard.js","components/Notif.js","components/FocusedTask.js","components/AddChoreButton.js","components/MyTasks.js","components/Login.js","components/AddChore.js","components/GroupList.js","components/Leaderboard.js","App.js","serviceWorker.js","index.js","img/churro.svg"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ErrorStore","errors","timeoutFn","_this","this","clearTimeout","setTimeout","err","push","waitAndClear","length","decorate","observable","addError","action","hasErrors","computed","GroupStore","Object","classCallCheck","group","isFetching","db","firestore","settings","timestampsInSnapshots","collection","autorun","updateGroup","delay","id","_this2","doc","get","then","exists","data","console","log","catch","errorStore","email","_this3","where","docs","empty","groups","forEach","item","name","description","schedule","task","Date","now","currentQueue","shuffle","keys","user_emails","tasks","shortid","generate","set","res","a","i","j","Math","floor","random","_ref","getUsersGroups","add","stores_groups","STORAGE_KEY","UserStore","currentUser","usersGroups","fetching","localStorage","getItem","removeItem","user","setItem","isLoggedIn","groupStore","map","users","setCurrentUser","getCurrentUsersGroups","stores_users","AuthenticatedRoute","Component","component","rest","objectWithoutProperties","react_default","createElement","Route","assign","render","props","userStore","Redirect","to","location","pathname","CallToActionButton","className","children","Button","stylename","concat","NavBar","BurgerMenu","NavLink","exact","onClick","logout","HelpTool","info","class","Main","observer","_Component","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","elem","document","getElementById","style","left","opacity","src","churro","Link","components_CallToActionButton","transitionOut","components_Button","components_HelpTool","Input","USER_COLORS","NewGroupStore","color","addUser","addTask","clear","newGroup","NewGroup","call","formFlow","current_step","next_step","e","newState","step","setState","addRoommate","new_roommate","newGroupStore","onKeyPress","fn","onUsersName","trim","state","formElement","components_Input","placeholder","onChange","target","groupName","values","roommate","index","getFormElement","suggestedChores","frequency","NewChores","addChore","new_chore","saveGroup","save","history","onSuggestionClick","idx","newSuggestions","toConsumableArray","suggestions","splice","paddingTop","defaultValue","CircleInitials","parts","split","initials","backgroundColor","titleMappings","Daily","Weekly","Biweekly","Monthly","As Needed","Coming up","title","items","components_CircleInitials","Notif","notifText","closeURL","queue","display","random_churros","components_Notif","top","shift","AddChoreButton","MyTasks","all","groupID","match","params","content","dist_default","focusedTask","reduce","m","toString","cards","entries","kv","components_TaskCard","alt","components_FocusedTask","components_NavBar","components_AddChoreButton","Login","emailRE","input","styles","validEmail","bind","assertThisInitialized","handleChange","handleSubmit","URLSearchParams","search","next","test","borderBottom","html","passwordInput","emailInput","AddChore","handleComplete","goBack","GroupList","fetchCurrentUsersGroups","Leaderboard","leaderboard","App","BrowserRouter","basename","process","path","components_AuthenticatedRoute","NewTasks","Boolean","window","hostname","ReactDOM","src_App","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.d9df0b57.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyAZnwch_QKuS6OPefMuAoUtEQd_ppiaa50\",\n  authDomain: \"churro-126ca.firebaseapp.com\",\n  databaseURL: \"https://churro-126ca.firebaseio.com\",\n  projectId: \"churro-126ca\",\n  storageBucket: \"\",\n  messagingSenderId: \"285905994423\"\n});\n\nexport default firebase;\n\n","import { observable, computed, decorate, action } from 'mobx'\n\nclass ErrorStore {\n  errors = [];\n  timeoutFn = null;\n\n  waitAndClear() {\n    if (this.timeoutFn !== null) {\n      clearTimeout(this.timeoutFn);\n    }\n    this.timeoutFn = setTimeout(() => {\n     this.errors = []; \n     this.timeoutFn = null;\n    }, 5000);\n  }\n\n  clear() {\n    this.errors = [];\n  }\n\n  addError(err) {\n    this.errors.push(err);\n    this.waitAndClear();\n  }\n\n  get hasErrors() {\n    return 0 < this.errors.length;\n  }\n}\n\ndecorate(ErrorStore, {\n  errors: observable,\n  addError: action,\n  hasErrors: computed\n});\n\nexport default new ErrorStore();","import { observable, decorate, action, autorun } from 'mobx';\nimport shortid from 'shortid';\n\nimport firebase from '../Firebase';\nimport errorStore from './errors';\n\nclass GroupStore {\n  group = null;\n  isFetching = true;\n\n  constructor(firebase) {\n    // Initialize Cloud Firestore through Firebase\n    var db = firebase.firestore();\n\n    // Disable deprecated features\n    db.settings({\n      timestampsInSnapshots: true\n    });\n    this.db = db.collection('groups');\n    autorun(() => this.updateGroup(), { delay: 300 });\n  }\n\n  get(id) {\n    if (this.group !== null && this.group.id === id) {\n      return;\n    }\n\n    this.isFetching = true;\n    return this.db.doc(id).get().then((doc) => {\n      if (!doc.exists) {\n        console.log('No group with id of ' + id);\n        return;\n      }\n\n      this.group = doc.data();\n      this.group.id = id;\n      this.isFetching = false;\n      return this.group;\n    }).catch(err => {\n      this.isFetching = false;\n      errorStore.addError(err);\n    })\n  }\n\n  getUsersGroups(email) {\n    return this.db.where('user_emails', 'array-contains', email).get().then((docs) => {\n      if (docs.empty) {\n        console.log('User has no groups with email ' + email);\n        return;\n      }\n\n      let groups = [];\n      docs.forEach(doc => {\n        const group = doc.data();\n        let item =  {\n          id: doc.id,\n          name: group.name\n        }\n        groups.push(item);\n      });\n      return groups;\n    }).catch(err => {\n      this.isFetching = false;\n      errorStore.addError(err);\n    });\n  }\n\n  addTask(name, description, schedule) {\n    const task = {\n      id: Date.now(),\n      name,\n      schedule,\n      description,\n      currentQueue: this.shuffle(Object.keys(this.group.user_emails))\n    }\n\n    this.group.tasks.push(task);\n  }\n\n  add(group) {\n    group.id = shortid.generate();\n    return this.db.doc(group.id).set(group).then(doc => {\n      console.log(group);\n      return group;\n    }).catch(err => {\n      errorStore.addError(err);\n    });\n  }\n\n  updateGroup() {\n    if (this.group === null) {\n      return;\n    }\n    this.db.doc(this.group.id).set(this.group).then(res => {\n      console.log('Successfully updated group');\n    }).catch(err => {\n      errorStore.addError(err);\n    })\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\ndecorate(GroupStore, {\n  group: observable,\n  isFetching: observable,\n  get: action,\n  getUsersGroups: action,\n  add: action,\n})\n\n\nexport default new GroupStore(firebase);","import { observable, computed, decorate, action } from 'mobx'\n\nimport groupStore from './groups';\n\nconst STORAGE_KEY = 'churro-user';\n\nclass UserStore {\n  currentUser = '';\n  usersGroups = [];\n  fetching = false;\n\n  constructor() {\n    if (localStorage.getItem(STORAGE_KEY)) {\n      this.currentUser = localStorage.getItem(STORAGE_KEY);\n    }\n  }\n\n  get isLoggedIn() {\n    return this.currentUser !== '';\n  }\n\n  logout() {\n    this.currentUser = '';\n    this.usersGroups = [];\n    localStorage.removeItem(STORAGE_KEY);\n  }\n\n  setCurrentUser(user) {\n    this.currentUser = user;\n    console.log('Set current user to ' + this.currentUser);\n    localStorage.setItem(STORAGE_KEY, user);\n  }\n\n  fetchCurrentUsersGroups() {\n    if (!this.isLoggedIn) {\n      return;\n    }\n    this.fetching = true;\n    groupStore.getUsersGroups(this.currentUser)\n      .then(groups => {\n        console.log(groups);\n        this.usersGroups = groups.map(group => { \n          return {\n            id: group.id, \n            name: group.name\n          }\n        });\n        this.fetching = false;\n      }).catch(err => {\n        console.log(err);\n        this.fetching = false;\n      });\n  }\n}\n\ndecorate(UserStore, {\n  currentUser: observable,\n  usersGroups: observable, \n  users: observable, \n  fetching: observable, \n  isLoggedIn: computed,\n  setCurrentUser: action,\n  getCurrentUsersGroups: action,\n});\n\nexport default new UserStore();","import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport userStore from '../stores/users';\n\nconst AuthenticatedRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        userStore.isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={\"/login?redirect=\" + props.location.pathname}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default AuthenticatedRoute;","import React from 'react';\n\nimport '../styles/Button.scss';\n\nconst CallToActionButton = (props) => {\n  return (\n    <button className=\"button button--call-to-action\" {...props}>{ props.children }</button>\n  )\n}\n\nexport default CallToActionButton;\n","import React from 'react';\n\nimport '../styles/Button.scss';\n\nconst Button = (props) => {\n  let stylename = '';\n  if (props && props.stylename) stylename = props.stylename;\n  return (\n    <button className={`button ${stylename}`} {...props} >{ props.children }</button>\n  )\n}\n\nexport default Button;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { push as Menu } from \"react-burger-menu\";\n\nimport userStore from \"../stores/users\";\n\nimport \"../styles/NavBar.scss\";\n\nconst NavBar = () => {\n  return (\n    <Menu>\n      <NavLink exact className=\"link\" to={\"/\"}>\n        HOME\n      </NavLink>\n      <NavLink exact className=\"link\" to={\"/groups\"}>\n        GROUPS\n      </NavLink>\n      <NavLink\n        exact\n        className=\"link\"\n        to={\"/\"}\n        onClick={() => {\n          userStore.logout();\n        }}\n      >\n        LOGOUT\n      </NavLink>\n    </Menu>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\n\nimport \"../styles/HelpTool.scss\";\n\nconst HelpTool = ({ info }) => {\n  return (\n    <i class=\"fas fa-info-circle tool-icon\">\n      <span class=\"info\">{info}</span>\n    </i>\n  );\n};\n\nexport default HelpTool;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\";\n\nimport CallToActionButton from \"./CallToActionButton\";\nimport Button from \"./Button\";\nimport NavBar from \"./NavBar\";\nimport HelpTool from \"./HelpTool\";\n\nimport userStore from \"../stores/users\";\nimport churro from \"../img/churro.svg\";\n\nimport \"../styles/Main.scss\";\n\nconst Main = observer(\n  class Main extends Component {\n    transitionOut() {\n      let elem = document.getElementById(\"landing\");\n      elem.style.left = \"-10%\";\n      elem.style.opacity = 0;\n    }\n\n    render() {\n      return (\n        <div className=\"Main\">\n          <div className=\"container\">\n            <div id=\"landing\">\n              <img className=\"landing-img\" src={churro} />\n              <h2 className=\"welcome-header\">Welcome to Churro!</h2>\n              <h4 className=\"welcome-subheader\">\n                The New Way to Manage Chores\n              </h4>\n              <div className=\"button-container\">\n                <Link to=\"/new\">\n                  <CallToActionButton onClick={this.transitionOut}>\n                    START A NEW GROUP\n                  </CallToActionButton>\n                </Link>\n                <Link to={userStore.isLoggedIn ? \"/groups\" : \"/login\"}>\n                  <Button>\n                    {userStore.isLoggedIn ? \"YOUR GROUPS\" : \"LOGIN\"}\n                  </Button>\n                </Link>\n              </div>\n            </div>\n            <HelpTool info=\"yoooo this is some text  yoooo this is some text yoooo this is some text\" />\n          </div>\n        </div>\n      );\n    }\n  }\n);\n\nexport default Main;\n","import React from 'react';\n\nimport '../styles/Input.scss';\n\nconst Input = (props) => {\n  return (\n    <input className=\"input\" {...props} >{ props.children }</input>\n  )\n}\n\nexport default Input;\n","import { observable, decorate, action } from 'mobx'\n\nimport groupStore from './groups';\nimport errorStore from './errors';\n\nconst USER_COLORS = [\n  'tomato',\n  'plum',\n  'teal',\n  'turquoise',\n  'forestGreen',\n  'fireBrick',\n  'MediumVioletRed',\n  'DarkOrange',\n  'gold',\n  'SlateBlue',\n  'CadetBlue',\n  'Navy',\n  'DarkSlateGray',\n  'LightSlateGray'\n]\n\n\nclass NewGroupStore {\n  name = '';\n  users = {};\n  tasks = [];\n\n  addUser(name, email) {\n    const user = {\n      id: Date.now(),\n      name,\n      email,\n      color: USER_COLORS[Object.keys(this.users).length%USER_COLORS.length]\n    }\n\n    this.users[email] = user;\n  }\n\n  addTask(name, description, schedule) {\n    const task = {\n      id: Date.now(),\n      name,\n      schedule,\n      description,\n      currentQueue: this.shuffle(Object.keys(this.users))\n    }\n\n    this.tasks.push(task);\n  }\n\n  clear() {\n    this.name = '';\n    this.users = {};\n    this.tasks = [];\n  }\n\n  save() {\n    const group = {\n      name: this.name,\n      users: this.users,\n      tasks: this.tasks,\n      user_emails: Object.keys(this.users)\n    }\n\n    return groupStore.add(group).then(res => {\n      console.log(res);\n      return res;\n    }).catch(err => {\n      errorStore.addError(err);\n    })\n  }\n\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\ndecorate(NewGroupStore, {\n  name: observable,\n  users: observable,\n  tasks: observable,\n  addUser: action,\n  addTask: action,\n  clear: action,\n});\n\nexport default new NewGroupStore();","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\";\n\nimport Button from \"./Button\";\nimport Input from \"./Input\";\n\nimport \"../styles/Main.scss\";\nimport \"../styles/NewGroup.scss\";\n\nimport newGroupStore from '../stores/newGroup';\nimport userStore from '../stores/users';\n\nconst NewGroup = observer(class NewGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      step: props.location.state ? props.location.state : \"your-name\",\n    };\n  }\n\n  formFlow = (current_step, next_step) => e => {\n    let newState = { step: next_step };\n    this.setState(newState);\n  };\n\n  addRoommate = () => {\n    let new_roommate = {\n      name: document.getElementById(\"roommate-name-input\").value,\n      email: document.getElementById(\"roommate-email-input\").value\n    };\n    document.getElementById(\"roommate-name-input\").value = \"\";\n    document.getElementById(\"roommate-email-input\").value = \"\";\n    newGroupStore.addUser(new_roommate.name, new_roommate.email);\n  };\n\n  onKeyPress = fn => e => {\n    if (e.key === 'Enter') {\n      fn();\n    }\n  }\n\n  onUsersName = () => {\n    const name = document.getElementById(\"user-name-input\").value;\n   \n    if (name && name.trim()) {\n      console.log(name)\n      this.formFlow(\"your-name\", \"group-name\")();\n      newGroupStore.addUser(name, userStore.currentUser);\n    }\n  }\n\n  getFormElement() {\n    let formElement;\n    let _this = this;\n    if (this.state.step === \"your-name\") {\n      formElement =(\n        <div className=\"form group-name\">\n          <p>What is your name?</p>\n          <Input id=\"user-name-input\" placeholder=\"Your Name\"\n            onKeyPress={this.onKeyPress(this.onUsersName)}\n          />\n          <Button\n            stylename=\"button--next\"\n            onClick={() => {this.onUsersName()}}\n          />\n        </div>\n      );\n    }\n\n    if (this.state.step === \"group-name\") {\n      formElement = (\n        <div className=\"form group-name\">\n          <p>What is your group name?</p>\n          <Button\n            stylename=\"button--back\"\n            onClick={this.formFlow(\"group-name\", \"your-name\")}\n          />\n          <Input id=\"group-name-input\" placeholder=\"Group Name\"\n            onKeyPress={this.onKeyPress(this.formFlow(\"group-name\", \"roommates\"))}\n            value={newGroupStore.name}\n            onChange={(e) => newGroupStore.name = e.target.value}\n          />\n          <Button\n            stylename=\"button--next\"\n            onClick={this.formFlow(\"group-name\", \"roommates\")}\n          />\n        </div>\n      );\n    } else if (this.state.step === \"roommates\") {\n      formElement = (\n        <div className=\"form roommates\">\n          <h4 className=\"form-title\">{this.state.groupName}</h4>\n          <p>Who are the roommates in this group?</p>\n          {Object.values(newGroupStore.users).map(function(roommate, index) {\n            return <div key={index}>{roommate.name} - {roommate.email}</div>;\n          })}\n          <Input id=\"roommate-name-input\" placeholder=\"Roommate Name\" />\n          <Input id=\"roommate-email-input\" placeholder=\"Roommate Email\" \n            onKeyPress={this.onKeyPress(_this.addRoommate)}\n          />\n          <div>\n            <Button\n              stylename=\"button--back\"\n              onClick={this.formFlow(\"roommates\", \"group-name\")}\n            />\n            <Button\n              stylename=\"button--call-to-action\"\n              onClick={_this.addRoommate}\n            >\n              {\" \"}\n              Add Roommate +\n            </Button>\n            <Link to={{ pathname: '/newchores', state: { groupName: this.state.groupName} }}>\n              <Button>Added All Roommates ></Button>\n            </Link>\n          </div>\n        </div>\n      );\n    }\n    return formElement;\n  }\n\n  render() {\n    let formElement = this.getFormElement();\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <div className=\"NewGroup\">{formElement}</div>\n        </div>\n      </div>\n    );\n  }\n})\n\nexport default NewGroup;\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\";\n\nimport Button from './Button';\nimport Input from './Input';\n\nimport '../styles/Main.scss';\nimport '../styles/NewGroup.scss';\n\nimport newGroupStore from '../stores/newGroup';\n\nconst suggestedChores = [\n  {\n    name: 'Do the dishes',\n    description: 'Don\\'t forget to squeeze out the sponge after.',\n    frequency: 'Daily'\n  },\n  {\n    name: 'Take out the trash',\n    description: 'Put in a new bag too!',\n    frequency: 'As Needed'\n  },\n  {\n    name: 'Maintenance request',\n    description: 'Let everyone know afterwards',\n    frequency: 'As Needed'\n  },\n  {\n    name: 'Vaccum the floor',\n    description: 'Empty out the vaccum after too.',\n    frequency: 'Biweekly'\n  },\n  {\n    name: 'Sweep the floor',\n    description: 'Make sure to do a decent job.',\n    frequency: 'Biweekly'\n  },\n]\n\nconst NewChores = observer(class NewChores extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      suggestions: suggestedChores,\n    }\n  } \n\n  addChore = () => {\n    let new_chore = {\n      name: document.getElementById('chore-name-input').value,\n      description: document.getElementById('chore-email-input').value,\n      frequency: document.getElementById('chore-frequency-input').value\n    }\n    document.getElementById('chore-name-input').value = '';\n    document.getElementById('chore-email-input').value = '';\n    document.getElementById('chore-frequency-input').value = 'Daily';\n    newGroupStore.addTask(new_chore.name, new_chore.description, new_chore.frequency);\n  }\n\n  saveGroup = () => {\n    newGroupStore.save().then(group => {\n      this.props.history.push('/groups/' + group.id + '/tasks');\n      newGroupStore.clear();\n      console.log('cleared');\n    })\n  }\n\n  onKeyPress = fn => e => {\n    if (e.key === 'Enter') {\n      fn();\n    }\n  }\n\n  onSuggestionClick = (task, idx) => e => {\n    newGroupStore.addTask(task.name, task.description, task.frequency);\n    let newSuggestions = [...this.state.suggestions];\n    newSuggestions.splice(idx, 1);\n    this.setState({\n      suggestions: newSuggestions\n    });\n  }\n\n  render() {\n    const suggestions = this.state.suggestions.map((task, idx) => {\n      return (\n        <button key={idx} className=\"suggested-chores\" onClick={this.onSuggestionClick(task, idx)}>{task.name}</button>\n      );\n    })\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <div className=\"NewGroup\">\n            <div className=\"form roommates\">\n              <h4 className=\"form-title\">{newGroupStore.name}</h4>\n              <span>What are the chores y'all have to do?</span>\n              {\n                newGroupStore.tasks.map((task ) => { \n                  return <div className=\"chore-todo\" key={task.id}>{task.name} - {task.schedule}</div>\n                })\n              }\n              {\n                0 < suggestions.length ? (\n                  <div >\n                    <p>Suggestions</p>\n                    <div className=\"suggestions-container\">{suggestions}</div>\n                  </div>\n                ) : null\n              }\n              <p>Or create your own chore:</p>\n              <Input id=\"chore-name-input\" placeholder=\"Chore Name\"/>\n              <Input id=\"chore-email-input\" placeholder=\"Chore Description\"\n                onKeyPress={this.onKeyPress(this.addChore)}\n              />\n              <div style={{paddingTop: \"25px\"}}>Frequency:{\" \"}\n                <select id=\"chore-frequency-input\" defaultValue=\"daily\">\n                  <option value=\"Daily\">Daily</option>\n                  <option value=\"Weekly\">Weekly</option>\n                  <option value=\"Biweekly\">Biweekly</option>\n                  <option value=\"Monthly\">Monthly</option>\n                  <option value=\"As Needed\">As Needed</option>\n                </select>\n              </div>\n              <div>\n                <Link to={{ pathname: '/new', state: \"roommates\"}}>\n                  <Button\n                    stylename=\"button--back\"\n                  />\n                </Link>\n                <Button stylename=\"button--call-to-action\" onClick={this.addChore}> Add Chore +</Button>\n                <Button onClick={this.saveGroup}>Added All Chores ></Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n})\n\nexport default NewChores;\n","import React from \"react\";\n\nimport \"../styles/CircleInitials.scss\";\n\nconst CircleInitials = ({ name, color }) => {\n  const parts = name.split(\" \");\n  let initials = parts[0][0];\n  if (1 < parts.length) {\n    initials += parts[1][0];\n  }\n\n  return (\n    <p style={{ backgroundColor: color }} className=\"circle-initials\">\n      {initials}\n      <span class=\"full-name\">{name}</span>\n    </p>\n  );\n};\n\nexport default CircleInitials;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\"\n\nimport groupStore from '../stores/groups';\n\nimport '../styles/TaskCard.scss'\nimport CircleInitials from './CircleInitials';\n\nconst titleMappings = {\n  \"Daily\": \"TODAY\",\n  \"Weekly\": \"THIS WEEK\",\n  \"Biweekly\": \"IN THE NEXT TWO WEEKS\",\n  \"Monthly\": \"THIS MONTH\",\n  \"As Needed\": \"AS NEEDED\",\n  \"Coming up\": \"COMING UP\",\n}\n\nconst TaskCard = ({ tasks, title }) => {\n  if (tasks.length === 0) {\n    return null;\n  }\n  const items = tasks.map(task => {\n    console.log(task.currentQueue[0]);\n    const user = groupStore.group.users[task.currentQueue[0]];\n    console.log(task, groupStore.group.users);\n    return (\n      <li key={task.id} className=\"task-card-item\">\n          <span className=\"task-card-check\"><i className=\"far fa-check-circle\"></i></span>\n          <span>{task.name}</span> \n          <span className=\"task-card-right\">\n            <CircleInitials name={user.name} color={user.color} />\n            <Link className=\"task-card-focus-button\" to={\"/groups/\" + groupStore.group.id + \"/tasks/\" + task.id}><i className=\"fas fa-angle-right\"></i></Link>\n          </span>\n      </li>\n    )\n  })\n  return (\n    <section className=\"task-card\">\n      <ul className=\"task-card-list\">\n        <header className=\"task-card-title\"> \n          {titleMappings[title] ? titleMappings[title] : title}\n        </header>\n        {items}\n      </ul>\n    </section>\n  )\n}\n\nexport default observer(TaskCard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\"\n\nimport groupStore from '../stores/groups';\nimport userStore from '../stores/users';\n\nimport '../styles/Notif.scss';\n\nconst Notif = observer(class Notif extends Component {\n  render() {\n    return (\n      <div id={this.props.id} className=\"Notif\">\n        {this.props.notifText}\n      </div>\n    )\n  }\n});\n\nexport default Notif;","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\"\n\nimport groupStore from '../stores/groups';\nimport userStore from '../stores/users';\nimport CircleInitials from './CircleInitials';\nimport CallToActionButton from './CallToActionButton';\nimport Notif from \"./Notif.js\";\n\nimport '../styles/FocusedTask.scss'\n\nconst FocusedTask = ({ task, closeURL }) => {\n  const queue = task.currentQueue.map(email => {\n    const user = groupStore.group.users[email];\n    return (\n      <li key={email} className=\"focused-task-queue-item\">\n        <span><CircleInitials name={user.name} color={user.color} style={{display: 'inline'}} />{user.name}</span>\n      </li>\n    )\n  })\n\n  const handleComplete = () => {\n    document.getElementById(task.name).style.top = 0;\n    task.currentQueue.push(task.currentQueue.shift());\n    setTimeout(()=>{document.getElementById(task.name).style.top = \"-50px\";}, 2000);\n  }\n\n  let random_churros = Math.floor(Math.random() * 100);\n\n  return (\n    <section className=\"focused-task-card\">\n      <Notif id={task.name} notifText={task.name+\" - Done! You earned \" + random_churros + \" churros!\"}/>\n      <div className=\"focused-task-content\">\n        <header className=\"focused-task-card-name\"> \n          <div className=\"focused-task-close\">\n            <Link className=\"focused-task-close-button\" to={closeURL}>x</Link>\n          </div>\n          <h2>{task.name}</h2>\n        </header>\n        <p className=\"focused-task-card-desc\">\n          {task.description}\n        </p>\n\n        <ul className=\"focused-task-queue\">\n          {queue}\n        </ul>\n        {userStore.currentUser == task.currentQueue[0] ?\n          (<CallToActionButton onClick={handleComplete}>COMPLETE TASK</CallToActionButton>)\n          :\n          null\n         }\n        \n      </div>\n    </section>\n  )\n}\n\nexport default observer(FocusedTask);\n","import React from \"react\";\n\nimport \"../styles/AddChoreButton.scss\";\n\nconst AddChoreButton = props => {\n  return <button className=\"chore-button\">+</button>;\n};\n\nexport default AddChoreButton;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\";\nimport Spinner from \"react-spinkit\";\n\nimport TaskCard from \"./TaskCard\";\nimport Button from \"./Button\";\nimport FocusedTask from \"./FocusedTask\";\nimport NavBar from \"./NavBar\";\nimport AddChoreButton from \"./AddChoreButton\";\nimport Notif from \"./Notif.js\";\nimport HelpTool from \"./HelpTool.js\";\n\nimport groupStore from \"../stores/groups\";\nimport userStore from \"../stores/users\";\n\nimport \"../styles/MyTasks.scss\";\nimport churro from \"../img/churro.svg\";\n\nconst MyTasks = observer(\n  class MyTasks extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        all: true\n      };\n    }\n\n    componentDidMount() {\n      const groupID = this.props.match.params.group;\n      groupStore.get(groupID);\n    }\n\n    render() {\n      let content = <Spinner className=\"center\" name=\"double-bounce\" />;\n      const groupID = this.props.match.params.group;\n      if (!groupStore.isFetching) {\n        let focusedTask;\n        const tasks = groupStore.group.tasks.reduce(\n          (m, task) => {\n            if (this.props.match.params.id) {\n              if (task.id.toString() === this.props.match.params.id) {\n                focusedTask = task;\n              }\n            }\n\n            if (!this.state.all) {\n              if (task.currentQueue[0] === userStore.currentUser) {\n                m[task.schedule].push(task);\n              } else if (\n                1 < task.currentQueue.length &&\n                task.currentQueue[1] === userStore.currentUser\n              ) {\n                m[\"Coming up\"].push(task);\n              }\n            } else {\n              m[task.schedule].push(task);\n            }\n\n            return m;\n          },\n          {\n            Daily: [],\n            Weekly: [],\n            Biweekly: [],\n            Monthly: [],\n            \"As Needed\": [],\n            \"Coming up\": []\n          }\n        );\n\n        const cards = Object.entries(tasks).map(kv => {\n          return <TaskCard key={kv[0]} title={kv[0]} tasks={kv[1]} />;\n        });\n\n        content = (\n          <div className=\"MyTasks\">\n            <div className=\"group-heading center\">\n              <img className=\"churro-img\" src={churro} alt=\"logo\" />\n              <h1>{groupStore.group.name}</h1>\n            </div>\n            <p className=\"chores-list-title center\">Chores List</p>\n            <section className=\"my-tasks-columns\">\n              <div className=\"my-tasks-cards\">{cards}</div>\n              {focusedTask && (\n                <FocusedTask\n                  task={focusedTask}\n                  closeURL={\"/groups/\" + groupID + \"/tasks\"}\n                />\n              )}\n            </section>\n          </div>\n        );\n      }\n\n      return (\n        <div>\n          <NavBar />\n          {content}\n          <Link to={\"/groups/\" + groupID + \"/leaderboard\"}>\n            <Button stylename=\"button--leaderboard\">Leaderboard</Button>\n          </Link>\n          <Link to={\"/groups/\" + groupID + \"/addchore\"}>\n            <AddChoreButton />\n          </Link>\n          <HelpTool info=\"yoooo this is some text  yoooo this is some text yoooo this is some text\" />\n        </div>\n      );\n    }\n  }\n);\n\nexport default MyTasks;\n","import React, { Component } from 'react';\nimport { observer } from \"mobx-react\"\n\nimport Button from './Button';\nimport Input from './Input';\n\nimport userStore from '../stores/users';\n\nimport '../styles/Main.scss';\nimport '../styles/NewGroup.scss';\n\n\n\nconst Login = observer(class Login extends Component {\n  emailRE = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: '',\n      styles: {},\n      validEmail: false,\n    };\n\n    this.onKeyPress = this.onKeyPress.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this); \n  }\n\n  onKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit();\n    }\n  }\n\n  handleChange(e) {\n    this.setState({\n      input: e.target.value,\n      styles: {}\n    });\n  }\n\n  handleSubmit() {\n    if (this.state.validEmail){\n      let params = new URLSearchParams(this.props.location.search);\n      const next = params.get('redirect') ? params.get('redirect') : '/groups';\n      this.props.history.push(next);\n    } else if (this.state.input.trim() && this.emailRE.test(this.state.input)) {\n      userStore.setCurrentUser(this.state.input);\n      this.setState({\n        input: \"\",\n        validEmail: true,\n      })\n    } else {\n      this.setState({\n        input: this.state.input,\n        styles: {\n          borderBottom: \"3px solid #E00747\"\n        }\n      })\n    }\n  }\n\n  emailInput() {\n    return (\n      <span>\n        <p>What is your email?</p>\n        <Input id=\"group-name-input\" style={this.state.styles} placeholder=\"Email\" value={this.state.input} onChange={this.handleChange} onKeyPress={this.onKeyPress} />\n      </span>\n    );\n  }\n\n  passwordInput() {\n    return (\n      <span>\n        <p>What is your password?</p>\n        <Input id=\"group-name-input\" placeholder=\"Password\" value={this.state.input} onChange={this.handleChange} onKeyPress={this.onKeyPress} />\n      </span>\n    );\n  }\n\n  render() {\n    let html = this.state.validEmail ? this.passwordInput() : this.emailInput();\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <div className=\"NewGroup\">\n          <div className=\"form group-name\">\n            {html}\n            <Button stylename=\"button--next\" onClick={this.handleSubmit} />\n          </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n});\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport NavBar from \"./NavBar\";\nimport Input from \"./Input\";\nimport Button from \"./Button\";\nimport Notif from \"./Notif\";\n\nimport \"../styles/AddChore.scss\";\n\nimport groupStore from '../stores/groups';\n\nclass AddChore extends Component {\n  handleComplete = () => {\n    document.getElementById(\"add-chore-popup\").style.top = 0;\n    setTimeout(()=>{document.getElementById(\"add-chore-popup\").style.top = \"-50px\";}, 3000);\n  }\n\n  addChore = () => {\n    let new_chore = {\n      name: document.getElementById('task-name').value,\n      description: document.getElementById('task-desc').value,\n      frequency: document.getElementById('task-freq').value\n    }\n    document.getElementById('task-name').value = '';\n    document.getElementById('task-desc').value = '';\n    document.getElementById('task-freq').value = 'Daily';\n    console.log(new_chore);\n    groupStore.addTask(new_chore.name, new_chore.description, new_chore.frequency);\n    this.handleComplete();\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar />\n        <div className=\"MyTasks center AddChore\">\n          <Notif id=\"add-chore-popup\" notifText=\"Chore was added!\" />\n          <h2>Add Chore</h2>\n          <Input id=\"task-name\" placeholder=\"Chore Name\" />\n          <br />\n          <textarea\n            className=\"text-input\"\n            id=\"task-desc\"\n            placeholder=\"Chore Description\"\n          />\n          <br />\n          Frequency:{\" \"}\n          <select id=\"task-freq\" defaultValue=\"daily\">\n            <option value=\"Daily\">Daily</option>\n            <option value=\"Weekly\">Weekly</option>\n            <option value=\"Biweekly\">Biweekly</option>\n            <option value=\"Monthly\">Monthly</option>\n            <option value=\"As Needed\">As Needed</option>\n          </select>\n          <br />\n          <Button stylename=\"button--call-to-action\" onClick={this.addChore}>Add Chore</Button>\n          <Button stylename=\"\" onClick={() => this.props.history.goBack()}>Cancel</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddChore;\n","import React, { Component } from 'react';\nimport { observer } from \"mobx-react\"\nimport { Link } from \"react-router-dom\";\nimport Spinner from 'react-spinkit';\n\n\nimport userStore from '../stores/users';\n\nimport '../styles/Main.scss';\nimport '../styles/NewGroup.scss';\nimport '../styles/GroupList.scss';\n\nconst GroupList = observer(class GroupList extends Component {\n  constructor(props) {\n    super(props);\n    userStore.fetchCurrentUsersGroups();\n  }\n\n  render() {\n    let content = (\n      <div>\n        <Spinner name='double-bounce' />\n      </div>\n    );\n\n    if (!userStore.fetching) {\n      const groups = userStore.usersGroups.map(group => {\n        return (\n          <li key={group.id}>\n            <Link to={\"/groups/\" + group.id + \"/tasks\"}>{group.name}</Link>\n          </li>\n        )\n      });\n      content = (\n        <section className=\"GroupList\">\n          <h1>Your Groups</h1>\n          <ul className=\"list-container\">\n            {groups}\n          </ul>\n        </section>\n      )\n    }\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <div className=\"NewGroup\">\n          <div className=\"form group-name\">\n            {content}\n          </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n});\n\nexport default GroupList;\n","import React, { Component } from 'react';\nimport { observer } from \"mobx-react\"\nimport { Link } from \"react-router-dom\";\nimport Spinner from 'react-spinkit';\n\nimport userStore from '../stores/users';\nimport groupStore from '../stores/groups';\n\nimport NavBar from \"./NavBar\";\n\nimport '../styles/Main.scss';\nimport '../styles/NewGroup.scss';\nimport '../styles/GroupList.scss';\nimport '../styles/Leaderboard.scss';\n\nconst Leaderboard = observer(class GroupList extends Component {\n  componentDidMount() {\n    const groupID = this.props.match.params.group;\n    groupStore.get(groupID);\n  }\n\n  render() {\n    let content = (\n      <div>\n        <Spinner name='double-bounce' />\n      </div>\n    );\n\n    const groupID = this.props.match.params.group;\n    let leaderboard = '';\n    if (!groupStore.isFetching) {\n      let users = groupStore.group.users;\n      leaderboard = Object.entries(users).map(kv=>{\n        return (\n          <tr className=\"leaderboard-row\" key={kv[0]}>\n            <td>{kv[1].name}</td>\n            <td>{Math.floor(Math.random() * 100)}</td>\n          </tr>)\n      });\n    }\n    content = (\n      <section className=\"GroupList\">\n        <h1>Leaderboard</h1>\n        <table className=\"leaderboard-table\">\n          <thead>\n          <tr className=\"leaderboard-row\">\n            <th>Name</th>\n            <th>Churros</th>\n          </tr>\n          </thead>\n          <tbody>{leaderboard}</tbody>\n        </table>\n      </section>\n    )\n    return (\n      <div>\n      <NavBar />\n        <div className=\"container\">\n          <div className=\"NewGroup\">\n          <div className=\"form group-name\">\n            {content}\n          </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n});\n\nexport default Leaderboard;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport AuthenticatedRoute from './components/AuthenticatedRoute';\n\nimport Main from \"./components/Main\";\nimport NewGroup from \"./components/NewGroup\";\nimport NewTasks from \"./components/NewTasks\";\nimport MyTasks from \"./components/MyTasks\";\nimport Login from \"./components/Login\";\nimport AddChore from \"./components/AddChore\";\nimport GroupList from \"./components/GroupList\";\nimport Leaderboard from \"./components/Leaderboard\";\n\nimport \"./styles/index.scss\";\n\nconst App = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <main>\n      <Route path=\"/\" exact component={Main} />\n      <Route path=\"/login\" exact component={Login} />\n      <AuthenticatedRoute path=\"/new\" exact component={NewGroup} />\n      <AuthenticatedRoute path=\"/groups/:group/leaderboard\" exact component={Leaderboard} />\n      <AuthenticatedRoute path=\"/newchores\" exact component={NewTasks} />\n      <AuthenticatedRoute path=\"/groups\" exact component={GroupList} />\n      <AuthenticatedRoute path=\"/groups/:group/tasks\" exact component={MyTasks} />\n      <AuthenticatedRoute path=\"/groups/:group/tasks/:id\" exact component={MyTasks} />\n      <AuthenticatedRoute path=\"/groups/:group/addchore\" exact component={AddChore} />\n    </main>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/churro.1b9bd282.svg\";"],"sourceRoot":""}