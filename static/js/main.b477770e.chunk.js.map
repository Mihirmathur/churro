{"version":3,"sources":["components/Main.js","store.js","components/CircleInitials.js","components/TaskCard.js","components/FocusedTask.js","components/MyTasks.js","App.js","serviceWorker.js","index.js"],"names":["Main","react_default","a","createElement","className","Link","to","Component","store","users","345345dafasdf","name","color","adf89dsaf980809df","gfg09h8dfs0g98df09g","908fdsg09dfg809","tasks","id","schedule","description","currentQueue","CircleInitials","_ref","parts","split","initials","style","backgroundColor","TaskCard","title","length","items","map","task","user","key","components_CircleInitials","FocusedTask","queue","display","MyTasks","focusedTask","_this","this","reduce","m","props","match","params","push","Daily","Weekly","Biweekly","Monthly","As needed","Coming up","cards","Object","entries","kv","components_TaskCard","console","log","components_FocusedTask","App","BrowserRouter","basename","process","Route","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b477770e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport '../styles/Main.scss';\n\nclass Main extends Component {\n  render() {\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <h2 className=\"welcome-header\">Welcome to Churro!</h2>\n          <h4 className=\"welcome-subheader\">The New Way to Manage Chores</h4>\n          <div className=\"button-container\">\n            <button className=\"button button--new-group\">START A NEW GROUP</button>\n            <Link to=\"/tasks\"><button className=\"button button--login\">LOGIN</button></Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","const users = {\n  '345345dafasdf': {\n    name: 'Martin Kong',\n    color: 'tomato'\n  },\n  'adf89dsaf980809df': {\n    name: 'Mihir Mathur',\n    color: 'teal'\n  },\n  'gfg09h8dfs0g98df09g': {\n    name: 'Hao Nguyen',\n    color: 'turquoise'\n  },\n  '908fdsg09dfg809': {\n    name: 'Cody Ley-Han',\n    color: 'forestGreen'\n  }\n}\n\nconst tasks = [\n  {\n    id: '3124lk1234',\n    name: 'Take out trash',\n    schedule: 'As needed',\n    description: 'Take out the trash and make sure that you put a new bag in the thing, also don\\'t throw recyclables in the trash',\n    currentQueue: [\n      '345345dafasdf',\n      'adf89dsaf980809df',\n      'gfg09h8dfs0g98df09g',\n      '908fdsg09dfg809',\n    ]\n  },\n  {\n    id: '432jadffia0d9f',\n    name: 'Get the mail',\n    schedule: 'Daily',\n    description: 'Just grab the mail and put it on the table when you get it',\n    currentQueue: [\n      '908fdsg09dfg809',\n      'adf89dsaf980809df',\n      'gfg09h8dfs0g98df09g',\n      '345345dafasdf',\n    ]\n  },\n  {\n    id: 'fasdf89sadf8',\n    name: 'Sweep the kitchen',\n    description: 'Make sure to do a good job so it doesn\\'t get all nasty',\n    schedule: 'Monthly',\n    currentQueue: [\n      'gfg09h8dfs0g98df09g',\n      '908fdsg09dfg809',\n      '345345dafasdf',\n      'adf89dsaf980809df',\n    ]\n  },\n  {\n    id: 'a90f8sad9fas',\n    name: 'Maintanence Request',\n    description: 'The forms are in the closet if we need something done, hopefully not.  This also includes being there when someone comes',\n    schedule: 'As needed',\n    currentQueue: [\n      '908fdsg09dfg809',\n      '345345dafasdf',\n      'adf89dsaf980809df',\n      'gfg09h8dfs0g98df09g',\n    ]\n  },\n  {\n    id: 'dsf9sdaf0asd89f9asdf',\n    name: 'Vaccum carpet',\n    schedule: 'Biweekly',\n    description: 'Pretty easy just make sure to clean out the thing after you\\re done',\n    currentQueue: [\n      '908fdsg09dfg809',\n      '345345dafasdf',\n      'adf89dsaf980809df',\n      'gfg09h8dfs0g98df09g',\n    ]\n  },\n  {\n    id: 'jkll2k5j4l3k5',\n    name: 'Clean counters',\n    description: 'Use the chlorox wipes under the sink',\n    schedule: 'Daily',\n    currentQueue: [\n      '908fdsg09dfg809',\n      '345345dafasdf',\n      'adf89dsaf980809df',\n      'gfg09h8dfs0g98df09g',\n    ]\n  },\n  {\n    id: 'h8439582435',\n    name: 'Put trash out',\n    schedule: 'Weekly',\n    description: 'Has to be put out every week by 5AM Monday morning',\n    currentQueue: [\n      '908fdsg09dfg809',\n      '345345dafasdf',\n      'adf89dsaf980809df',\n      'gfg09h8dfs0g98df09g',\n    ]\n  }\n]\n\n\nexport default {\n  users,\n  tasks\n}","import React from 'react';\n\nimport store from '../store';\n\nimport '../styles/CircleInitials.scss'\n\nconst CircleInitials = ({ name, color }) => {\n  const parts = name.split(\" \");\n  const initials = parts[0][0] + parts[1][0]; \n\n  return (\n    <p style={{backgroundColor: color}} className=\"circle-initials\">\n      {initials}\n    </p>\n  )\n}\n\nexport default CircleInitials;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport store from '../store';\n\nimport '../styles/TaskCard.scss'\nimport './CircleInitials';\nimport CircleInitials from './CircleInitials';\n\nconst TaskCard = ({title, tasks}) => {\n  if (tasks.length === 0) {\n    return null;\n  }\n\n  const items = tasks.map(task => {\n    const user = store.users[task.currentQueue[0]];\n\n    return (\n      <li key={task.id} className=\"task-card-item\">\n        <span>\n          <span className=\"task-card-check\"><i className=\"far fa-check-circle\"></i></span>\n          {task.name} \n          <span className=\"task-card-right\">\n            <CircleInitials name={user.name} color={user.color} />\n            <Link className=\"task-card-focus-button\" to={\"/tasks/\" + task.id}><i className=\"fas fa-angle-right\"></i></Link>\n          </span>\n        </span>\n      </li>\n    )\n  })\n  return (\n    <section className=\"task-card\">\n      <header className=\"task-card-title\"> \n        {title}\n      </header>\n      <ul className=\"task-card-list\">\n        {items}\n      </ul>\n    </section>\n  )\n}\n\nexport default TaskCard;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport store from '../store';\nimport CircleInitials from './CircleInitials';\n\nimport '../styles/FocusedTask.scss'\n\nconst FocusedTask = ({ task }) => {\n  const queue = task.currentQueue.map(id => {\n    const user = store.users[id];\n\n    return (\n      <li key={id} className=\"focused-task-queue-item\">\n        <span><CircleInitials name={user.name} color={user.color} style={{display: 'inline'}} /> {user.name}</span>\n      </li>\n    )\n  });\n\n\n  return (\n    <section className=\"focused-task-card\">\n      <div className=\"focused-task-content\">\n        <div className=\"focused-task-close\">\n          <Link className=\"focused-task-close-button\" to=\"/tasks\">x</Link>\n        </div>\n        <header className=\"focused-task-card-name\"> \n          <h2>{task.name}</h2>\n        </header>\n\n        <h4>Description</h4>\n        <p className=\"focused-task-card-desc\">\n          {task.description}\n        </p>\n\n        <h4>Current Queue</h4>\n        <ul className=\"focused-task-queue\">\n          {queue}\n        </ul>\n\n        <button className=\"focused-task-button focused-task-button-complete\">Complete Task</button>\n      </div>\n    </section>\n  )\n}\n\nexport default FocusedTask;\n","import React, { Component } from 'react';\n\nimport TaskCard from './TaskCard';\nimport FocusedTask from './FocusedTask';\n\nimport store from '../store';\nimport '../styles/MyTasks.scss';\n\nclass MyTasks extends Component {\n  render() {\n    let focusedTask;\n\n    const tasks = store.tasks.reduce((m, task) => {\n      if (this.props.match.params.id) {\n        if (task.id === this.props.match.params.id) {\n          focusedTask = task;\n        }\n      }\n\n      if (task.currentQueue[0] === '908fdsg09dfg809') {\n        m[task.schedule].push(task);\n      } else if (task.currentQueue[1] === '908fdsg09dfg809') {\n        m[\"Coming up\"].push(task);\n      }\n      \n      return m;\n    }, {\n      \"Daily\": [],\n      \"Weekly\": [],\n      \"Biweekly\": [],\n      \"Monthly\": [],\n      \"As needed\": [],\n      \"Coming up\": [],\n    });\n\n    const cards = Object.entries(tasks).map(kv => {\n      return (<TaskCard key={kv[0]} title={kv[0]} tasks={kv[1]}/>)\n    })\n\n    console.log(focusedTask);\n    return (\n      <div className=\"MyTasks\">\n        <h1>The CSS Slayers</h1>\n        <h2>My Tasks</h2>\n        \n        <section className=\"my-tasks-columns\">\n         <div className=\"my-tasks-cards\">\n          {cards}\n         </div>\n         {focusedTask && (<FocusedTask task={focusedTask} />)}\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default MyTasks;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Main from './components/Main';\nimport MyTasks from './components/MyTasks';\n\nimport './styles/index.scss';\n\nconst App = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <main>\n      <Route path=\"/\" exact component={Main} />\n      <Route path=\"/tasks\" exact component={MyTasks} />\n      <Route path=\"/tasks/:id\" component={MyTasks} />\n    </main>    \n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}