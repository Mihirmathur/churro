{"version":3,"sources":["Firebase.js","stores/errors.js","stores/groups.js","stores/users.js","components/AuthenticatedRoute.js","components/CallToActionButton.js","components/Button.js","components/Main.js","components/Input.js","components/NewGroup.js","components/CircleInitials.js","components/TaskCard.js","components/Notif.js","components/FocusedTask.js","components/NavBar.js","components/AddChoreButton.js","components/MyTasks.js","components/Login.js","components/AddChore.js","components/GroupList.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ErrorStore","errors","timeoutFn","_this","this","clearTimeout","setTimeout","err","push","waitAndClear","length","decorate","observable","hasErrors","computed","GroupStore","Object","classCallCheck","group","isFetching","userColors","db","firestore","settings","timestampsInSnapshots","collection","autorun","updateGroup","delay","id","_this2","doc","get","then","exists","data","console","log","catch","errorStore","addError","email","_this3","where","docs","empty","groups","forEach","item","name","userEmails","tasks","_this4","users","map","idx","color","user_emails","add","set","res","action","getUsersGroups","stores_groups","STORAGE_KEY","UserStore","currentUser","usersGroups","fetching","localStorage","getItem","removeItem","user","setItem","isLoggedIn","groupStore","setCurrentUser","getCurrentUsersGroups","stores_users","AuthRoute","_ref","Component","component","rest","objectWithoutProperties","react_default","a","createElement","Route","assign","render","props","userStore","Redirect","to","CallToActionButton","className","children","Button","stylename","concat","Main","elem","document","getElementById","style","left","opacity","Link","components_CallToActionButton","onClick","transitionOut","components_Button","Input","NewGroup","possibleConstructorReturn","getPrototypeOf","call","formFlow","current_step","next_step","e","newState","step","groupName","value","setState","addRoommate","roommates","state","new_roommate","formElement","components_Input","placeholder","roommate","index","key","getFormElement","CircleInitials","parts","split","initials","backgroundColor","observer","title","items","task","currentQueue","components_CircleInitials","Notif","_Component","apply","arguments","inherits","createClass","notifText","FocusedTask","closeURL","queue","display","components_Notif","description","top","shift","NavBar","BurgerMenu","NavLink","exact","logout","AddChoreButton","MyTasks","groupID","match","params","content","dist_default","focusedTask","reduce","m","schedule","Daily","Weekly","Biweekly","Monthly","As needed","Coming up","cards","entries","kv","components_TaskCard","components_FocusedTask","components_NavBar","components_AddChoreButton","Login","emailRE","styles","handleChange","bind","assertThisInitialized","handleSubmit","target","trim","test","history","borderBottom","onChange","AddChore","addChore","redirect","renderRedirect","defaultValue","GroupList","fetchCurrentUsersGroups","App","BrowserRouter","basename","process","path","AuthenticatedRoute","Boolean","window","location","hostname","ReactDOM","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2VAEAA,IAASC,cAAc,CACrBC,OAAQ,0CACRC,WAAY,+BACZC,YAAa,sCACbC,UAAW,eACXC,cAAe,GACfC,kBAAmB,iBAGNP,QAAf,ECTMQ,mDACJC,OAAS,QACTC,UAAY,gEAEG,IAAAC,EAAAC,KACU,OAAnBA,KAAKF,WACPG,aAAaD,KAAKF,WAEpBE,KAAKF,UAAYI,WAAW,WAC3BH,EAAKF,OAAS,GACdE,EAAKD,UAAY,MACf,qCAIHE,KAAKH,OAAS,oCAGPM,GACPH,KAAKH,OAAOO,KAAKD,GACjBH,KAAKK,iDAIL,OAAO,EAAIL,KAAKH,OAAOS,gBAI3BC,YAASX,EAAY,CACnBC,OAAQW,IACRC,UAAWC,MAGE,IAAAb,EAAA,IAAID,EC9Bbe,aAqBJ,SAAAA,EAAYvB,GAAU,IAAAW,EAAAC,KAAAY,OAAAC,EAAA,EAAAD,CAAAZ,KAAAW,GAAAX,KApBtBc,MAAQ,KAoBcd,KAnBtBe,YAAa,EAmBSf,KAjBtBgB,WAAa,CACX,SACA,OACA,OACA,YACA,cACA,YACA,kBACA,aACA,OACA,YACA,YACA,OACA,gBACA,kBAKA,IAAIC,EAAK7B,EAAS8B,YAGlBD,EAAGE,SAAS,CACVC,uBAAuB,IAEzBpB,KAAKiB,GAAKA,EAAGI,WAAW,UACxBC,YAAQ,kBAAMvB,EAAKwB,eAAe,CAAEC,MAAO,sDAGzCC,GAAI,IAAAC,EAAA1B,KACN,GAAmB,OAAfA,KAAKc,OAAkBd,KAAKc,MAAMW,KAAOA,EAK7C,OADAzB,KAAKe,YAAa,EACXf,KAAKiB,GAAGU,IAAIF,GAAIG,MAAMC,KAAK,SAACF,GACjC,GAAKA,EAAIG,OAQT,OAHAJ,EAAKZ,MAAQa,EAAII,OACjBL,EAAKZ,MAAMW,GAAKA,EAChBC,EAAKX,YAAa,EACXW,EAAKZ,MAPVkB,QAAQC,IAAI,uBAAyBR,KAQtCS,MAAM,SAAA/B,GACPuB,EAAKX,YAAa,EAClBoB,EAAWC,SAASjC,4CAITkC,GAAO,IAAAC,EAAAtC,KAEpB,OADAgC,QAAQC,IAAII,GACLrC,KAAKiB,GAAGsB,MAAM,cAAe,iBAAkBF,GAAOT,MAAMC,KAAK,SAACW,GACvE,IAAIA,EAAKC,MAAT,CAKA,IAAIC,EAAS,GASb,OARAF,EAAKG,QAAQ,SAAAhB,GACX,IAAMb,EAAQa,EAAII,OACda,EAAQ,CACVnB,GAAIE,EAAIF,GACRoB,KAAM/B,EAAM+B,MAEdH,EAAOtC,KAAKwC,KAEPF,EAbLV,QAAQC,IAAI,iCAAmCI,KAchDH,MAAM,SAAA/B,GACPmC,EAAKvB,YAAa,EAClBoB,EAAWC,SAASjC,iCAIpB0C,EAAMC,EAAYC,GAAO,IAAAC,EAAAhD,KAQrBc,EAAQ,CACZ+B,OACAI,MATYH,EAAWI,IAAI,SAACb,EAAOc,GACnC,MAAO,CACLd,QACAe,MAAOJ,EAAKhC,WAAWmC,EAAIH,EAAKhC,WAAWV,WAO7CyC,QACAM,YAAaP,GAGf,OAAO9C,KAAKiB,GAAGqC,IAAIxC,GAAOe,KAAK,SAAAF,GAG7B,OAFAb,EAAMW,GAAKE,EAAIF,GACfO,QAAQC,IAAInB,GACLA,IACNoB,MAAM,SAAA/B,GACPgC,EAAWC,SAASjC,2CAKH,OAAfH,KAAKc,OAGTd,KAAKiB,GAAGU,IAAI3B,KAAKc,MAAMW,IAAI8B,IAAIvD,KAAKc,OAAOe,KAAK,SAAA2B,GAC9CxB,QAAQC,IAAI,gCACXC,MAAM,SAAA/B,GACPgC,EAAWC,SAASjC,cAK1BI,YAASI,EAAY,CACnBG,MAAON,IACPO,WAAYP,IACZoB,IAAK6B,IACLC,eAAgBD,IAChBH,IAAKG,MAIQ,IAAAE,EAAA,IAAIhD,EAAWvB,GC7HxBwE,EAAc,cAEdC,aAKJ,SAAAA,IAAejD,OAAAC,EAAA,EAAAD,CAAAZ,KAAA6D,GAAA7D,KAJf8D,YAAc,GAIA9D,KAHd+D,YAAc,GAGA/D,KAFdgE,UAAW,EAGLC,aAAaC,QAAQN,KACvB5D,KAAK8D,YAAcG,aAAaC,QAAQN,yDAS1C5D,KAAK8D,YAAc,GACnB9D,KAAK+D,YAAc,GACnBE,aAAaE,WAAWP,0CAGXQ,GACbpE,KAAK8D,YAAcM,EACnBpC,QAAQC,IAAI,uBAAyBjC,KAAK8D,aAC1CG,aAAaI,QAAQT,EAAaQ,qDAGV,IAAArE,EAAAC,KACnBA,KAAKsE,aAGVtE,KAAKgE,UAAW,EAChBO,EAAWb,eAAe1D,KAAK8D,aAC5BjC,KAAK,SAAAa,GACJV,QAAQC,IAAIS,GACZ3C,EAAKgE,YAAcrB,EAAOQ,IAAI,SAAApC,GAC5B,MAAO,CACLW,GAAIX,EAAMW,GACVoB,KAAM/B,EAAM+B,QAGhB9C,EAAKiE,UAAW,IACf9B,MAAM,SAAA/B,GACP6B,QAAQC,IAAI9B,GACZJ,EAAKiE,UAAW,wCAhCpB,MAA4B,KAArBhE,KAAK8D,qBAqChBvD,YAASsD,EAAW,CAClBC,YAAatD,IACbuD,YAAavD,IACbyC,MAAOzC,IACPwD,SAAUxD,IACV8D,WAAY5D,IACZ8D,eAAgBf,IAChBgB,sBAAuBhB,MAGV,IAAAiB,EAAA,IAAIb,EC3CJc,EAjBG,SAAAC,GAAuC,IAAzBC,EAAyBD,EAApCE,UAAyBC,EAAWnE,OAAAoE,EAAA,EAAApE,CAAAgE,EAAA,eACvD,OACEK,EAAAC,EAAAC,cAACC,EAAA,EAADxE,OAAAyE,OAAA,GACMN,EADN,CAEEO,OAAQ,SAAAC,GAAK,OACXC,EAAUlB,WACRW,EAAAC,EAAAC,cAACN,EAAcU,GAEfN,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACEC,GAAG,wCCJAC,SANY,SAACJ,GAC1B,OACEN,EAAAC,EAAAC,cAAA,SAAAvE,OAAAyE,OAAA,CAAQO,UAAU,iCAAoCL,GAASA,EAAMM,YCM1DC,EARA,SAACP,GACd,IAAIQ,EAAY,GAEhB,OADIR,GAASA,EAAMQ,YAAWA,EAAYR,EAAMQ,WAE9Cd,EAAAC,EAAAC,cAAA,SAAAvE,OAAAyE,OAAA,CAAQO,UAAS,UAAAI,OAAYD,IAAiBR,GAAUA,EAAMM,WCyBnDI,iMAvBX,IAAIC,EAAOC,SAASC,eAAe,WACnCF,EAAKG,MAAMC,KAAO,OAClBJ,EAAKG,MAAME,QAAU,mCAIrB,OACEtB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,QACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,aACbX,EAAAC,EAAAC,cAAA,OAAK1D,GAAG,WACNwD,EAAAC,EAAAC,cAAA,MAAIS,UAAU,kBAAd,sBACAX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,qBAAd,gCACAX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACbX,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAMd,GAAG,QAAOT,EAAAC,EAAAC,cAACsB,EAAD,CAAoBC,QAAS1G,KAAK2G,eAAlC,sBAChB1B,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAMd,GAAG,UAAST,EAAAC,EAAAC,cAACyB,EAAD,0BAhBb/B,cCEJgC,SAND,SAACtB,GACb,OACEN,EAAAC,EAAAC,cAAA,QAAAvE,OAAAyE,OAAA,CAAOO,UAAU,SAAYL,GAAUA,EAAMM,YC4FlCiB,qBAvFb,SAAAA,EAAYvB,GAAO,IAAAxF,EAAA,OAAAa,OAAAC,EAAA,EAAAD,CAAAZ,KAAA8G,IACjB/G,EAAAa,OAAAmG,EAAA,EAAAnG,CAAAZ,KAAAY,OAAAoG,EAAA,EAAApG,CAAAkG,GAAAG,KAAAjH,KAAMuF,KAQR2B,SAAW,SAACC,EAAcC,GAAf,OAA6B,SAAAC,GACtC,IAAIC,EAAW,CAAEC,KAAMH,GACH,cAAhBD,IACFG,EAASE,UAAYrB,SAASC,eAAe,oBAAoBqB,OAEnE1H,EAAK2H,SAASJ,KAdGvH,EAiBnB4H,YAAc,WACZ,IAAIC,EAAY7H,EAAK8H,MAAMD,UACvBE,EAAe,CACjBjF,KAAMsD,SAASC,eAAe,uBAAuBqB,MACrDpF,MAAO8D,SAASC,eAAe,wBAAwBqB,OAEzDG,EAAUxH,KAAK0H,GACf3B,SAASC,eAAe,uBAAuBqB,MAAQ,GACvDtB,SAASC,eAAe,wBAAwBqB,MAAQ,GACxD1H,EAAK2H,SAAS,CAAEE,UAAWA,KAxB3B7H,EAAK8H,MAAQ,CACXN,KAAM,aACNC,UAAW,GACXI,UAAW,IALI7H,gFA8BjB,IAAIgI,EACAH,EAAY5H,KAAK6H,MAAMD,UAyC3B,MAvCuB,cAAnB5H,KAAK6H,MAAMN,KACbQ,EACE9C,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAAC6C,EAAD,CAAOvG,GAAG,mBAAmBwG,YAAY,eACzChD,EAAAC,EAAAC,cAACyB,EAAD,CACEb,UAAU,eACVW,QAAS1G,KAAKkH,SAAS,aAAc,gBAIf,aAAnBlH,KAAK6H,MAAMN,OACpBQ,EACE9C,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACbX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,cAAc5F,KAAK6H,MAAML,WACvCvC,EAAAC,EAAAC,cAAA,iDACCyC,EAAU1E,IAAI,SAASgF,EAAUC,GAChC,OAAOlD,EAAAC,EAAAC,cAAA,OAAKiD,IAAKD,GAAQD,EAASrF,QAEpCoC,EAAAC,EAAAC,cAAC6C,EAAD,CAAOvG,GAAG,sBAAsBwG,YAAY,kBAC5ChD,EAAAC,EAAAC,cAAC6C,EAAD,CAAOvG,GAAG,uBAAuBwG,YAAY,mBAC7ChD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyB,EAAD,CACEb,UAAU,eACVW,QAAS1G,KAAKkH,SAAS,YAAa,gBAEtCjC,EAAAC,EAAAC,cAACyB,EAAD,CACEb,UAAU,yBACVW,QA5BE1G,KA4Ba2H,aAEd,IAJH,kBAOA1C,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAMd,GAAG,aACPT,EAAAC,EAAAC,cAACyB,EAAD,kCAMHmB,mCAIP,IAAIA,EAAc/H,KAAKqI,iBACvB,OACEpD,EAAAC,EAAAC,cAAA,OAAKS,UAAU,QACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,aACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,YAAYmC,YAjFdlD,uCCKRyD,eAXQ,SAAA1D,GAAqB,IAAlB/B,EAAkB+B,EAAlB/B,KAAMO,EAAYwB,EAAZxB,MACxBmF,EAAQ1F,EAAK2F,MAAM,KACnBC,EAAWF,EAAM,GAAG,GAAKA,EAAM,GAAG,GAExC,OACEtD,EAAAC,EAAAC,cAAA,KAAGkB,MAAO,CAACqC,gBAAiBtF,GAAQwC,UAAU,mBAC3C6C,KC+BQE,cA/BE,SAAA/D,GAAsB,IAAnB7B,EAAmB6B,EAAnB7B,MAAO6F,EAAYhE,EAAZgE,MACzB,GAAqB,IAAjB7F,EAAMzC,OACR,OAAO,KAET,IAAMuI,EAAQ9F,EAAMG,IAAI,SAAA4F,GACtB,IAAM1E,EAAOG,EAAWzD,MAAMmC,MAAM6F,EAAKC,aAAa,IACtD,OACE9D,EAAAC,EAAAC,cAAA,MAAIiD,IAAKU,EAAKrH,GAAImE,UAAU,kBAC1BX,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,QAAMS,UAAU,mBAAkBX,EAAAC,EAAAC,cAAA,KAAGS,UAAU,yBAC9CkD,EAAKjG,KACNoC,EAAAC,EAAAC,cAAA,QAAMS,UAAU,mBACdX,EAAAC,EAAAC,cAAC6D,EAAD,CAAgBnG,KAAMuB,EAAKvB,KAAMO,MAAOgB,EAAKhB,QAC7C6B,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAMZ,UAAU,yBAAyBF,GAAI,WAAanB,EAAWzD,MAAMW,GAAK,UAAYqH,EAAKrH,IAAIwD,EAAAC,EAAAC,cAAA,KAAGS,UAAU,6BAM5H,OACEX,EAAAC,EAAAC,cAAA,WAASS,UAAU,aACjBX,EAAAC,EAAAC,cAAA,UAAQS,UAAU,mBACfgD,GAEH3D,EAAAC,EAAAC,cAAA,MAAIS,UAAU,kBACXiD,MChBMI,SAVDN,YAAQ,SAAAO,GAAA,SAAAD,IAAA,OAAArI,OAAAC,EAAA,EAAAD,CAAAZ,KAAAiJ,GAAArI,OAAAmG,EAAA,EAAAnG,CAAAZ,KAAAY,OAAAoG,EAAA,EAAApG,CAAAqI,GAAAE,MAAAnJ,KAAAoJ,YAAA,OAAAxI,OAAAyI,EAAA,EAAAzI,CAAAqI,EAAAC,GAAAtI,OAAA0I,EAAA,EAAA1I,CAAAqI,EAAA,EAAAb,IAAA,SAAAX,MAAA,WAElB,OACExC,EAAAC,EAAAC,cAAA,OAAK1D,GAAIzB,KAAKuF,MAAM9D,GAAImE,UAAU,SAC/B5F,KAAKuF,MAAMgE,eAJEN,EAAA,CAAqBpE,eCyC5B2E,UAxCK,SAAA5E,GAAwB,IAArBkE,EAAqBlE,EAArBkE,KAAMW,EAAe7E,EAAf6E,SACrBC,EAAQZ,EAAKC,aAAa7F,IAAI,SAAAb,GAClC,IAAM+B,EAAOG,EAAWzD,MAAMmC,MAAMZ,GACpC,OACE4C,EAAAC,EAAAC,cAAA,MAAIiD,IAAK/F,EAAOuD,UAAU,2BACxBX,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAC6D,EAAD,CAAgBnG,KAAMuB,EAAKvB,KAAMO,MAAOgB,EAAKhB,MAAOiD,MAAO,CAACsD,QAAS,YAAcvF,EAAKvB,SAWpG,OACEoC,EAAAC,EAAAC,cAAA,WAASS,UAAU,qBACjBX,EAAAC,EAAAC,cAACyE,EAAD,CAAOnI,GAAIqH,EAAKjG,KAAM0G,UAAWT,EAAKjG,KAAK,aAC3CoC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,wBACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,sBACbX,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAMZ,UAAU,4BAA4BF,GAAI+D,GAAhD,MAEFxE,EAAAC,EAAAC,cAAA,UAAQS,UAAU,0BAChBX,EAAAC,EAAAC,cAAA,UAAK2D,EAAKjG,OAEZoC,EAAAC,EAAAC,cAAA,KAAGS,UAAU,0BACVkD,EAAKe,aAGR5E,EAAAC,EAAAC,cAAA,MAAIS,UAAU,sBACX8D,GAGHzE,EAAAC,EAAAC,cAACsB,EAAD,CAAoBC,QAxBH,WACrBP,SAASC,eAAe0C,EAAKjG,MAAMwD,MAAMyD,IAAM,EAC/ChB,EAAKC,aAAa3I,KAAK0I,EAAKC,aAAagB,SACzC7J,WAAW,WAAKiG,SAASC,eAAe0C,EAAKjG,MAAMwD,MAAMyD,IAAM,SAAW,OAqBtE,sCChBOE,UAnBA,WACb,OACE/E,EAAAC,EAAAC,cAAC8E,EAAA,KAAD,KACEhF,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAASC,OAAK,EAACvE,UAAU,OAAOF,GAAI,KAApC,QAGAT,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAASC,OAAK,EAACvE,UAAU,OAAOF,GAAI,WAApC,UAGAT,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAASC,OAAK,EAACvE,UAAU,OAAOF,GAAI,aAApC,YAGAT,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAASC,OAAK,EAACvE,UAAU,OAAOF,GAAI,IAAKgB,QAAS,WAAOlB,EAAU4E,WAAnE,aCbSC,UAJQ,SAAA9E,GACrB,OAAON,EAAAC,EAAAC,cAAA,UAAQS,UAAU,gBAAlB,OC+EM0E,UApEC3B,YAAQ,SAAAO,GAAA,SAAAoB,IAAA,OAAA1J,OAAAC,EAAA,EAAAD,CAAAZ,KAAAsK,GAAA1J,OAAAmG,EAAA,EAAAnG,CAAAZ,KAAAY,OAAAoG,EAAA,EAAApG,CAAA0J,GAAAnB,MAAAnJ,KAAAoJ,YAAA,OAAAxI,OAAAyI,EAAA,EAAAzI,CAAA0J,EAAApB,GAAAtI,OAAA0I,EAAA,EAAA1I,CAAA0J,EAAA,EAAAlC,IAAA,oBAAAX,MAAA,WAEpB,IAAM8C,EAAUvK,KAAKuF,MAAMiF,MAAMC,OAAO3J,MACxCyD,EAAW3C,IAAI2I,KAHK,CAAAnC,IAAA,SAAAX,MAAA,WAMb,IAAA1H,EAAAC,KACH0K,EAAWzF,EAAAC,EAAAC,cAACwF,EAAAzF,EAAD,CAASU,UAAU,SAAS/C,KAAK,kBAChD,IAAK0B,EAAWxD,WAAY,CAC1B,IAAI6J,EACE7H,EAAQwB,EAAWzD,MAAMiC,MAAM8H,OAAO,SAACC,EAAGhC,GAa9C,OAZI/I,EAAKwF,MAAMiF,MAAMC,OAAOhJ,IACtBqH,EAAKrH,KAAO1B,EAAKwF,MAAMiF,MAAMC,OAAOhJ,KACtCmJ,EAAc9B,GAIdA,EAAKC,aAAa,KAAOvD,EAAU1B,YACrCgH,EAAEhC,EAAKiC,UAAU3K,KAAK0I,GACb,EAAIA,EAAKC,aAAazI,QAAUwI,EAAKC,aAAa,KAAOvD,EAAU1B,aAC5EgH,EAAE,aAAa1K,KAAK0I,GAGfgC,GACN,CACDE,MAAS,GACTC,OAAU,GACVC,SAAY,GACZC,QAAW,GACXC,YAAa,GACbC,YAAa,KAGTC,EAAQ1K,OAAO2K,QAAQxI,GAAOG,IAAI,SAAAsI,GACtC,OAAQvG,EAAAC,EAAAC,cAACsG,EAAD,CAAUrD,IAAKoD,EAAG,GAAI5C,MAAO4C,EAAG,GAAIzI,MAAOyI,EAAG,OAGlDjB,EAAUvK,KAAKuF,MAAMiF,MAAMC,OAAO3J,MAExC4J,EACEzF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIS,UAAU,UAAUrB,EAAWzD,MAAM+B,MACvCoC,EAAAC,EAAAC,cAAA,MAAIS,UAAU,UAAd,YAEAX,EAAAC,EAAAC,cAAA,WAASS,UAAU,oBACjBX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACZ0F,GAEFV,GAAgB3F,EAAAC,EAAAC,cAACuG,EAAD,CAAa5C,KAAM8B,EAAanB,SAAU,WAAac,EAAU,aAM5F,OACEtF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwG,EAAD,MACA1G,EAAAC,EAAAC,cAAA,OAAKS,UAAU,WACZ8E,GAEHzF,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAMd,GAAG,aACPT,EAAAC,EAAAC,cAACyG,EAAD,YA7DctB,EAAA,CAAuBzF,uBC+ChCgH,EAlDDlD,YAAQ,SAAAO,GAEpB,SAAA2C,EAAYtG,GAAO,IAAAxF,EAAA,OAAAa,OAAAC,EAAA,EAAAD,CAAAZ,KAAA6L,IACjB9L,EAAAa,OAAAmG,EAAA,EAAAnG,CAAAZ,KAAAY,OAAAoG,EAAA,EAAApG,CAAAiL,GAAA5E,KAAAjH,KAAMuF,KAFRuG,QAAU,wJAGR/L,EAAK8H,MAAQ,CACXxF,MAAO,GACP0J,OAAQ,IAGVhM,EAAKiM,aAAejM,EAAKiM,aAAaC,KAAlBrL,OAAAsL,EAAA,EAAAtL,QAAAsL,EAAA,EAAAtL,CAAAb,KACpBA,EAAKoM,aAAepM,EAAKoM,aAAaF,KAAlBrL,OAAAsL,EAAA,EAAAtL,QAAAsL,EAAA,EAAAtL,CAAAb,KARHA,EAFC,OAAAa,OAAAyI,EAAA,EAAAzI,CAAAiL,EAAA3C,GAAAtI,OAAA0I,EAAA,EAAA1I,CAAAiL,EAAA,EAAAzD,IAAA,eAAAX,MAAA,SAaPJ,GACXrH,KAAK0H,SAAS,CACZrF,MAAOgF,EAAE+E,OAAO3E,MAChBsE,OAAQ,OAhBQ,CAAA3D,IAAA,eAAAX,MAAA,WAqBdzH,KAAK6H,MAAMxF,MAAMgK,QAAUrM,KAAK8L,QAAQQ,KAAKtM,KAAK6H,MAAMxF,QAC1DmD,EAAUhB,eAAexE,KAAK6H,MAAMxF,OACpCrC,KAAKuF,MAAMgH,QAAQnM,KAAK,YAExBJ,KAAK0H,SAAS,CACZrF,MAAOrC,KAAK6H,MAAMxF,MAClB0J,OAAQ,CACNS,aAAc,yBA5BF,CAAApE,IAAA,SAAAX,MAAA,WAmClB,OACExC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,QACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,aACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,YACfX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAAC6C,EAAD,CAAOvG,GAAG,mBAAmB4E,MAAOrG,KAAK6H,MAAMkE,OAAQ9D,YAAY,QAAQR,MAAOzH,KAAK6H,MAAMJ,MAAOgF,SAAUzM,KAAKgM,eACnH/G,EAAAC,EAAAC,cAACyB,EAAD,CAAQb,UAAU,eAAeW,QAAS1G,KAAKmM,uBAzCrCN,EAAA,CAAqBhH,cC+C5B6H,sBAlDb,SAAAA,EAAYnH,GAAO,IAAAxF,EAAA,OAAAa,OAAAC,EAAA,EAAAD,CAAAZ,KAAA0M,IACjB3M,EAAAa,OAAAmG,EAAA,EAAAnG,CAAAZ,KAAAY,OAAAoG,EAAA,EAAApG,CAAA8L,GAAAzF,KAAAjH,KAAMuF,KAMRoH,SAAW,WAET5M,EAAK2H,SAAS,CAAEkF,UAAU,IAC1B5K,QAAQC,IAAIlC,EAAK8H,MAAM+E,WAVN7M,EAanB8M,eAAiB,WACf,GAAI9M,EAAK8H,MAAM+E,SACb,OAAO3H,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUC,GAAG,YAbtB3F,EAAK8H,MAAQ,CACX+E,UAAU,GAHK7M,wEAoBjB,OACEkF,EAAAC,EAAAC,cAAA,WACGnF,KAAK6M,iBACN5H,EAAAC,EAAAC,cAACwG,EAAD,MACA1G,EAAAC,EAAAC,cAAA,OAAKS,UAAU,2BACbX,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAC6C,EAAD,CAAOvG,GAAG,eAAewG,YAAY,eACrChD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YACES,UAAU,aACVnE,GAAG,eACHwG,YAAY,sBAEdhD,EAAAC,EAAAC,cAAA,WATF,aAUa,IACXF,EAAAC,EAAAC,cAAA,UAAQ1D,GAAG,eAAeqL,aAAa,SACrC7H,EAAAC,EAAAC,cAAA,UAAQsC,MAAM,SAAd,SACAxC,EAAAC,EAAAC,cAAA,UAAQsC,MAAM,UAAd,UACAxC,EAAAC,EAAAC,cAAA,UAAQsC,MAAM,YAAd,aAEFxC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACyB,EAAD,CAAQb,UAAU,GAAGW,QAAS1G,KAAK2M,UAAnC,sBA1Ca9H,cC8CRkI,EA5CGpE,YAAQ,SAAAO,GACxB,SAAA6D,EAAYxH,GAAO,IAAAxF,EAAA,OAAAa,OAAAC,EAAA,EAAAD,CAAAZ,KAAA+M,GACjBhN,EAAAa,OAAAmG,EAAA,EAAAnG,CAAAZ,KAAAY,OAAAoG,EAAA,EAAApG,CAAAmM,GAAA9F,KAAAjH,KAAMuF,IACNC,EAAUwH,0BAFOjN,EADK,OAAAa,OAAAyI,EAAA,EAAAzI,CAAAmM,EAAA7D,GAAAtI,OAAA0I,EAAA,EAAA1I,CAAAmM,EAAA,EAAA3E,IAAA,SAAAX,MAAA,WAOtB,IAAIiD,EACFzF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwF,EAAAzF,EAAD,CAASrC,KAAK,mBAIlB,IAAK2C,EAAUxB,SAAU,CACvB,IAAMtB,EAAS8C,EAAUzB,YAAYb,IAAI,SAAApC,GACvC,OACEmE,EAAAC,EAAAC,cAAA,MAAIiD,IAAKtH,EAAMW,IACbwD,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAMd,GAAI,WAAa5E,EAAMW,GAAK,UAAWX,EAAM+B,SAIzD6H,EACEzF,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,UACGzC,IAKT,OACEuC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,QACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,aACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,YACfX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACZ8E,UAnCaqC,EAAA,CAAyBlI,cCiBpCoI,UAdH,kBACVhI,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAQC,SAAUC,WAChBnI,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOiI,KAAK,IAAIlD,OAAK,EAACrF,UAAWmB,IACjChB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOiI,KAAK,SAASlD,OAAK,EAACrF,UAAW+G,IACtC5G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOiI,KAAK,OAAOlD,OAAK,EAACrF,UAAWgC,IACpC7B,EAAAC,EAAAC,cAACmI,EAAD,CAAoBD,KAAK,UAAUlD,OAAK,EAACrF,UAAWiI,IACpD9H,EAAAC,EAAAC,cAACmI,EAAD,CAAoBD,KAAK,uBAAuBlD,OAAK,EAACrF,UAAWwF,IACjErF,EAAAC,EAAAC,cAACmI,EAAD,CAAoBD,KAAK,2BAA2BlD,OAAK,EAACrF,UAAWwF,IACrErF,EAAAC,EAAAC,cAACmI,EAAD,CAAoBD,KAAK,YAAYlD,OAAK,EAACrF,UAAW4H,QCXxCa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASlD,MACvB,2DCZNmD,IAASrI,OAAOL,EAAAC,EAAAC,cAACyI,EAAD,MAASzH,SAASC,eAAe,SDuH3C,kBAAmByH,WACrBA,UAAUC,cAAcC,MAAMlM,KAAK,SAAAmM,GACjCA,EAAaC","file":"static/js/main.2e80af81.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyAZnwch_QKuS6OPefMuAoUtEQd_ppiaa50\",\n  authDomain: \"churro-126ca.firebaseapp.com\",\n  databaseURL: \"https://churro-126ca.firebaseio.com\",\n  projectId: \"churro-126ca\",\n  storageBucket: \"\",\n  messagingSenderId: \"285905994423\"\n});\n\nexport default firebase;\n\n","import { observable, computed, decorate } from 'mobx'\n\nclass ErrorStore {\n  errors = [];\n  timeoutFn = null;\n\n  waitAndClear() {\n    if (this.timeoutFn !== null) {\n      clearTimeout(this.timeoutFn);\n    }\n    this.timeoutFn = setTimeout(() => {\n     this.errors = []; \n     this.timeoutFn = null;\n    }, 5000);\n  }\n\n  clear() {\n    this.errors = [];\n  }\n\n  addError(err) {\n    this.errors.push(err);\n    this.waitAndClear();\n  }\n\n  get hasErrors() {\n    return 0 < this.errors.length;\n  }\n}\n\ndecorate(ErrorStore, {\n  errors: observable,\n  hasErrors: computed\n});\n\nexport default new ErrorStore();","import { observable, decorate, action, autorun } from 'mobx'\n\nimport firebase from '../Firebase';\nimport errorStore from './errors';\n\nclass GroupStore {\n  group = null;\n  isFetching = true;\n\n  userColors = [\n    'tomato',\n    'plum',\n    'teal',\n    'turquoise',\n    'forestGreen',\n    'fireBrick',\n    'MediumVioletRed',\n    'DarkOrange',\n    'gold',\n    'SlateBlue',\n    'CadetBlue',\n    'Navy',\n    'DarkSlateGray',\n    'LightSlateGray'\n  ]\n\n  constructor(firebase) {\n    // Initialize Cloud Firestore through Firebase\n    var db = firebase.firestore();\n\n    // Disable deprecated features\n    db.settings({\n      timestampsInSnapshots: true\n    });\n    this.db = db.collection('groups');\n    autorun(() => this.updateGroup(), { delay: 300 });\n  }\n\n  get(id) {\n    if (this.group !== null && this.group.id === id) {\n      return;\n    }\n\n    this.isFetching = true;\n    return this.db.doc(id).get().then((doc) => {\n      if (!doc.exists) {\n        console.log('No group with id of ' + id);\n        return;\n      }\n\n      this.group = doc.data();\n      this.group.id = id;\n      this.isFetching = false;\n      return this.group;\n    }).catch(err => {\n      this.isFetching = false;\n      errorStore.addError(err);\n    })\n  }\n\n  getUsersGroups(email) {\n    console.log(email);\n    return this.db.where('user_emails', 'array-contains', email).get().then((docs) => {\n      if (docs.empty) {\n        console.log('User has no groups with email ' + email);\n        return;\n      }\n\n      let groups = [];\n      docs.forEach(doc => {\n        const group = doc.data();\n        let item =  {\n          id: doc.id,\n          name: group.name\n        }\n        groups.push(item);\n      });\n      return groups;\n    }).catch(err => {\n      this.isFetching = false;\n      errorStore.addError(err);\n    });\n  }\n\n  add(name, userEmails, tasks) {\n    const users = userEmails.map((email, idx) => {\n      return {\n        email,\n        color: this.userColors[idx%this.userColors.length]\n      }\n    });\n    \n    const group = {\n      name,\n      users,\n      tasks,\n      user_emails: userEmails,\n    }\n\n    return this.db.add(group).then(doc => {\n      group.id = doc.id;\n      console.log(group);\n      return group;\n    }).catch(err => {\n      errorStore.addError(err);\n    });\n  }\n\n  updateGroup() {\n    if (this.group === null) {\n      return;\n    }\n    this.db.doc(this.group.id).set(this.group).then(res => {\n      console.log('Successfully updated group');\n    }).catch(err => {\n      errorStore.addError(err);\n    })\n  }\n}\n\ndecorate(GroupStore, {\n  group: observable,\n  isFetching: observable,\n  get: action,\n  getUsersGroups: action,\n  add: action,\n})\n\n\nexport default new GroupStore(firebase);","import { observable, computed, decorate, action } from 'mobx'\n\nimport groupStore from './groups';\n\nconst STORAGE_KEY = 'churro-user';\n\nclass UserStore {\n  currentUser = '';\n  usersGroups = [];\n  fetching = false;\n\n  constructor() {\n    if (localStorage.getItem(STORAGE_KEY)) {\n      this.currentUser = localStorage.getItem(STORAGE_KEY);\n    }\n  }\n\n  get isLoggedIn() {\n    return this.currentUser !== '';\n  }\n\n  logout() {\n    this.currentUser = '';\n    this.usersGroups = [];\n    localStorage.removeItem(STORAGE_KEY);\n  }\n\n  setCurrentUser(user) {\n    this.currentUser = user;\n    console.log('Set current user to ' + this.currentUser);\n    localStorage.setItem(STORAGE_KEY, user);\n  }\n\n  fetchCurrentUsersGroups() {\n    if (!this.isLoggedIn) {\n      return;\n    }\n    this.fetching = true;\n    groupStore.getUsersGroups(this.currentUser)\n      .then(groups => {\n        console.log(groups);\n        this.usersGroups = groups.map(group => { \n          return {\n            id: group.id, \n            name: group.name\n          }\n        });\n        this.fetching = false;\n      }).catch(err => {\n        console.log(err);\n        this.fetching = false;\n      });\n  }\n}\n\ndecorate(UserStore, {\n  currentUser: observable,\n  usersGroups: observable, \n  users: observable, \n  fetching: observable, \n  isLoggedIn: computed,\n  setCurrentUser: action,\n  getCurrentUsersGroups: action,\n});\n\nexport default new UserStore();","import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport userStore from '../stores/users';\n\nconst AuthRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        userStore.isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to=\"/\"\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default AuthRoute;","import React from 'react';\n\nimport '../styles/Button.scss';\n\nconst CallToActionButton = (props) => {\n  return (\n    <button className=\"button button--call-to-action\" {...props}>{ props.children }</button>\n  )\n}\n\nexport default CallToActionButton;\n","import React from 'react';\n\nimport '../styles/Button.scss';\n\nconst Button = (props) => {\n  let stylename = '';\n  if (props && props.stylename) stylename = props.stylename;\n  return (\n    <button className={`button ${stylename}`} {...props} >{ props.children }</button>\n  )\n}\n\nexport default Button;\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport CallToActionButton from './CallToActionButton';\nimport Button from './Button';\n\nimport '../styles/Main.scss';\n\nclass Main extends Component {\n  transitionOut() {\n    let elem = document.getElementById('landing');\n    elem.style.left = \"-10%\";\n    elem.style.opacity = 0;\n  }\n\n  render() {\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <div id=\"landing\">\n            <h2 className=\"welcome-header\">Welcome to Churro!</h2>\n            <h4 className=\"welcome-subheader\">The New Way to Manage Chores</h4>\n            <div className=\"button-container\">\n              <Link to=\"/new\"><CallToActionButton onClick={this.transitionOut}>START A NEW GROUP</CallToActionButton></Link>\n              <Link to=\"/login\"><Button>LOGIN</Button></Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\n\nimport '../styles/Input.scss';\n\nconst Input = (props) => {\n  return (\n    <input className=\"input\" {...props} >{ props.children }</input>\n  )\n}\n\nexport default Input;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport CallToActionButton from \"./CallToActionButton\";\nimport Button from \"./Button\";\nimport Input from \"./Input\";\n\nimport \"../styles/Main.scss\";\nimport \"../styles/NewGroup.scss\";\n\nclass NewGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      step: \"group-name\",\n      groupName: \"\",\n      roommates: []\n    };\n  }\n\n  formFlow = (current_step, next_step) => e => {\n    let newState = { step: next_step };\n    if (current_step == \"group-name\") {\n      newState.groupName = document.getElementById(\"group-name-input\").value;\n    }\n    this.setState(newState);\n  };\n\n  addRoommate = () => {\n    let roommates = this.state.roommates;\n    let new_roommate = {\n      name: document.getElementById(\"roommate-name-input\").value,\n      email: document.getElementById(\"roommate-email-input\").value\n    };\n    roommates.push(new_roommate);\n    document.getElementById(\"roommate-name-input\").value = \"\";\n    document.getElementById(\"roommate-email-input\").value = \"\";\n    this.setState({ roommates: roommates });\n  };\n\n  getFormElement() {\n    let formElement;\n    let roommates = this.state.roommates;\n    let _this = this;\n    if (this.state.step == \"group-name\") {\n      formElement = (\n        <div className=\"form group-name\">\n          <Input id=\"group-name-input\" placeholder=\"Group Name\" />\n          <Button\n            stylename=\"button--next\"\n            onClick={this.formFlow(\"group-name\", \"roommates\")}\n          />\n        </div>\n      );\n    } else if (this.state.step == \"roommates\") {\n      formElement = (\n        <div className=\"form roommates\">\n          <h4 className=\"form-title\">{this.state.groupName}</h4>\n          <p>Who are the roommates in this group?</p>\n          {roommates.map(function(roommate, index) {\n            return <div key={index}>{roommate.name}</div>;\n          })}\n          <Input id=\"roommate-name-input\" placeholder=\"Roommate Name\" />\n          <Input id=\"roommate-email-input\" placeholder=\"Roommate Email\" />\n          <div>\n            <Button\n              stylename=\"button--back\"\n              onClick={this.formFlow(\"roommates\", \"group-name\")}\n            />\n            <Button\n              stylename=\"button--call-to-action\"\n              onClick={_this.addRoommate}\n            >\n              {\" \"}\n              Add Roommate +\n            </Button>\n            <Link to=\"/addchore\">\n              <Button>Added All Roommates ></Button>\n            </Link>\n          </div>\n        </div>\n      );\n    }\n    return formElement;\n  }\n\n  render() {\n    let formElement = this.getFormElement();\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <div className=\"NewGroup\">{formElement}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NewGroup;\n","import React from 'react';\n\nimport '../styles/CircleInitials.scss'\n\nconst CircleInitials = ({ name, color }) => {\n  const parts = name.split(\" \");\n  const initials = parts[0][0] + parts[1][0]; \n\n  return (\n    <p style={{backgroundColor: color}} className=\"circle-initials\">\n      {initials}\n    </p>\n  )\n}\n\nexport default CircleInitials;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\"\n\nimport groupStore from '../stores/groups';\n\nimport '../styles/TaskCard.scss'\nimport CircleInitials from './CircleInitials';\n\n\nconst TaskCard = ({ tasks, title }) => {\n  if (tasks.length === 0) {\n    return null;\n  }\n  const items = tasks.map(task => {\n    const user = groupStore.group.users[task.currentQueue[0]];\n    return (\n      <li key={task.id} className=\"task-card-item\">\n        <span>\n          <span className=\"task-card-check\"><i className=\"far fa-check-circle\"></i></span>\n          {task.name} \n          <span className=\"task-card-right\">\n            <CircleInitials name={user.name} color={user.color} />\n            <Link className=\"task-card-focus-button\" to={\"/groups/\" + groupStore.group.id + \"/tasks/\" + task.id}><i className=\"fas fa-angle-right\"></i></Link>\n          </span>\n        </span>\n      </li>\n    )\n  })\n  return (\n    <section className=\"task-card\">\n      <header className=\"task-card-title\"> \n        {title}\n      </header>\n      <ul className=\"task-card-list\">\n        {items}\n      </ul>\n    </section>\n  )\n}\n\nexport default observer(TaskCard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\"\n\nimport groupStore from '../stores/groups';\nimport userStore from '../stores/users';\n\nimport '../styles/Notif.scss';\n\nconst Notif = observer(class Notif extends Component {\n  render() {\n    return (\n      <div id={this.props.id} className=\"Notif\">\n        {this.props.notifText}\n      </div>\n    )\n  }\n});\n\nexport default Notif;","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport groupStore from '../stores/groups';\nimport CircleInitials from './CircleInitials';\nimport CallToActionButton from './CallToActionButton';\nimport Notif from \"./Notif.js\";\n\nimport '../styles/FocusedTask.scss'\n\nconst FocusedTask = ({ task, closeURL }) => {\n  const queue = task.currentQueue.map(email => {\n    const user = groupStore.group.users[email];\n    return (\n      <li key={email} className=\"focused-task-queue-item\">\n        <span><CircleInitials name={user.name} color={user.color} style={{display: 'inline'}} />{user.name}</span>\n      </li>\n    )\n  })\n\n  const handleComplete = () => {\n    document.getElementById(task.name).style.top = 0;\n    task.currentQueue.push(task.currentQueue.shift());\n    setTimeout(()=>{document.getElementById(task.name).style.top = \"-50px\";}, 2000);\n  }\n\n  return (\n    <section className=\"focused-task-card\">\n      <Notif id={task.name} notifText={task.name+\" - Done!\"}/>\n      <div className=\"focused-task-content\">\n        <div className=\"focused-task-close\">\n          <Link className=\"focused-task-close-button\" to={closeURL}>x</Link>\n        </div>\n        <header className=\"focused-task-card-name\"> \n          <h2>{task.name}</h2>\n        </header>\n        <p className=\"focused-task-card-desc\">\n          {task.description}\n        </p>\n\n        <ul className=\"focused-task-queue\">\n          {queue}\n        </ul>\n\n        <CallToActionButton onClick={handleComplete}>COMPLETE TASK</CallToActionButton>\n      </div>\n    </section>\n  )\n}\n\nexport default FocusedTask;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { push as Menu } from \"react-burger-menu\";\n\nimport userStore from \"../stores/users\";\n\nimport \"../styles/NavBar.scss\";\n\n\nconst NavBar = () => {\n  return (\n    <Menu>\n      <NavLink exact className=\"link\" to={\"/\"}>\n        HOME\n      </NavLink>\n      <NavLink exact className=\"link\" to={\"/groups\"}>\n        GROUPS\n      </NavLink>\n      <NavLink exact className=\"link\" to={\"/addchore\"}>\n        ADD TASK\n      </NavLink>\n      <NavLink exact className=\"link\" to={\"/\"} onClick={() => {userStore.logout()}}>\n        LOGOUT\n      </NavLink>\n    </Menu>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\n\nimport \"../styles/AddChoreButton.scss\";\n\nconst AddChoreButton = props => {\n  return <button className=\"chore-button\">+</button>;\n};\n\nexport default AddChoreButton;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\"\nimport Spinner from 'react-spinkit';\n\nimport TaskCard from \"./TaskCard\";\nimport FocusedTask from \"./FocusedTask\";\nimport NavBar from \"./NavBar\";\nimport AddChoreButton from \"./AddChoreButton\";\nimport Notif from \"./Notif.js\";\n\nimport groupStore from '../stores/groups';\nimport userStore from '../stores/users';\n\nimport '../styles/MyTasks.scss';\n\nconst MyTasks = observer(class MyTasks extends Component {\n  componentDidMount() {\n    const groupID = this.props.match.params.group;\n    groupStore.get(groupID);\n  }\n\n  render() {\n    let content = (<Spinner className=\"center\" name='double-bounce' />)\n    if (!groupStore.isFetching) {\n      let focusedTask;\n      const tasks = groupStore.group.tasks.reduce((m, task) => {\n        if (this.props.match.params.id) {\n          if (task.id === this.props.match.params.id) {\n            focusedTask = task;\n          }\n        }\n\n        if (task.currentQueue[0] === userStore.currentUser) {\n          m[task.schedule].push(task);\n        } else if (1 < task.currentQueue.length && task.currentQueue[1] === userStore.currentUser) {\n          m[\"Coming up\"].push(task);\n        }\n        \n        return m;\n      }, {\n        \"Daily\": [],\n        \"Weekly\": [],\n        \"Biweekly\": [],\n        \"Monthly\": [],\n        \"As needed\": [],\n        \"Coming up\": [],\n      });\n\n      const cards = Object.entries(tasks).map(kv => {\n        return (<TaskCard key={kv[0]} title={kv[0]} tasks={kv[1]} />)\n      });\n\n      const groupID = this.props.match.params.group;\n\n      content = (\n        <div>\n          <h1 className=\"center\">{groupStore.group.name}</h1>\n            <h2 className=\"center\">My Tasks</h2>\n\n            <section className=\"my-tasks-columns\">\n              <div className=\"my-tasks-cards\">\n                {cards}\n              </div>\n              {focusedTask && (<FocusedTask task={focusedTask} closeURL={\"/groups/\" + groupID + \"/tasks\"} />)}\n            </section>\n        </div>\n      )\n    }\n\n    return (\n      <div>\n        <NavBar />\n        <div className=\"MyTasks\">\n          {content}\n        </div>\n        <Link to=\"/addchore\">\n          <AddChoreButton />\n        </Link>\n      </div>\n    );\n  }\n})\n\nexport default MyTasks;\n","import React, { Component } from 'react';\nimport { observer } from \"mobx-react\"\n\nimport Button from './Button';\nimport Input from './Input';\n\nimport userStore from '../stores/users';\n\nimport '../styles/Main.scss';\nimport '../styles/NewGroup.scss';\n\n\n\nconst Login = observer(class Login extends Component {\n  emailRE = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      styles: {}\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      email: e.target.value,\n      styles: {}\n    });\n  }\n\n  handleSubmit() {\n    if (this.state.email.trim() && this.emailRE.test(this.state.email)) {\n      userStore.setCurrentUser(this.state.email);\n      this.props.history.push('/groups');\n    } else {\n      this.setState({\n        email: this.state.email,\n        styles: {\n          borderBottom: \"3px solid #E00747\"\n        }\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <div className=\"NewGroup\">\n          <div className=\"form group-name\">\n            <Input id=\"group-name-input\" style={this.state.styles} placeholder=\"Email\" value={this.state.value} onChange={this.handleChange}/>\n            <Button stylename=\"button--next\" onClick={this.handleSubmit} />\n          </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n});\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport NavBar from \"./NavBar\";\nimport Input from \"./Input\";\nimport Button from \"./Button\";\n\nimport \"../styles/AddChore.scss\";\n\nclass AddChore extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirect: false\n    };\n  }\n\n  addChore = () => {\n    // TODO: USE FIREBASE TO ADD CHORE AND REDIRECT AS CALLBACK\n    this.setState({ redirect: true });\n    console.log(this.state.redirect);\n  };\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to=\"/tasks\" />;\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        {this.renderRedirect()}\n        <NavBar />\n        <div className=\"MyTasks center AddChore\">\n          <h2>Add Chore</h2>\n          <Input id=\"task-name-id\" placeholder=\"Chore Name\" />\n          <br />\n          <textarea\n            className=\"text-input\"\n            id=\"task-desc-id\"\n            placeholder=\"Chore Description\"\n          />\n          <br />\n          Frequency:{\" \"}\n          <select id=\"task-freq-id\" defaultValue=\"daily\">\n            <option value=\"daily\">Daily</option>\n            <option value=\"weekly\">Weekly</option>\n            <option value=\"biweekly\">Biweekly</option>\n          </select>\n          <br />\n          <Button stylename=\"\" onClick={this.addChore}>\n            Add Chore\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddChore;\n","import React, { Component } from 'react';\nimport { observer } from \"mobx-react\"\nimport { Link } from \"react-router-dom\";\nimport Spinner from 'react-spinkit';\n\n\nimport userStore from '../stores/users';\n\nimport '../styles/Main.scss';\nimport '../styles/NewGroup.scss';\n\nconst GroupList = observer(class GroupList extends Component {\n  constructor(props) {\n    super(props);\n    userStore.fetchCurrentUsersGroups();\n  }\n\n  render() {\n    let content = (\n      <div>\n        <Spinner name='double-bounce' />\n      </div>\n    );\n\n    if (!userStore.fetching) {\n      const groups = userStore.usersGroups.map(group => {\n        return (\n          <li key={group.id}>\n            <Link to={\"/groups/\" + group.id + \"/tasks\"}>{group.name}</Link>\n          </li>\n        )\n      });\n      content = (\n        <section>\n          <h1>Your Groups</h1>\n          <ul>\n            {groups}\n          </ul>\n        </section>\n      )\n    }\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <div className=\"NewGroup\">\n          <div className=\"form group-name\">\n            {content}\n          </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n});\n\nexport default GroupList;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport AuthenticatedRoute from './components/AuthenticatedRoute';\n\nimport Main from \"./components/Main\";\nimport NewGroup from \"./components/NewGroup\";\nimport MyTasks from \"./components/MyTasks\";\nimport Login from \"./components/Login\";\nimport AddChore from \"./components/AddChore\";\nimport GroupList from \"./components/GroupList\";\n\nimport \"./styles/index.scss\";\n\nconst App = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <main>\n      <Route path=\"/\" exact component={Main} />\n      <Route path=\"/login\" exact component={Login} />\n      <Route path=\"/new\" exact component={NewGroup} />\n      <AuthenticatedRoute path=\"/groups\" exact component={GroupList} />\n      <AuthenticatedRoute path=\"/groups/:group/tasks\" exact component={MyTasks} />\n      <AuthenticatedRoute path=\"/groups/:group/tasks/:id\" exact component={MyTasks} />\n      <AuthenticatedRoute path=\"/addchore\" exact component={AddChore} />\n    </main>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}