{"version":3,"sources":["Firebase.js","stores/errors.js","stores/groups.js","stores/users.js","components/AuthenticatedRoute.js","components/CallToActionButton.js","components/Button.js","components/Main.js","components/Input.js","stores/newGroup.js","components/NewGroup.js","components/NewTasks.js","components/CircleInitials.js","components/TaskCard.js","components/Notif.js","components/FocusedTask.js","components/NavBar.js","components/AddChoreButton.js","components/MyTasks.js","components/Login.js","components/AddChore.js","components/GroupList.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ErrorStore","errors","timeoutFn","_this","this","clearTimeout","setTimeout","err","push","waitAndClear","length","decorate","observable","addError","action","hasErrors","computed","GroupStore","Object","classCallCheck","group","isFetching","db","firestore","settings","timestampsInSnapshots","collection","autorun","updateGroup","delay","id","_this2","doc","get","then","exists","data","console","log","catch","errorStore","email","_this3","where","docs","empty","groups","forEach","item","name","shortid","generate","set","res","getUsersGroups","add","stores_groups","STORAGE_KEY","UserStore","currentUser","usersGroups","fetching","localStorage","getItem","removeItem","user","setItem","isLoggedIn","groupStore","map","users","setCurrentUser","getCurrentUsersGroups","AuthenticatedRoute","_ref","Component","component","rest","objectWithoutProperties","react_default","a","createElement","Route","assign","render","props","userStore","Redirect","to","location","pathname","CallToActionButton","className","children","Button","stylename","concat","Main","observer","_Component","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","elem","document","getElementById","style","left","opacity","Link","components_CallToActionButton","onClick","transitionOut","components_Button","Input","USER_COLORS","NewGroupStore","tasks","Date","now","color","keys","description","schedule","task","currentQueue","shuffle","user_emails","i","j","Math","floor","random","addUser","addTask","clear","newGroup","NewGroup","call","formFlow","current_step","next_step","e","newState","step","setState","addRoommate","state","roommates","new_roommate","newGroupStore","onKeyPress","fn","formElement","components_Input","placeholder","onChange","target","groupName","values","roommate","index","getFormElement","NewChores","_getPrototypeOf2","_len","args","Array","_key","addChore","new_chore","frequency","saveGroup","save","history","paddingTop","defaultValue","CircleInitials","parts","split","initials","backgroundColor","titleMappings","Daily","Weekly","Biweekly","Monthly","As needed","Coming up","title","items","components_CircleInitials","Notif","notifText","FocusedTask","closeURL","queue","display","components_Notif","top","shift","NavBar","BurgerMenu","NavLink","exact","logout","AddChoreButton","MyTasks","groupID","match","params","content","dist_default","focusedTask","reduce","m","As Needed","cards","entries","kv","components_TaskCard","components_FocusedTask","components_NavBar","components_AddChoreButton","Login","emailRE","styles","bind","assertThisInitialized","handleChange","handleSubmit","trim","test","URLSearchParams","search","next","borderBottom","AddChore","redirect","renderRedirect","GroupList","fetchCurrentUsersGroups","App","BrowserRouter","basename","process","path","components_AuthenticatedRoute","NewTasks","Boolean","window","hostname","ReactDOM","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.18ee3e5f.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyAZnwch_QKuS6OPefMuAoUtEQd_ppiaa50\",\n  authDomain: \"churro-126ca.firebaseapp.com\",\n  databaseURL: \"https://churro-126ca.firebaseio.com\",\n  projectId: \"churro-126ca\",\n  storageBucket: \"\",\n  messagingSenderId: \"285905994423\"\n});\n\nexport default firebase;\n\n","import { observable, computed, decorate, action } from 'mobx'\n\nclass ErrorStore {\n  errors = [];\n  timeoutFn = null;\n\n  waitAndClear() {\n    if (this.timeoutFn !== null) {\n      clearTimeout(this.timeoutFn);\n    }\n    this.timeoutFn = setTimeout(() => {\n     this.errors = []; \n     this.timeoutFn = null;\n    }, 5000);\n  }\n\n  clear() {\n    this.errors = [];\n  }\n\n  addError(err) {\n    this.errors.push(err);\n    this.waitAndClear();\n  }\n\n  get hasErrors() {\n    return 0 < this.errors.length;\n  }\n}\n\ndecorate(ErrorStore, {\n  errors: observable,\n  addError: action,\n  hasErrors: computed\n});\n\nexport default new ErrorStore();","import { observable, decorate, action, autorun } from 'mobx';\nimport shortid from 'shortid';\n\nimport firebase from '../Firebase';\nimport errorStore from './errors';\n\nclass GroupStore {\n  group = null;\n  isFetching = true;\n\n  constructor(firebase) {\n    // Initialize Cloud Firestore through Firebase\n    var db = firebase.firestore();\n\n    // Disable deprecated features\n    db.settings({\n      timestampsInSnapshots: true\n    });\n    this.db = db.collection('groups');\n    autorun(() => this.updateGroup(), { delay: 300 });\n  }\n\n  get(id) {\n    if (this.group !== null && this.group.id === id) {\n      return;\n    }\n\n    this.isFetching = true;\n    return this.db.doc(id).get().then((doc) => {\n      if (!doc.exists) {\n        console.log('No group with id of ' + id);\n        return;\n      }\n\n      this.group = doc.data();\n      this.group.id = id;\n      this.isFetching = false;\n      return this.group;\n    }).catch(err => {\n      this.isFetching = false;\n      errorStore.addError(err);\n    })\n  }\n\n  getUsersGroups(email) {\n    return this.db.where('user_emails', 'array-contains', email).get().then((docs) => {\n      if (docs.empty) {\n        console.log('User has no groups with email ' + email);\n        return;\n      }\n\n      let groups = [];\n      docs.forEach(doc => {\n        const group = doc.data();\n        let item =  {\n          id: doc.id,\n          name: group.name\n        }\n        groups.push(item);\n      });\n      return groups;\n    }).catch(err => {\n      this.isFetching = false;\n      errorStore.addError(err);\n    });\n  }\n\n  add(group) {\n    group.id = shortid.generate();\n    return this.db.doc(group.id).set(group).then(doc => {\n      console.log(group);\n      return group;\n    }).catch(err => {\n      errorStore.addError(err);\n    });\n  }\n\n  updateGroup() {\n    if (this.group === null) {\n      return;\n    }\n    this.db.doc(this.group.id).set(this.group).then(res => {\n      console.log('Successfully updated group');\n    }).catch(err => {\n      errorStore.addError(err);\n    })\n  }\n}\n\ndecorate(GroupStore, {\n  group: observable,\n  isFetching: observable,\n  get: action,\n  getUsersGroups: action,\n  add: action,\n})\n\n\nexport default new GroupStore(firebase);","import { observable, computed, decorate, action } from 'mobx'\n\nimport groupStore from './groups';\n\nconst STORAGE_KEY = 'churro-user';\n\nclass UserStore {\n  currentUser = '';\n  usersGroups = [];\n  fetching = false;\n\n  constructor() {\n    if (localStorage.getItem(STORAGE_KEY)) {\n      this.currentUser = localStorage.getItem(STORAGE_KEY);\n    }\n  }\n\n  get isLoggedIn() {\n    return this.currentUser !== '';\n  }\n\n  logout() {\n    this.currentUser = '';\n    this.usersGroups = [];\n    localStorage.removeItem(STORAGE_KEY);\n  }\n\n  setCurrentUser(user) {\n    this.currentUser = user;\n    console.log('Set current user to ' + this.currentUser);\n    localStorage.setItem(STORAGE_KEY, user);\n  }\n\n  fetchCurrentUsersGroups() {\n    if (!this.isLoggedIn) {\n      return;\n    }\n    this.fetching = true;\n    groupStore.getUsersGroups(this.currentUser)\n      .then(groups => {\n        console.log(groups);\n        this.usersGroups = groups.map(group => { \n          return {\n            id: group.id, \n            name: group.name\n          }\n        });\n        this.fetching = false;\n      }).catch(err => {\n        console.log(err);\n        this.fetching = false;\n      });\n  }\n}\n\ndecorate(UserStore, {\n  currentUser: observable,\n  usersGroups: observable, \n  users: observable, \n  fetching: observable, \n  isLoggedIn: computed,\n  setCurrentUser: action,\n  getCurrentUsersGroups: action,\n});\n\nexport default new UserStore();","import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport userStore from '../stores/users';\n\nconst AuthenticatedRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        userStore.isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={\"/login?redirect=\" + props.location.pathname}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default AuthenticatedRoute;","import React from 'react';\n\nimport '../styles/Button.scss';\n\nconst CallToActionButton = (props) => {\n  return (\n    <button className=\"button button--call-to-action\" {...props}>{ props.children }</button>\n  )\n}\n\nexport default CallToActionButton;\n","import React from 'react';\n\nimport '../styles/Button.scss';\n\nconst Button = (props) => {\n  let stylename = '';\n  if (props && props.stylename) stylename = props.stylename;\n  return (\n    <button className={`button ${stylename}`} {...props} >{ props.children }</button>\n  )\n}\n\nexport default Button;\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\";\n\nimport CallToActionButton from './CallToActionButton';\nimport Button from './Button';\n\nimport userStore from '../stores/users';\n\nimport '../styles/Main.scss';\n\nconst Main = observer(class Main extends Component {\n  transitionOut() {\n    let elem = document.getElementById('landing');\n    elem.style.left = \"-10%\";\n    elem.style.opacity = 0;\n  }\n\n  render() {\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <div id=\"landing\">\n            <h2 className=\"welcome-header\">Welcome to Churro!</h2>\n            <h4 className=\"welcome-subheader\">The New Way to Manage Chores</h4>\n            <div className=\"button-container\">\n              <Link to=\"/new\"><CallToActionButton onClick={this.transitionOut}>START A NEW GROUP</CallToActionButton></Link>\n              <Link to={userStore.isLoggedIn ? \"/groups\" : \"/login\"}><Button>{userStore.isLoggedIn ? \"YOUR GROUPS\" : \"LOGIN\"}</Button></Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n});\n\nexport default Main;\n","import React from 'react';\n\nimport '../styles/Input.scss';\n\nconst Input = (props) => {\n  return (\n    <input className=\"input\" {...props} >{ props.children }</input>\n  )\n}\n\nexport default Input;\n","import { observable, decorate, action } from 'mobx'\n\nimport groupStore from './groups';\nimport errorStore from './errors';\n\nconst USER_COLORS = [\n  'tomato',\n  'plum',\n  'teal',\n  'turquoise',\n  'forestGreen',\n  'fireBrick',\n  'MediumVioletRed',\n  'DarkOrange',\n  'gold',\n  'SlateBlue',\n  'CadetBlue',\n  'Navy',\n  'DarkSlateGray',\n  'LightSlateGray'\n]\n\n\nclass NewGroupStore {\n  name = '';\n  users = {};\n  tasks = [];\n\n  addUser(name, email) {\n    const user = {\n      id: Date.now(),\n      name,\n      email,\n      color: USER_COLORS[Object.keys(this.users).length%USER_COLORS.length]\n    }\n\n    this.users[email] = user;\n  }\n\n  addTask(name, description, schedule) {\n    const task = {\n      id: Date.now(),\n      name,\n      schedule,\n      description,\n      currentQueue: this.shuffle(Object.keys(this.users))\n    }\n\n    this.tasks.push(task);\n  }\n\n  clear() {\n    this.name = '';\n    this.users = {};\n    this.tasks = [];\n  }\n\n  save() {\n    const group = {\n      name: this.name,\n      users: this.users,\n      tasks: this.tasks,\n      user_emails: Object.keys(this.users)\n    }\n\n    return groupStore.add(group).then(res => {\n      console.log(res);\n      return res;\n    }).catch(err => {\n      errorStore.addError(err);\n    })\n  }\n\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\ndecorate(NewGroupStore, {\n  name: observable,\n  users: observable,\n  tasks: observable,\n  addUser: action,\n  addTask: action,\n  clear: action,\n});\n\nexport default new NewGroupStore();","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\";\n\nimport Button from \"./Button\";\nimport Input from \"./Input\";\n\nimport \"../styles/Main.scss\";\nimport \"../styles/NewGroup.scss\";\n\nimport newGroupStore from '../stores/newGroup';\n\nconst NewGroup = observer(class NewGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      step: \"group-name\",\n    };\n  }\n\n  formFlow = (current_step, next_step) => e => {\n    let newState = { step: next_step };\n    this.setState(newState);\n  };\n\n  addRoommate = () => {\n    let roommates = this.state.roommates;\n    let new_roommate = {\n      name: document.getElementById(\"roommate-name-input\").value,\n      email: document.getElementById(\"roommate-email-input\").value\n    };\n    document.getElementById(\"roommate-name-input\").value = \"\";\n    document.getElementById(\"roommate-email-input\").value = \"\";\n    newGroupStore.addUser(new_roommate.name, new_roommate.email);\n  };\n\n  onKeyPress = fn => e => {\n    if (e.key === 'Enter') {\n      fn();\n    }\n  }\n\n  getFormElement() {\n    let formElement;\n    let _this = this;\n    if (this.state.step === \"group-name\") {\n      formElement = (\n        <div className=\"form group-name\">\n          <p>What is your group name?</p>\n          <Input id=\"group-name-input\" placeholder=\"Group Name\"\n            onKeyPress={this.onKeyPress(this.formFlow(\"group-name\", \"roommates\"))}\n            value={newGroupStore.name}\n            onChange={(e) => newGroupStore.name = e.target.value}\n          />\n          <Button\n            stylename=\"button--next\"\n            onClick={this.formFlow(\"group-name\", \"roommates\")}\n          />\n        </div>\n      );\n    } else if (this.state.step === \"roommates\") {\n      formElement = (\n        <div className=\"form roommates\">\n          <h4 className=\"form-title\">{this.state.groupName}</h4>\n          <p>Who are the roommates in this group?</p>\n          {Object.values(newGroupStore.users).map(function(roommate, index) {\n            return <div key={index}>{roommate.name} - {roommate.email}</div>;\n          })}\n          <Input id=\"roommate-name-input\" placeholder=\"Roommate Name\" />\n          <Input id=\"roommate-email-input\" placeholder=\"Roommate Email\" \n            onKeyPress={this.onKeyPress(_this.addRoommate)}\n          />\n          <div>\n            <Button\n              stylename=\"button--back\"\n              onClick={this.formFlow(\"roommates\", \"group-name\")}\n            />\n            <Button\n              stylename=\"button--call-to-action\"\n              onClick={_this.addRoommate}\n            >\n              {\" \"}\n              Add Roommate +\n            </Button>\n            <Link to={{ pathname: '/newchores', state: { groupName: this.state.groupName} }}>\n              <Button>Added All Roommates ></Button>\n            </Link>\n          </div>\n        </div>\n      );\n    }\n    return formElement;\n  }\n\n  render() {\n    let formElement = this.getFormElement();\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <div className=\"NewGroup\">{formElement}</div>\n        </div>\n      </div>\n    );\n  }\n})\n\nexport default NewGroup;\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\";\n\nimport Button from './Button';\nimport Input from './Input';\n\nimport '../styles/Main.scss';\nimport '../styles/NewGroup.scss';\n\nimport newGroupStore from '../stores/newGroup';\n\nconst NewChores = observer(class NewChores extends Component {\n  addChore = () => {\n    let new_chore = {\n      name: document.getElementById('chore-name-input').value,\n      description: document.getElementById('chore-email-input').value,\n      frequency: document.getElementById('chore-frequency-input').value\n    }\n    document.getElementById('chore-name-input').value = '';\n    document.getElementById('chore-email-input').value = '';\n    document.getElementById('chore-frequency-input').value = 'Daily';\n    newGroupStore.addTask(new_chore.name, new_chore.description, new_chore.frequency);\n  }\n\n  saveGroup = () => {\n    newGroupStore.save().then(group => {\n      this.props.history.push('/groups/' + group.id + '/tasks');\n      newGroupStore.clear();\n      console.log('cleared');\n    })\n  }\n\n  onKeyPress = fn => e => {\n    if (e.key === 'Enter') {\n      fn();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <div className=\"NewGroup\">\n            <div className=\"form roommates\">\n              <h4 className=\"form-title\">{newGroupStore.name}</h4>\n              <p>What are the chores y'all have to do?</p>\n              {\n                newGroupStore.tasks.map((task ) => { \n                  return <div key={task.id}>{task.name} - {task.schedule}</div>\n                })\n              }\n              <Input id=\"chore-name-input\" placeholder=\"Chore Name\"/>\n              <Input id=\"chore-email-input\" placeholder=\"Chore Description\"\n                onKeyPress={this.onKeyPress(this.addChore)}\n              />\n              <div style={{paddingTop: \"25px\"}}>Frequency:{\" \"}\n                <select id=\"chore-frequency-input\" defaultValue=\"daily\">\n                  <option value=\"Daily\">Daily</option>\n                  <option value=\"Weekly\">Weekly</option>\n                  <option value=\"Biweekly\">Biweekly</option>\n                  <option value=\"Monthly\">Monthly</option>\n                  <option value=\"As Needed\">As Needed</option>\n                </select>\n              </div>\n              <div>\n                <Button stylename=\"button--call-to-action\" onClick={this.addChore}> Add Chore +</Button>\n                <Button onClick={this.saveGroup}>Added All Chores ></Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n})\n\nexport default NewChores;\n","import React from 'react';\n\nimport '../styles/CircleInitials.scss'\n\nconst CircleInitials = ({ name, color }) => {\n  const parts = name.split(\" \");\n  let initials = parts[0][0];\n  if (1 < parts.length) {\n    initials += parts[1][0]; \n  }\n\n  return (\n    <p style={{backgroundColor: color}} className=\"circle-initials\">\n      {initials}\n    </p>\n  )\n}\n\nexport default CircleInitials;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\"\n\nimport groupStore from '../stores/groups';\n\nimport '../styles/TaskCard.scss'\nimport CircleInitials from './CircleInitials';\n\nconst titleMappings = {\n  \"Daily\": \"TODAY\",\n  \"Weekly\": \"THIS WEEK\",\n  \"Biweekly\": \"IN THE NEXT TWO WEEKS\",\n  \"Monthly\": \"THIS MONTH\",\n  \"As needed\": \"AS NEEDED\",\n  \"Coming up\": \"COMING UP\",\n}\n\nconst TaskCard = ({ tasks, title }) => {\n  if (tasks.length === 0) {\n    return null;\n  }\n  const items = tasks.map(task => {\n    const user = groupStore.group.users[task.currentQueue[0]];\n    return (\n      <li key={task.id} className=\"task-card-item\">\n        <span>\n          <span className=\"task-card-check\"><i className=\"far fa-check-circle\"></i></span>\n          {task.name} \n          <span className=\"task-card-right\">\n            <CircleInitials name={user.name} color={user.color} />\n            <Link className=\"task-card-focus-button\" to={\"/groups/\" + groupStore.group.id + \"/tasks/\" + task.id}><i className=\"fas fa-angle-right\"></i></Link>\n          </span>\n        </span>\n      </li>\n    )\n  })\n  return (\n    <section className=\"task-card\">\n      <header className=\"task-card-title\"> \n        {titleMappings[title] ? titleMappings[title] : title}\n      </header>\n      <ul className=\"task-card-list\">\n        {items}\n      </ul>\n    </section>\n  )\n}\n\nexport default observer(TaskCard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\"\n\nimport groupStore from '../stores/groups';\nimport userStore from '../stores/users';\n\nimport '../styles/Notif.scss';\n\nconst Notif = observer(class Notif extends Component {\n  render() {\n    return (\n      <div id={this.props.id} className=\"Notif\">\n        {this.props.notifText}\n      </div>\n    )\n  }\n});\n\nexport default Notif;","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport groupStore from '../stores/groups';\nimport userStore from '../stores/users';\nimport CircleInitials from './CircleInitials';\nimport CallToActionButton from './CallToActionButton';\nimport Notif from \"./Notif.js\";\n\nimport '../styles/FocusedTask.scss'\n\nconst FocusedTask = ({ task, closeURL }) => {\n  const queue = task.currentQueue.map(email => {\n    const user = groupStore.group.users[email];\n    return (\n      <li key={email} className=\"focused-task-queue-item\">\n        <span><CircleInitials name={user.name} color={user.color} style={{display: 'inline'}} />{user.name}</span>\n      </li>\n    )\n  })\n\n  const handleComplete = () => {\n    document.getElementById(task.name).style.top = 0;\n    task.currentQueue.push(task.currentQueue.shift());\n    setTimeout(()=>{document.getElementById(task.name).style.top = \"-50px\";}, 2000);\n  }\n\n  return (\n    <section className=\"focused-task-card\">\n      <Notif id={task.name} notifText={task.name+\" - Done!\"}/>\n      <div className=\"focused-task-content\">\n        <div className=\"focused-task-close\">\n          <Link className=\"focused-task-close-button\" to={closeURL}>x</Link>\n        </div>\n        <header className=\"focused-task-card-name\"> \n          <h2>{task.name}</h2>\n        </header>\n        <p className=\"focused-task-card-desc\">\n          {task.description}\n        </p>\n\n        <ul className=\"focused-task-queue\">\n          {queue}\n        </ul>\n        {userStore.currentUser == task.currentQueue[0] ?\n          (<CallToActionButton onClick={handleComplete}>COMPLETE TASK</CallToActionButton>)\n          :\n          null\n         }\n        \n      </div>\n    </section>\n  )\n}\n\nexport default FocusedTask;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { push as Menu } from \"react-burger-menu\";\n\nimport userStore from \"../stores/users\";\n\nimport \"../styles/NavBar.scss\";\n\n\nconst NavBar = () => {\n  return (\n    <Menu>\n      <NavLink exact className=\"link\" to={\"/\"}>\n        HOME\n      </NavLink>\n      <NavLink exact className=\"link\" to={\"/groups\"}>\n        GROUPS\n      </NavLink>\n      <NavLink exact className=\"link\" to={\"/\"} onClick={() => {userStore.logout()}}>\n        LOGOUT\n      </NavLink>\n    </Menu>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\n\nimport \"../styles/AddChoreButton.scss\";\n\nconst AddChoreButton = props => {\n  return <button className=\"chore-button\">+</button>;\n};\n\nexport default AddChoreButton;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\"\nimport Spinner from 'react-spinkit';\n\nimport TaskCard from \"./TaskCard\";\nimport FocusedTask from \"./FocusedTask\";\nimport NavBar from \"./NavBar\";\nimport AddChoreButton from \"./AddChoreButton\";\nimport Notif from \"./Notif.js\";\n\nimport groupStore from '../stores/groups';\nimport userStore from '../stores/users';\n\nimport '../styles/MyTasks.scss';\n\nconst MyTasks = observer(class MyTasks extends Component {\n  componentDidMount() {\n    const groupID = this.props.match.params.group;\n    groupStore.get(groupID);\n  }\n\n  render() {\n    let content = (<Spinner className=\"center\" name='double-bounce' />);\n    const groupID = this.props.match.params.group;\n    if (!groupStore.isFetching) {\n      let focusedTask;\n      const tasks = groupStore.group.tasks.reduce((m, task) => {\n        if (this.props.match.params.id) {\n          if (task.id === this.props.match.params.id) {\n            focusedTask = task;\n          }\n        }\n\n        if (task.currentQueue[0] === userStore.currentUser) {\n          m[task.schedule].push(task);\n        } else if (1 < task.currentQueue.length && task.currentQueue[1] === userStore.currentUser) {\n          m[\"Coming up\"].push(task);\n        }\n        \n        return m;\n      }, {\n        \"Daily\": [],\n        \"Weekly\": [],\n        \"Biweekly\": [],\n        \"Monthly\": [],\n        \"As Needed\": [],\n        \"Coming up\": [],\n      });\n\n      const cards = Object.entries(tasks).map(kv => {\n        return (<TaskCard key={kv[0]} title={kv[0]} tasks={kv[1]} />)\n      });\n\n      content = (\n        <div>\n          <h1 className=\"center\">{groupStore.group.name}</h1>\n            <h2 className=\"center\">My Tasks</h2>\n\n            <section className=\"my-tasks-columns\">\n              <div className=\"my-tasks-cards\">\n                {cards}\n              </div>\n              {focusedTask && (<FocusedTask task={focusedTask} closeURL={\"/groups/\" + groupID + \"/tasks\"} />)}\n            </section>\n        </div>\n      )\n    }\n\n    return (\n      <div>\n        <NavBar />\n        <div className=\"MyTasks\">\n          {content}\n        </div>\n        <Link to={\"/groups/\" + groupID + \"/addchore\"}>\n          <AddChoreButton />\n        </Link>\n      </div>\n    );\n  }\n})\n\nexport default MyTasks;\n","import React, { Component } from 'react';\nimport { observer } from \"mobx-react\"\n\nimport Button from './Button';\nimport Input from './Input';\n\nimport userStore from '../stores/users';\n\nimport '../styles/Main.scss';\nimport '../styles/NewGroup.scss';\n\n\n\nconst Login = observer(class Login extends Component {\n  emailRE = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      styles: {}\n    };\n\n    this.onKeyPress = this.onKeyPress.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this); \n  }\n\n  onKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit();\n    }\n  }\n\n  handleChange(e) {\n    this.setState({\n      email: e.target.value,\n      styles: {}\n    });\n  }\n\n  handleSubmit() {\n    if (this.state.email.trim() && this.emailRE.test(this.state.email)) {\n      userStore.setCurrentUser(this.state.email);\n      let params = new URLSearchParams(this.props.location.search);\n      const next = params.get('redirect') ? params.get('redirect') : '/groups';\n      this.props.history.push(next);\n    } else {\n      this.setState({\n        email: this.state.email,\n        styles: {\n          borderBottom: \"3px solid #E00747\"\n        }\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <div className=\"NewGroup\">\n          <div className=\"form group-name\">\n            <p>What is your email?</p>\n            <Input id=\"group-name-input\" style={this.state.styles} placeholder=\"Email\" value={this.state.value} onChange={this.handleChange} onKeyPress={this.onKeyPress} />\n            <Button stylename=\"button--next\" onClick={this.handleSubmit} />\n          </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n});\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport NavBar from \"./NavBar\";\nimport Input from \"./Input\";\nimport Button from \"./Button\";\n\nimport \"../styles/AddChore.scss\";\n\nclass AddChore extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirect: false\n    };\n  }\n\n  addChore = () => {\n    // TODO: USE FIREBASE TO ADD CHORE AND REDIRECT AS CALLBACK\n    this.setState({ redirect: true });\n    console.log(this.state.redirect);\n  };\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to=\"/tasks\" />;\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        {this.renderRedirect()}\n        <NavBar />\n        <div className=\"MyTasks center AddChore\">\n          <h1>The CSS Slayers</h1>\n          <h2>Add Chore</h2>\n          <Input id=\"task-name-id\" placeholder=\"Chore Name\" />\n          <br />\n          <textarea\n            className=\"text-input\"\n            id=\"task-desc-id\"\n            placeholder=\"Chore Description\"\n          />\n          <br />\n          Frequency:{\" \"}\n          <select id=\"task-freq-id\" defaultValue=\"daily\">\n            <option value=\"daily\">Daily</option>\n            <option value=\"weekly\">Weekly</option>\n            <option value=\"biweekly\">Biweekly</option>\n            <option value=\"monthly\">Monthly</option>\n            <option value=\"as_needed\">As Needed</option>\n          </select>\n          <br />\n          <Button stylename=\"\" onClick={this.addChore}>\n            Add Chore\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddChore;\n","import React, { Component } from 'react';\nimport { observer } from \"mobx-react\"\nimport { Link } from \"react-router-dom\";\nimport Spinner from 'react-spinkit';\n\n\nimport userStore from '../stores/users';\n\nimport '../styles/Main.scss';\nimport '../styles/NewGroup.scss';\n\nconst GroupList = observer(class GroupList extends Component {\n  constructor(props) {\n    super(props);\n    userStore.fetchCurrentUsersGroups();\n  }\n\n  render() {\n    let content = (\n      <div>\n        <Spinner name='double-bounce' />\n      </div>\n    );\n\n    if (!userStore.fetching) {\n      const groups = userStore.usersGroups.map(group => {\n        return (\n          <li key={group.id}>\n            <Link to={\"/groups/\" + group.id + \"/tasks\"}>{group.name}</Link>\n          </li>\n        )\n      });\n      content = (\n        <section>\n          <h1>Your Groups</h1>\n          <ul>\n            {groups}\n          </ul>\n        </section>\n      )\n    }\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <div className=\"NewGroup\">\n          <div className=\"form group-name\">\n            {content}\n          </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n});\n\nexport default GroupList;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport AuthenticatedRoute from './components/AuthenticatedRoute';\n\nimport Main from \"./components/Main\";\nimport NewGroup from \"./components/NewGroup\";\nimport NewTasks from \"./components/NewTasks\";\nimport MyTasks from \"./components/MyTasks\";\nimport Login from \"./components/Login\";\nimport AddChore from \"./components/AddChore\";\nimport GroupList from \"./components/GroupList\";\n\nimport \"./styles/index.scss\";\n\nconst App = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <main>\n      <Route path=\"/\" exact component={Main} />\n      <Route path=\"/login\" exact component={Login} />\n      <AuthenticatedRoute path=\"/new\" exact component={NewGroup} />\n      <AuthenticatedRoute path=\"/newchores\" exact component={NewTasks} />\n      <AuthenticatedRoute path=\"/groups\" exact component={GroupList} />\n      <AuthenticatedRoute path=\"/groups/:group/tasks\" exact component={MyTasks} />\n      <AuthenticatedRoute path=\"/groups/:group/tasks/:id\" exact component={MyTasks} />\n      <AuthenticatedRoute path=\"/groups/:group/addchore\" exact component={AddChore} />\n    </main>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}