{"version":3,"sources":["Firebase.js","stores/errors.js","stores/groups.js","stores/users.js","components/AuthenticatedRoute.js","components/CallToActionButton.js","components/Button.js","components/NavBar.js","components/HelpTool.js","components/Main.js","components/Input.js","stores/newGroup.js","components/NewGroup.js","components/FrequencyOptions.js","components/NewTasks.js","components/CircleInitials.js","components/TaskCard.js","components/Notif.js","components/FocusedTask.js","components/AddChoreButton.js","components/MyTasks.js","components/Login.js","components/AddChore.js","components/GroupList.js","components/Leaderboard.js","App.js","serviceWorker.js","index.js","img/churro.svg"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ErrorStore","errors","timeoutFn","_this","this","clearTimeout","setTimeout","err","push","waitAndClear","length","decorate","observable","addError","action","hasErrors","computed","GroupStore","Object","classCallCheck","group","isFetching","db","firestore","settings","timestampsInSnapshots","collection","autorun","updateGroup","delay","id","_this2","doc","get","then","exists","data","console","log","catch","errorStore","email","_this3","where","docs","empty","groups","forEach","item","name","description","schedule","task","Date","now","currentQueue","shuffle","toConsumableArray","user_emails","tasks","shortid","generate","set","res","a","i","j","Math","floor","random","_ref","getUsersGroups","add","stores_groups","STORAGE_KEY","UserStore","currentUser","usersGroups","fetching","localStorage","getItem","removeItem","user","setItem","isLoggedIn","groupStore","map","users","setCurrentUser","getCurrentUsersGroups","stores_users","AuthenticatedRoute","Component","component","rest","objectWithoutProperties","react_default","createElement","Route","assign","render","props","userStore","Redirect","to","location","pathname","CallToActionButton","className","children","Button","stylename","concat","NavBar","BurgerMenu","NavLink","exact","onClick","logout","HelpTool","info","class","Main","observer","_Component","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","elem","document","getElementById","style","left","opacity","src","churro","Link","components_CallToActionButton","transitionOut","components_Button","Input","USER_COLORS","NewGroupStore","color","keys","splice","addUser","addTask","clear","newGroup","NewGroup","call","formFlow","current_step","next_step","e","newState","step","setState","addRoommate","new_roommate","newGroupStore","removeRoommate","removeUser","onKeyPress","fn","onUsersName","trim","state","formElement","components_Input","placeholder","onChange","target","components_HelpTool","values","roommate","index","groupName","getFormElement","options","label","suggestedChores","frequency","NewChores","addChore","new_chore","selectedOption","removeChore","suggestions","usedSuggestions","removeTask","saveGroup","save","history","onSuggestionClick","idx","newSuggestions","handleChange","paddingTop","width","fontSize","react_select_esm","CircleInitials","parts","split","initials","backgroundColor","titleMappings","Daily","Weekly","Biweekly","Monthly","As Needed","Coming up","title","items","components_CircleInitials","alt","Notif","notifText","closeURL","queue","display","random_churros","components_Notif","top","shift","AddChoreButton","MyTasks","onToggleChange","all","groupID","match","params","content","dist_default","focusedTask","reduce","m","toString","cards","entries","kv","components_TaskCard","components_FocusedTask","components_NavBar","right","components_AddChoreButton","Login","emailRE","validEmail","password","styles","bind","assertThisInitialized","handleChangeEmail","handleChangePassword","handleSubmit","test","URLSearchParams","search","next","borderBottom","type","AddChore","handleComplete","goBack","GroupList","fetchCurrentUsersGroups","Leaderboard","leaderboard","App","BrowserRouter","basename","process","path","components_AuthenticatedRoute","NewTasks","Boolean","window","hostname","ReactDOM","src_App","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.d8a34e22.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyAZnwch_QKuS6OPefMuAoUtEQd_ppiaa50\",\n  authDomain: \"churro-126ca.firebaseapp.com\",\n  databaseURL: \"https://churro-126ca.firebaseio.com\",\n  projectId: \"churro-126ca\",\n  storageBucket: \"\",\n  messagingSenderId: \"285905994423\"\n});\n\nexport default firebase;\n\n","import { observable, computed, decorate, action } from 'mobx'\n\nclass ErrorStore {\n  errors = [];\n  timeoutFn = null;\n\n  waitAndClear() {\n    if (this.timeoutFn !== null) {\n      clearTimeout(this.timeoutFn);\n    }\n    this.timeoutFn = setTimeout(() => {\n     this.errors = []; \n     this.timeoutFn = null;\n    }, 5000);\n  }\n\n  clear() {\n    this.errors = [];\n  }\n\n  addError(err) {\n    this.errors.push(err);\n    this.waitAndClear();\n  }\n\n  get hasErrors() {\n    return 0 < this.errors.length;\n  }\n}\n\ndecorate(ErrorStore, {\n  errors: observable,\n  addError: action,\n  hasErrors: computed\n});\n\nexport default new ErrorStore();","import { observable, decorate, action, autorun } from 'mobx';\nimport shortid from 'shortid';\n\nimport firebase from '../Firebase';\nimport errorStore from './errors';\n\nclass GroupStore {\n  group = null;\n  isFetching = true;\n\n  constructor(firebase) {\n    // Initialize Cloud Firestore through Firebase\n    var db = firebase.firestore();\n\n    // Disable deprecated features\n    db.settings({\n      timestampsInSnapshots: true\n    });\n    this.db = db.collection('groups');\n    autorun(() => this.updateGroup(), { delay: 300 });\n  }\n\n  get(id) {\n    if (this.group !== null && this.group.id === id) {\n      return;\n    }\n\n    this.isFetching = true;\n    return this.db.doc(id).get().then((doc) => {\n      if (!doc.exists) {\n        console.log('No group with id of ' + id);\n        return;\n      }\n\n      this.group = doc.data();\n      this.group.id = id;\n      this.isFetching = false;\n      return this.group;\n    }).catch(err => {\n      this.isFetching = false;\n      errorStore.addError(err);\n    })\n  }\n\n  getUsersGroups(email) {\n    return this.db.where('user_emails', 'array-contains', email).get().then((docs) => {\n      if (docs.empty) {\n        console.log('User has no groups with email ' + email);\n        return;\n      }\n\n      let groups = [];\n      docs.forEach(doc => {\n        const group = doc.data();\n        let item =  {\n          id: doc.id,\n          name: group.name\n        }\n        groups.push(item);\n      });\n      return groups;\n    }).catch(err => {\n      this.isFetching = false;\n      errorStore.addError(err);\n    });\n  }\n\n  addTask(name, description, schedule) {\n    const task = {\n      id: Date.now(),\n      name,\n      schedule,\n      description,\n      currentQueue: this.shuffle([...this.group.user_emails])\n    }\n\n    this.group.tasks.push(task);\n  }\n\n  add(group) {\n    group.id = shortid.generate();\n    return this.db.doc(group.id).set(group).then(doc => {\n      console.log(group);\n      return group;\n    }).catch(err => {\n      errorStore.addError(err);\n    });\n  }\n\n  updateGroup() {\n    if (this.group === null) {\n      return;\n    }\n    this.db.doc(this.group.id).set(this.group).then(res => {\n      console.log('Successfully updated group');\n    }).catch(err => {\n      errorStore.addError(err);\n    })\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\ndecorate(GroupStore, {\n  group: observable,\n  isFetching: observable,\n  get: action,\n  getUsersGroups: action,\n  add: action,\n})\n\n\nexport default new GroupStore(firebase);","import { observable, computed, decorate, action } from 'mobx'\n\nimport groupStore from './groups';\n\nconst STORAGE_KEY = 'churro-user';\n\nclass UserStore {\n  currentUser = '';\n  usersGroups = [];\n  fetching = false;\n\n  constructor() {\n    if (localStorage.getItem(STORAGE_KEY)) {\n      this.currentUser = localStorage.getItem(STORAGE_KEY);\n    }\n  }\n\n  get isLoggedIn() {\n    return this.currentUser !== '';\n  }\n\n  logout() {\n    this.currentUser = '';\n    this.usersGroups = [];\n    localStorage.removeItem(STORAGE_KEY);\n  }\n\n  setCurrentUser(user) {\n    this.currentUser = user;\n    console.log('Set current user to ' + this.currentUser);\n    localStorage.setItem(STORAGE_KEY, user);\n  }\n\n  fetchCurrentUsersGroups() {\n    if (!this.isLoggedIn) {\n      return;\n    }\n    this.fetching = true;\n    groupStore.getUsersGroups(this.currentUser)\n      .then(groups => {\n        console.log(groups);\n        this.usersGroups = groups.map(group => { \n          return {\n            id: group.id, \n            name: group.name\n          }\n        });\n        this.fetching = false;\n      }).catch(err => {\n        console.log(err);\n        this.fetching = false;\n      });\n  }\n}\n\ndecorate(UserStore, {\n  currentUser: observable,\n  usersGroups: observable, \n  users: observable, \n  fetching: observable, \n  isLoggedIn: computed,\n  setCurrentUser: action,\n  getCurrentUsersGroups: action,\n});\n\nexport default new UserStore();","import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport userStore from '../stores/users';\n\nconst AuthenticatedRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        userStore.isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={\"/login?redirect=\" + props.location.pathname}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default AuthenticatedRoute;","import React from 'react';\n\nimport '../styles/Button.scss';\n\nconst CallToActionButton = (props) => {\n  return (\n    <button className=\"button button--call-to-action\" {...props}>{ props.children }</button>\n  )\n}\n\nexport default CallToActionButton;\n","import React from 'react';\n\nimport '../styles/Button.scss';\n\nconst Button = (props) => {\n  let stylename = '';\n  if (props && props.stylename) stylename = props.stylename;\n  return (\n    <button className={`button ${stylename}`} {...props} >{ props.children }</button>\n  )\n}\n\nexport default Button;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { push as Menu } from \"react-burger-menu\";\n\nimport userStore from \"../stores/users\";\n\nimport \"../styles/NavBar.scss\";\n\nconst NavBar = () => {\n  return (\n    <Menu>\n      <NavLink exact className=\"link\" to={\"/\"}>\n        HOME\n      </NavLink>\n      <NavLink exact className=\"link\" to={\"/groups\"}>\n        GROUPS\n      </NavLink>\n      <NavLink\n        exact\n        className=\"link\"\n        to={\"/\"}\n        onClick={() => {\n          userStore.logout();\n        }}\n      >\n        LOGOUT\n      </NavLink>\n    </Menu>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\n\nimport \"../styles/HelpTool.scss\";\n\nconst HelpTool = ({ info }) => {\n  return (\n    <i class=\"fas fa-info-circle tool-icon\">\n      <span class=\"info\">{info}</span>\n    </i>\n  );\n};\n\nexport default HelpTool;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\";\n\nimport CallToActionButton from \"./CallToActionButton\";\nimport Button from \"./Button\";\nimport NavBar from \"./NavBar\";\nimport HelpTool from \"./HelpTool\";\n\nimport userStore from \"../stores/users\";\nimport churro from \"../img/churro.svg\";\n\nimport \"../styles/Main.scss\";\n\nconst Main = observer(\n  class Main extends Component {\n    transitionOut() {\n      let elem = document.getElementById(\"landing\");\n      elem.style.left = \"-10%\";\n      elem.style.opacity = 0;\n    }\n\n    render() {\n      return (\n        <div className=\"Main\">\n          <div className=\"container\">\n            <div id=\"landing\">\n              <img className=\"landing-img\" src={churro} />\n              <h2 className=\"welcome-header\">Welcome to Churro!</h2>\n              <h4 className=\"welcome-subheader\">\n                The New Way to Manage Chores\n              </h4>\n              <div className=\"button-container\">\n                <Link to=\"/new\">\n                  <CallToActionButton onClick={this.transitionOut}>\n                    START A NEW GROUP\n                  </CallToActionButton>\n                </Link>\n                <Link to={userStore.isLoggedIn ? \"/groups\" : \"/login\"}>\n                  <Button>\n                    {userStore.isLoggedIn ? \"YOUR GROUPS\" : \"LOGIN\"}\n                  </Button>\n                </Link>\n                {\n                  userStore.isLoggedIn ? <Button onClick={() => userStore.logout()}>LOGOUT</Button>: \"\" \n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n);\n\nexport default Main;\n","import React from 'react';\n\nimport '../styles/Input.scss';\n\nconst Input = (props) => {\n  return (\n    <input className=\"input\" {...props} >{ props.children }</input>\n  )\n}\n\nexport default Input;\n","import { observable, decorate, action } from 'mobx'\n\nimport groupStore from './groups';\nimport errorStore from './errors';\n\nconst USER_COLORS = [\n  'tomato',\n  'plum',\n  'teal',\n  'turquoise',\n  'forestGreen',\n  'fireBrick',\n  'MediumVioletRed',\n  'DarkOrange',\n  'gold',\n  'SlateBlue',\n  'CadetBlue',\n  'Navy',\n  'DarkSlateGray',\n  'LightSlateGray'\n]\n\n\nclass NewGroupStore {\n  name = '';\n  users = {};\n  tasks = [];\n\n  addUser(name, email) {\n    const user = {\n      id: Date.now(),\n      name,\n      email,\n      color: USER_COLORS[Object.keys(this.users).length%USER_COLORS.length]\n    }\n\n    this.users[email] = user;\n  }\n\n  removeUser(email) {\n    delete(this.users[email]);\n  }\n\n  addTask(name, description, schedule) {\n    const task = {\n      id: Date.now(),\n      name,\n      schedule,\n      description,\n      currentQueue: this.shuffle(Object.keys(this.users))\n    }\n\n    this.tasks.push(task);\n  }\n\n  removeTask(name, schedule) {\n    for (let i = 0; i < this.tasks.length; i++) {\n      if (this.tasks[i].name == name && this.tasks[i].schedule == schedule) {\n        this.tasks.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  clear() {\n    this.name = '';\n    this.users = {};\n    this.tasks = [];\n  }\n\n  save() {\n    const group = {\n      name: this.name,\n      users: this.users,\n      tasks: this.tasks,\n      user_emails: Object.keys(this.users)\n    }\n\n    return groupStore.add(group).then(res => {\n      console.log(res);\n      return res;\n    }).catch(err => {\n      errorStore.addError(err);\n    })\n  }\n\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\ndecorate(NewGroupStore, {\n  name: observable,\n  users: observable,\n  tasks: observable,\n  addUser: action,\n  addTask: action,\n  clear: action,\n});\n\nexport default new NewGroupStore();","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\";\n\nimport Button from \"./Button\";\nimport Input from \"./Input\";\n\nimport \"../styles/Main.scss\";\nimport \"../styles/NewGroup.scss\";\n\nimport newGroupStore from '../stores/newGroup';\nimport userStore from '../stores/users';\nimport HelpTool from \"./HelpTool.js\";\n\nconst NewGroup = observer(class NewGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      step: props.location.state ? props.location.state : \"your-name\",\n      name: ''\n    };\n  }\n\n  formFlow = (current_step, next_step) => e => {\n    let newState = { step: next_step };\n    this.setState(newState);\n  };\n\n  addRoommate = () => {\n    let new_roommate = {\n      name: document.getElementById(\"roommate-name-input\").value,\n      email: document.getElementById(\"roommate-email-input\").value\n    };\n    document.getElementById(\"roommate-name-input\").value = \"\";\n    document.getElementById(\"roommate-email-input\").value = \"\";\n    newGroupStore.addUser(new_roommate.name, new_roommate.email);\n  };\n\n  removeRoommate = (email) => e => {\n    newGroupStore.removeUser(email);\n  };\n\n  onKeyPress = fn => e => {\n    if (e.key === 'Enter') {\n      fn();\n    }\n  }\n\n  onUsersName = () => {\n    const name = document.getElementById(\"user-name-input\").value;\n   \n    if (name && name.trim()) {\n      this.setState({name: name});\n      this.formFlow(\"your-name\", \"group-name\")();\n      newGroupStore.addUser(name, userStore.currentUser);\n    }\n  }\n\n  getFormElement() {\n    let formElement;\n    let _this = this;\n    if (this.state.step === \"your-name\") {\n      formElement =(\n        <div className=\"form group-name\">\n          <p>What is your name?</p>\n          <Input id=\"user-name-input\" placeholder=\"Your Name\"\n            onKeyPress={this.onKeyPress(this.onUsersName)}\n          />\n          <Button\n            stylename=\"button--next\"\n            onClick={() => {this.onUsersName()}}\n          />\n        </div>\n      );\n    }\n\n    if (this.state.step === \"group-name\") {\n      formElement = (\n        <div className=\"form group-name\">\n          <p>Hi {this.state.name}!<br/> What would you like to name your Churro group?</p>\n          <Button\n            stylename=\"button--back\"\n            onClick={this.formFlow(\"group-name\", \"your-name\")}\n          />\n          <Input id=\"group-name-input\" placeholder=\"Group Name\"\n            onKeyPress={this.onKeyPress(this.formFlow(\"group-name\", \"roommates\"))}\n            value={newGroupStore.name}\n            onChange={(e) => newGroupStore.name = e.target.value}\n          />\n          <Button\n            stylename=\"button--next\"\n            onClick={this.formFlow(\"group-name\", \"roommates\")}\n          />\n        </div>\n      );\n    } else if (this.state.step === \"roommates\") {\n      formElement = (\n        <div className=\"form roommates\">\n          <h4 className=\"form-title\">{newGroupStore.name}</h4>\n          <p>\n            {this.state.name}, can you tell us who are the roommates in {newGroupStore.name}?\n            <HelpTool \n              info=\"Add the name and email of a \n              room mate and press the Add Roommate button.\n              Keep repeating this until you've added all roommates.\n              \" \n            />\n          </p>\n          \n          <div className=\"roommates-list-container\">\n          {\n            Object.values(newGroupStore.users).map(function(roommate, index) {\n              return (\n                <div key={index}>\n                  <span className=\"roommate-list-item\">{roommate.name} - {roommate.email}</span>\n                  <Button\n                    stylename=\"button--delete\"\n                    onClick={this.removeRoommate(roommate.email)}\n                  />\n                </div>\n                );\n            }, this)\n          }\n          </div>\n          <Input id=\"roommate-name-input\" placeholder=\"Roommate Name\" />\n          <Input id=\"roommate-email-input\" placeholder=\"Roommate Email\" \n            onKeyPress={this.onKeyPress(_this.addRoommate)}\n          />\n          <div>\n            <Button\n              stylename=\"button--back\"\n              onClick={this.formFlow(\"roommates\", \"group-name\")}\n            />\n            <Button\n              stylename=\"button--call-to-action\"\n              onClick={_this.addRoommate}\n            >\n              {\" \"}\n              Add Roommate +\n            </Button>\n            <Link to={{ pathname: '/newchores', state: { groupName: this.state.groupName} }}>\n              <Button>Added All Roommates ></Button>\n            </Link>\n          </div>\n        </div>\n      );\n    }\n    return formElement;\n  }\n\n  render() {\n    let formElement = this.getFormElement();\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <div className=\"NewGroup\">{formElement}</div>\n        </div>\n      </div>\n    );\n  }\n})\n\nexport default NewGroup;\n","const options = [\n  { value: 'Daily', label: 'Daily' },\n  { value: 'Weekly', label: 'Weekly' },\n  { value: 'Biweekly', label: 'Biweekly' },\n  { value: 'Monthly', label: 'Monthly' },\n  { value: 'As Needed', label: 'As Needed' }\n];\n\nexport default options;","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\";\n\nimport Button from './Button';\nimport Input from './Input';\nimport HelpTool from \"./HelpTool.js\";\nimport options from \"./FrequencyOptions\"\nimport Select from 'react-select';\n\nimport '../styles/Main.scss';\nimport '../styles/NewGroup.scss';\n\nimport newGroupStore from '../stores/newGroup';\n\nconst suggestedChores = [\n  {\n    name: 'Do the dishes',\n    description: 'Don\\'t forget to squeeze out the sponge after.',\n    frequency: 'Daily'\n  },\n  {\n    name: 'Take out the trash',\n    description: 'Put in a new bag too!',\n    frequency: 'As Needed'\n  },\n  {\n    name: 'Maintenance request',\n    description: 'Let everyone know afterwards',\n    frequency: 'As Needed'\n  },\n  {\n    name: 'Vaccum the floor',\n    description: 'Empty out the vaccum after too.',\n    frequency: 'Biweekly'\n  },\n  {\n    name: 'Sweep the floor',\n    description: 'Make sure to do a decent job.',\n    frequency: 'Biweekly'\n  },\n]\n\nconst NewChores = observer(class NewChores extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      usedSuggestions: [],\n      suggestions: suggestedChores,\n      selectedOption: null,\n    }\n  } \n\n  addChore = () => {\n    let new_chore = {\n      name: document.getElementById('chore-name-input').value,\n      description: document.getElementById('chore-email-input').value,\n      frequency: this.state.selectedOption? this.state.selectedOption.value : options[0].value\n    }\n    document.getElementById('chore-name-input').value = '';\n    document.getElementById('chore-email-input').value = '';\n    newGroupStore.addTask(new_chore.name, new_chore.description, new_chore.frequency);\n  }\n\n  removeChore = (name, description, schedule) => e => {\n    let suggestions = this.state.suggestions;\n    let usedSuggestions = this.state.usedSuggestions;\n    for (let i = 0; i < usedSuggestions.length; i++) {\n      if (usedSuggestions[i].name == name && usedSuggestions[i].description == description \n        && usedSuggestions[i].frequency == schedule) {\n        suggestions.push(usedSuggestions[i]);\n        usedSuggestions.splice(i, 1);\n        break;\n      }\n    }\n    newGroupStore.removeTask(name, schedule);\n    this.setState({\n      usedSuggestions: usedSuggestions,\n      suggestions: suggestions\n    });\n  }\n\n  saveGroup = () => {\n    newGroupStore.save().then(group => {\n      this.props.history.push('/groups/' + group.id + '/tasks');\n      newGroupStore.clear();\n      console.log('cleared');\n    })\n  }\n\n  onKeyPress = fn => e => {\n    if (e.key === 'Enter') {\n      fn();\n    }\n  }\n\n  onSuggestionClick = (task, idx) => e => {\n    newGroupStore.addTask(task.name, task.description, task.frequency);\n    let newSuggestions = [...this.state.suggestions];\n    let usedSuggestions = this.state.usedSuggestions;\n    usedSuggestions.push(newSuggestions[idx]);\n    newSuggestions.splice(idx, 1);\n    this.setState({\n      usedSuggestions: usedSuggestions,\n      suggestions: newSuggestions\n    });\n  }\n\n  handleChange = (selectedOption) => {\n    this.setState({ selectedOption });\n  }\n\n  render() {\n    const suggestions = this.state.suggestions.map((task, idx) => {\n      return (\n        <button key={idx} className=\"suggested-chores\" onClick={this.onSuggestionClick(task, idx)}>{task.name}</button>\n      );\n    })\n    const selectedOption = this.state.selectedOption;\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <div className=\"NewGroup\">\n            <div className=\"form roommates\">\n              <h4 className=\"form-title\">{newGroupStore.name}</h4>\n              <span>What are the chores y'all have to do? \n                <HelpTool \n                info=\"Add Chore name and description and press Add Chore.\n                You can also click on the suggested chores at the bottom.\n                Once you've added all chores, click on Added All Chores.\n                \" \n                />\n              </span>\n              <div className=\"chore-items-container\">\n              {\n                newGroupStore.tasks.map((task ) => { \n                  return (\n                    <div key={task.id}>\n                      <div className=\"chore-todo\"><span>{task.name} - {task.schedule}</span>\n                      <Button\n                        stylename=\"button--delete\"\n                        onClick={this.removeChore(task.name, task.description, task.schedule)}\n                      /></div>\n                    </div>\n                    );\n                })\n              }\n              </div>\n              <Input id=\"chore-name-input\" placeholder=\"Chore Name\"/>\n              <Input id=\"chore-email-input\" placeholder=\"Chore Description\"\n                onKeyPress={this.onKeyPress(this.addChore)}\n              />\n              <div style={{paddingTop: \"25px\", width: \"250px\", fontSize: \"12px\"}}>\n                <Select\n                  value={selectedOption}\n                  onChange={this.handleChange}\n                  options={options}\n                  placeholder=\"Frequency\"\n                />\n              </div>\n              <div>\n                <Link to={{ pathname: '/new', state: \"roommates\"}}>\n                  <Button\n                    stylename=\"button--back\"\n                  />\n                </Link>\n                <Button stylename=\"button--call-to-action\" onClick={this.addChore}> Add Chore +</Button>\n                <Button onClick={this.saveGroup}>Added All Chores ></Button>\n              </div>\n              {\n                0 < suggestions.length ? (\n                  <div >\n                    <p>Suggestions</p>\n                    <div className=\"chore-items-container\">{suggestions}</div>\n                  </div>\n                ) : null\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n})\n\nexport default NewChores;\n","import React from \"react\";\n\nimport \"../styles/CircleInitials.scss\";\n\nconst CircleInitials = ({ name, color }) => {\n  const parts = name.split(\" \");\n  let initials = parts[0][0];\n  if (1 < parts.length) {\n    initials += parts[1][0];\n  }\n\n  return (\n    <p style={{ backgroundColor: color }} className=\"circle-initials\">\n      {initials}\n      <span class=\"full-name\">{name}</span>\n    </p>\n  );\n};\n\nexport default CircleInitials;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\"\n\nimport groupStore from '../stores/groups';\n\nimport '../styles/TaskCard.scss'\nimport CircleInitials from './CircleInitials';\n\nconst titleMappings = {\n  \"Daily\": \"TODAY\",\n  \"Weekly\": \"THIS WEEK\",\n  \"Biweekly\": \"IN THE NEXT TWO WEEKS\",\n  \"Monthly\": \"THIS MONTH\",\n  \"As Needed\": \"AS NEEDED\",\n  \"Coming up\": \"COMING UP\",\n}\n\nconst TaskCard = ({ tasks, title }) => {\n  if (tasks.length === 0) {\n    return null;\n  }\n  const items = tasks.map(task => {\n    console.log(task.currentQueue[0]);\n    const user = groupStore.group.users[task.currentQueue[0]];\n    console.log(task, groupStore.group.users);\n    return (\n      <li key={task.id} className=\"task-card-item\">\n          <span className=\"task-card-check\"><i className=\"far fa-check-circle\"></i></span>\n          <span>{task.name}</span> \n          <span className=\"task-card-right\">\n            <CircleInitials name={user.name} color={user.color} alt={user.name} />\n            <Link className=\"task-card-focus-button\" to={\"/groups/\" + groupStore.group.id + \"/tasks/\" + task.id}><i className=\"fas fa-angle-right\"></i></Link>\n          </span>\n      </li>\n    )\n  })\n  return (\n    <section className=\"task-card\">\n      <ul className=\"task-card-list\">\n        <header className=\"task-card-title\"> \n          {titleMappings[title] ? titleMappings[title] : title}\n        </header>\n        {items}\n      </ul>\n    </section>\n  )\n}\n\nexport default observer(TaskCard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\"\n\nimport groupStore from '../stores/groups';\nimport userStore from '../stores/users';\n\nimport '../styles/Notif.scss';\n\nconst Notif = observer(class Notif extends Component {\n  render() {\n    return (\n      <div id={this.props.id} className=\"Notif\">\n        {this.props.notifText}\n      </div>\n    )\n  }\n});\n\nexport default Notif;","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\"\n\nimport groupStore from '../stores/groups';\nimport userStore from '../stores/users';\nimport CircleInitials from './CircleInitials';\nimport CallToActionButton from './CallToActionButton';\nimport Notif from \"./Notif.js\";\n\nimport '../styles/FocusedTask.scss'\n\nconst FocusedTask = ({ task, closeURL }) => {\n  const queue = task.currentQueue.map(email => {\n    const user = groupStore.group.users[email];\n    return (\n      <li key={email} className=\"focused-task-queue-item\">\n        <span><CircleInitials name={user.name} color={user.color} style={{display: 'inline'}} />{user.name}</span>\n      </li>\n    )\n  })\n\n  const handleComplete = () => {\n    document.getElementById(task.name).style.top = 0;\n    task.currentQueue.push(task.currentQueue.shift());\n    setTimeout(()=>{document.getElementById(task.name).style.top = \"-50px\";}, 2000);\n  }\n\n  let random_churros = Math.floor(Math.random() * 100);\n\n  return (\n    <section className=\"focused-task-card\">\n      <Notif id={task.name} notifText={task.name+\" - Done! You earned \" + random_churros + \" churros!\"}/>\n      <div className=\"focused-task-content\">\n        <header className=\"focused-task-card-name\"> \n          <div className=\"focused-task-close\">\n            <Link className=\"focused-task-close-button\" to={closeURL}>x</Link>\n          </div>\n          <h2>{task.name}</h2>\n        </header>\n        <p className=\"focused-task-card-desc\">\n          {task.description}\n        </p>\n\n        <ul className=\"focused-task-queue\">\n          {queue}\n        </ul>\n        {userStore.currentUser == task.currentQueue[0] ?\n          (<CallToActionButton onClick={handleComplete}>COMPLETE TASK</CallToActionButton>)\n          :\n          null\n         }\n        \n      </div>\n    </section>\n  )\n}\n\nexport default observer(FocusedTask);\n","import React from \"react\";\n\nimport \"../styles/AddChoreButton.scss\";\n\nconst AddChoreButton = props => {\n  return <button className=\"chore-button\">+</button>;\n};\n\nexport default AddChoreButton;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\";\nimport Spinner from \"react-spinkit\";\n\nimport TaskCard from \"./TaskCard\";\nimport Button from \"./Button\";\nimport FocusedTask from \"./FocusedTask\";\nimport NavBar from \"./NavBar\";\nimport AddChoreButton from \"./AddChoreButton\";\n\nimport groupStore from \"../stores/groups\";\nimport userStore from \"../stores/users\";\n\nimport \"../styles/MyTasks.scss\";\nimport churro from \"../img/churro.svg\";\n\nconst MyTasks = observer(\n  class MyTasks extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        all: false\n      };\n    }\n\n    onToggleChange = () => {\n      this.setState({\n        all: !this.state.all\n      })\n    }\n\n    componentDidMount() {\n      const groupID = this.props.match.params.group;\n      groupStore.get(groupID);\n    }\n\n    render() {\n      let content = <Spinner className=\"center\" name=\"double-bounce\" />;\n      const groupID = this.props.match.params.group;\n      if (!groupStore.isFetching) {\n        let focusedTask;\n        const tasks = groupStore.group.tasks.reduce(\n          (m, task) => {\n            if (this.props.match.params.id) {\n              if (task.id.toString() === this.props.match.params.id) {\n                focusedTask = task;\n              }\n            }\n\n            if (!this.state.all) {\n              if (task.currentQueue[0] === userStore.currentUser) {\n                m[task.schedule].push(task);\n              } else if (\n                1 < task.currentQueue.length &&\n                task.currentQueue[1] === userStore.currentUser\n              ) {\n                m[\"Coming up\"].push(task);\n              }\n            } else {\n              m[task.schedule].push(task);\n            }\n\n            return m;\n          },\n          {\n            Daily: [],\n            Weekly: [],\n            Biweekly: [],\n            Monthly: [],\n            \"As Needed\": [],\n            \"Coming up\": []\n          }\n        );\n\n        const cards = Object.entries(tasks).map(kv => {\n          return <TaskCard key={kv[0]} title={kv[0]} tasks={kv[1]} />;\n        });\n\n        content = (\n          <div className=\"MyTasks\">\n            <div className=\"group-heading center\">\n              <img className=\"churro-img\" src={churro} alt=\"logo\" />\n              <h1>{groupStore.group.name}</h1>\n            </div>\n            <p className=\"chores-list-title center\">{this.state.all ? \"All\" : \"Your\"} Chores List</p>\n            <section className=\"my-tasks-columns\">\n              <div className=\"my-tasks-cards\">{cards}</div>\n              {focusedTask && (\n                <FocusedTask\n                  task={focusedTask}\n                  closeURL={\"/groups/\" + groupID + \"/tasks\"}\n                />\n              )}\n            </section>\n          </div>\n        );\n      }\n\n      return (\n        <div>\n          <NavBar />\n          {content}\n          <Button stylename=\"button--leaderboard\" style={{right: \"230px\"}} onClick={this.onToggleChange}>Show {!this.state.all ? \"All\" : \"Just Your\"} Tasks</Button>\n          <Link to={\"/groups/\" + groupID + \"/leaderboard\"}>\n            <Button stylename=\"button--leaderboard\">Leaderboard</Button>\n          </Link>\n          <Link to={\"/groups/\" + groupID + \"/addchore\"}>\n            <AddChoreButton />\n          </Link>\n        </div>\n      );\n    }\n  }\n);\n\nexport default MyTasks;\n","import React, { Component } from 'react';\nimport { observer } from \"mobx-react\"\n\nimport Button from './Button';\nimport Input from './Input';\n\nimport userStore from '../stores/users';\n\nimport '../styles/Main.scss';\nimport '../styles/NewGroup.scss';\n\n\n\nconst Login = observer(class Login extends Component {\n  emailRE = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      validEmail: false,\n      password: '',\n      styles: {},\n    };\n\n    this.onKeyPress = this.onKeyPress.bind(this);\n    this.handleChangeEmail = this.handleChangeEmail.bind(this);\n    this.handleChangePassword = this.handleChangePassword.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this); \n  }\n\n  onKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit();\n    }\n  }\n\n  handleChangeEmail(e) {\n    this.setState({\n      email: e.target.value,\n      styles: {}\n    });\n  }\n\n  handleChangePassword(e) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  handleSubmit() {\n    console.log(this.state);\n    if (this.state.email.trim() && this.emailRE.test(this.state.email)) {\n      userStore.setCurrentUser(this.state.email);\n      let params = new URLSearchParams(this.props.location.search);\n      const next = params.get('redirect') ? params.get('redirect') : '/groups';\n      this.props.history.push(next);\n    } else {\n      this.setState({\n        email: this.state.email,\n        styles: {\n          borderBottom: \"3px solid #E00747\"\n        }\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <div className=\"NewGroup\">\n          <div className=\"form group-name\">\n            <p>Hey there, what is your email?</p>\n            <Input id=\"group-name-input\" style={this.state.styles} placeholder=\"Email\" value={this.state.email} onChange={this.handleChangeEmail} onKeyPress={this.onKeyPress} />\n            <p>And what's your password?</p>\n            <Input type=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.handleChangePassword} onKeyPress={this.onKeyPress} />\n            <div>\n              <Button stylename=\"button--next\" onClick={this.handleSubmit} />\n            </div>\n          </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n});\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport NavBar from \"./NavBar\";\nimport Input from \"./Input\";\nimport Button from \"./Button\";\nimport Notif from \"./Notif\";\nimport options from \"./FrequencyOptions\"\nimport Select from 'react-select';\n\nimport \"../styles/AddChore.scss\";\n\nimport groupStore from '../stores/groups';\n\nclass AddChore extends Component {\n  state = {\n    selectedOption: null,\n  }\n\n  handleChange = (selectedOption) => {\n    this.setState({ selectedOption });\n    console.log(`Option selected:`, selectedOption);\n  }\n\n  handleComplete = () => {\n    document.getElementById(\"add-chore-popup\").style.top = 0;\n    setTimeout(()=>{document.getElementById(\"add-chore-popup\").style.top = \"-50px\";}, 3000);\n  }\n\n  addChore = () => {\n    let new_chore = {\n      name: document.getElementById('task-name').value,\n      description: document.getElementById('task-desc').value,\n      frequency: this.state.selectedOption? this.state.selectedOption.value : options[0].value\n    }\n    document.getElementById('task-name').value = '';\n    document.getElementById('task-desc').value = '';\n    groupStore.addTask(new_chore.name, new_chore.description, new_chore.frequency);\n    this.handleComplete();\n  }\n\n  render() {\n    const selectedOption = this.state.selectedOption;\n    return (\n      <div>\n        <NavBar />\n        <div className=\"MyTasks center AddChore\">\n          <Notif id=\"add-chore-popup\" notifText=\"Chore was added!\" />\n          <h2>Add Chore</h2>\n          <Input id=\"task-name\" placeholder=\"Chore Name\" />\n          <br />\n          <textarea\n            className=\"text-input\"\n            id=\"task-desc\"\n            placeholder=\"Chore Description\"\n          />\n          <br />\n          <div style={{width: \"300px\"}}>\n           <Select\n            value={selectedOption}\n            onChange={this.handleChange}\n            options={options}\n            placeholder=\"Frequency\"\n            />\n          </div>\n          <br />\n          <div>\n            <Button stylename=\"button--call-to-action\" onClick={this.addChore}>Add Chore</Button>\n            <Button stylename=\"\" onClick={() => this.props.history.goBack()}>Cancel</Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddChore;\n","import React, { Component } from 'react';\nimport { observer } from \"mobx-react\"\nimport { Link } from \"react-router-dom\";\nimport Spinner from 'react-spinkit';\n\n\nimport userStore from '../stores/users';\n\nimport '../styles/Main.scss';\nimport '../styles/NewGroup.scss';\nimport '../styles/GroupList.scss';\n\nconst GroupList = observer(class GroupList extends Component {\n  constructor(props) {\n    super(props);\n    userStore.fetchCurrentUsersGroups();\n  }\n\n  render() {\n    let content = (\n      <div>\n        <Spinner name='double-bounce' />\n      </div>\n    );\n\n    if (!userStore.fetching) {\n      let groups = \n      <div>\n        You are currently not part of any group.\n        <Link to=\"/new\"> Start a new group!</Link>\n      </div>\n      if (userStore.usersGroups.length > 0) {\n        groups =\n        userStore.usersGroups.map(group => {\n          return (\n            <li key={group.id}>\n              <Link to={\"/groups/\" + group.id + \"/tasks\"}>{group.name}</Link>\n            </li>\n          )\n        });\n      }\n      content = (\n        <section className=\"GroupList\">\n          <h1>Your Groups</h1>\n          <ul className=\"list-container\">\n            {groups}\n          </ul>\n        </section>\n      )\n    }\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <div className=\"NewGroup\">\n          <div className=\"form group-name\">\n            {content}\n          </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n});\n\nexport default GroupList;\n","import React, { Component } from 'react';\nimport { observer } from \"mobx-react\"\nimport { Link } from \"react-router-dom\";\nimport Spinner from 'react-spinkit';\n\nimport userStore from '../stores/users';\nimport groupStore from '../stores/groups';\n\nimport Button from \"./Button\";\nimport NavBar from \"./NavBar\";\n\nimport '../styles/Main.scss';\nimport '../styles/NewGroup.scss';\nimport '../styles/GroupList.scss';\nimport '../styles/Leaderboard.scss';\n\nconst Leaderboard = observer(class GroupList extends Component {\n  componentDidMount() {\n    const groupID = this.props.match.params.group;\n    groupStore.get(groupID);\n  }\n\n  render() {\n    let content = (\n      <div>\n        <Spinner name='double-bounce' />\n      </div>\n    );\n\n    const groupID = this.props.match.params.group;\n    let leaderboard = '';\n    if (!groupStore.isFetching) {\n      let users = groupStore.group.users;\n      leaderboard = Object.entries(users).map(kv=>{\n        return (\n          <tr className=\"leaderboard-row\" key={kv[0]}>\n            <td>{kv[1].name}</td>\n            <td>{Math.floor(Math.random() * 100)}</td>\n          </tr>)\n      });\n    }\n    content = (\n      <section className=\"LeaderboardContainer\">\n        <h1 className=\"leaderboard-title\">Leaderboard</h1>\n        <table className=\"leaderboard-table\">\n          <thead>\n          <tr className=\"leaderboard-row\">\n            <th>Name</th>\n            <th>Churros</th>\n          </tr>\n          </thead>\n          <tbody>{leaderboard}</tbody>\n        </table>\n      </section>\n    )\n    return (\n      <div>\n      <NavBar />\n        <div className=\"container\">\n          <div className=\"NewGroup\">\n          <div className=\"form group-name\">\n            {content}\n            <Button stylename=\"\" onClick={() => this.props.history.goBack()}>Back</Button>\n          </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n});\n\nexport default Leaderboard;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport AuthenticatedRoute from './components/AuthenticatedRoute';\n\nimport Main from \"./components/Main\";\nimport NewGroup from \"./components/NewGroup\";\nimport NewTasks from \"./components/NewTasks\";\nimport MyTasks from \"./components/MyTasks\";\nimport Login from \"./components/Login\";\nimport AddChore from \"./components/AddChore\";\nimport GroupList from \"./components/GroupList\";\nimport Leaderboard from \"./components/Leaderboard\";\n\nimport \"./styles/index.scss\";\n\nconst App = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <main>\n      <Route path=\"/\" exact component={Main} />\n      <Route path=\"/login\" exact component={Login} />\n      <AuthenticatedRoute path=\"/new\" exact component={NewGroup} />\n      <AuthenticatedRoute path=\"/groups/:group/leaderboard\" exact component={Leaderboard} />\n      <AuthenticatedRoute path=\"/newchores\" exact component={NewTasks} />\n      <AuthenticatedRoute path=\"/groups\" exact component={GroupList} />\n      <AuthenticatedRoute path=\"/groups/:group/tasks\" exact component={MyTasks} />\n      <AuthenticatedRoute path=\"/groups/:group/tasks/:id\" exact component={MyTasks} />\n      <AuthenticatedRoute path=\"/groups/:group/addchore\" exact component={AddChore} />\n    </main>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/churro.1b9bd282.svg\";"],"sourceRoot":""}