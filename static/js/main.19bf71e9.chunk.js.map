{"version":3,"sources":["Firebase.js","stores/errors.js","stores/groups.js","stores/users.js","components/AuthenticatedRoute.js","components/CallToActionButton.js","components/Button.js","components/Input.js","components/NewGroup.js","components/Main.js","components/CircleInitials.js","store.js","components/TaskCard.js","components/FocusedTask.js","components/NavBar.js","components/AddChoreButton.js","components/MyTasks.js","components/Login.js","components/AddChore.js","components/GroupList.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ErrorStore","errors","timeoutFn","_this","this","clearTimeout","setTimeout","err","push","waitAndClear","length","decorate","observable","hasErrors","computed","GroupStore","Object","classCallCheck","group","isFetching","userColors","db","firestore","settings","timestampsInSnapshots","collection","autorun","updateGroup","delay","id","_this2","doc","get","then","exists","data","console","log","catch","errorStore","addError","email","_this3","where","docs","empty","groups","forEach","item","name","userEmails","tasks","_this4","users","map","idx","color","user_emails","add","set","res","action","getUsersGroups","stores_groups","STORAGE_KEY","UserStore","currentUser","usersGroups","fetching","localStorage","getItem","removeItem","user","setItem","isLoggedIn","groupStore","setCurrentUser","getCurrentUsersGroups","stores_users","AuthRoute","_ref","Component","component","rest","objectWithoutProperties","react_default","a","createElement","Route","assign","render","props","userStore","Redirect","to","CallToActionButton","className","children","Button","stylename","concat","Input","NewGroup","possibleConstructorReturn","getPrototypeOf","call","formFlow","current_step","next_step","e","newState","step","groupName","document","getElementById","value","setState","addRoommate","roommates","state","new_roommate","formElement","components_Input","placeholder","components_Button","onClick","roommate","index","key","Link","getFormElement","Main","elem","style","left","opacity","components_CallToActionButton","transitionOut","CircleInitials","Store","parts","split","initials","backgroundColor","observer","title","items","task","currentQueue","components_CircleInitials","FocusedTask","closeURL","queue","display","description","shift","NavBar","team","BurgerMenu","NavLink","exact","logout","AddChoreButton","MyTasks","_Component","apply","arguments","inherits","createClass","groupID","match","params","focusedTask","components_NavBar","components_AddChoreButton","reduce","m","schedule","Daily","Weekly","Biweekly","Monthly","As needed","Coming up","cards","entries","kv","components_TaskCard","components_FocusedTask","Login","emailRE","styles","handleChange","bind","assertThisInitialized","handleSubmit","target","trim","test","history","borderBottom","onChange","AddChore","addChore","redirect","renderRedirect","defaultValue","GroupList","fetchCurrentUsersGroups","content","dist_default","App","BrowserRouter","basename","process","path","AuthenticatedRoute","Boolean","window","location","hostname","ReactDOM","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.19bf71e9.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyAZnwch_QKuS6OPefMuAoUtEQd_ppiaa50\",\n  authDomain: \"churro-126ca.firebaseapp.com\",\n  databaseURL: \"https://churro-126ca.firebaseio.com\",\n  projectId: \"churro-126ca\",\n  storageBucket: \"\",\n  messagingSenderId: \"285905994423\"\n});\n\nexport default firebase;\n\n","import { observable, computed, decorate } from 'mobx'\n\nclass ErrorStore {\n  errors = [];\n  timeoutFn = null;\n\n  waitAndClear() {\n    if (this.timeoutFn !== null) {\n      clearTimeout(this.timeoutFn);\n    }\n    this.timeoutFn = setTimeout(() => {\n     this.errors = []; \n     this.timeoutFn = null;\n    }, 5000);\n  }\n\n  clear() {\n    this.errors = [];\n  }\n\n  addError(err) {\n    this.errors.push(err);\n    this.waitAndClear();\n  }\n\n  get hasErrors() {\n    return 0 < this.errors.length;\n  }\n}\n\ndecorate(ErrorStore, {\n  errors: observable,\n  hasErrors: computed\n});\n\nexport default new ErrorStore();","import { observable, decorate, action, autorun } from 'mobx'\n\nimport firebase from '../Firebase';\nimport errorStore from './errors';\n\nclass GroupStore {\n  group = null;\n  isFetching = true;\n\n  userColors = [\n    'tomato',\n    'plum',\n    'teal',\n    'turquoise',\n    'forestGreen',\n    'fireBrick',\n    'MediumVioletRed',\n    'DarkOrange',\n    'gold',\n    'SlateBlue',\n    'CadetBlue',\n    'Navy',\n    'DarkSlateGray',\n    'LightSlateGray'\n  ]\n\n  constructor(firebase) {\n    // Initialize Cloud Firestore through Firebase\n    var db = firebase.firestore();\n\n    // Disable deprecated features\n    db.settings({\n      timestampsInSnapshots: true\n    });\n    this.db = db.collection('groups');\n    autorun(() => this.updateGroup(), { delay: 300 });\n  }\n\n  get(id) {\n    if (this.group !== null && this.group.id === id) {\n      return;\n    }\n\n    this.isFetching = true;\n    return this.db.doc(id).get().then((doc) => {\n      if (!doc.exists) {\n        console.log('No group with id of ' + id);\n        return;\n      }\n\n      this.group = doc.data();\n      this.group.id = id;\n      this.isFetching = false;\n      return this.group;\n    }).catch(err => {\n      this.isFetching = false;\n      errorStore.addError(err);\n    })\n  }\n\n  getUsersGroups(email) {\n    console.log(email);\n    return this.db.where('user_emails', 'array-contains', email).get().then((docs) => {\n      if (docs.empty) {\n        console.log('User has no groups with email ' + email);\n        return;\n      }\n\n      let groups = [];\n      docs.forEach(doc => {\n        const group = doc.data();\n        let item =  {\n          id: doc.id,\n          name: group.name\n        }\n        groups.push(item);\n      });\n      return groups;\n    }).catch(err => {\n      this.isFetching = false;\n      errorStore.addError(err);\n    });\n  }\n\n  add(name, userEmails, tasks) {\n    const users = userEmails.map((email, idx) => {\n      return {\n        email,\n        color: this.userColors[idx%this.userColors.length]\n      }\n    });\n    \n    const group = {\n      name,\n      users,\n      tasks,\n      user_emails: userEmails,\n    }\n\n    return this.db.add(group).then(doc => {\n      group.id = doc.id;\n      console.log(group);\n      return group;\n    }).catch(err => {\n      errorStore.addError(err);\n    });\n  }\n\n  updateGroup() {\n    if (this.group === null) {\n      return;\n    }\n    this.db.doc(this.group.id).set(this.group).then(res => {\n      console.log('Successfully updated group');\n    }).catch(err => {\n      errorStore.addError(err);\n    })\n  }\n}\n\ndecorate(GroupStore, {\n  group: observable,\n  isFetching: observable,\n  get: action,\n  getUsersGroups: action,\n  add: action,\n})\n\n\nexport default new GroupStore(firebase);","import { observable, computed, decorate, action } from 'mobx'\n\nimport groupStore from './groups';\n\nconst STORAGE_KEY = 'churro-user';\n\nclass UserStore {\n  currentUser = '';\n  usersGroups = [];\n  fetching = false;\n\n  constructor() {\n    if (localStorage.getItem(STORAGE_KEY)) {\n      this.currentUser = localStorage.getItem(STORAGE_KEY);\n    }\n  }\n\n  get isLoggedIn() {\n    return this.currentUser !== '';\n  }\n\n  logout() {\n    this.currentUser = '';\n    this.usersGroups = [];\n    localStorage.removeItem(STORAGE_KEY);\n  }\n\n  setCurrentUser(user) {\n    this.currentUser = user;\n    console.log('Set current user to ' + this.currentUser);\n    localStorage.setItem(STORAGE_KEY, user);\n  }\n\n  fetchCurrentUsersGroups() {\n    if (!this.isLoggedIn) {\n      return;\n    }\n    this.fetching = true;\n    groupStore.getUsersGroups(this.currentUser)\n      .then(groups => {\n        console.log(groups);\n        this.usersGroups = groups.map(group => { \n          return {\n            id: group.id, \n            name: group.name\n          }\n        });\n        this.fetching = false;\n      }).catch(err => {\n        console.log(err);\n        this.fetching = false;\n      });\n  }\n}\n\ndecorate(UserStore, {\n  currentUser: observable,\n  usersGroups: observable, \n  users: observable, \n  fetching: observable, \n  isLoggedIn: computed,\n  setCurrentUser: action,\n  getCurrentUsersGroups: action,\n});\n\nexport default new UserStore();","import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport userStore from '../stores/users';\n\nconst AuthRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        userStore.isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to=\"/\"\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default AuthRoute;","import React from 'react';\n\nimport '../styles/Button.scss';\n\nconst CallToActionButton = (props) => {\n  return (\n    <button className=\"button button--call-to-action\" {...props}>{ props.children }</button>\n  )\n}\n\nexport default CallToActionButton;\n","import React from 'react';\n\nimport '../styles/Button.scss';\n\nconst Button = (props) => {\n  let stylename = '';\n  if (props && props.stylename) stylename = props.stylename;\n  return (\n    <button className={`button ${stylename}`} {...props} >{ props.children }</button>\n  )\n}\n\nexport default Button;\n","import React from 'react';\n\nimport '../styles/Input.scss';\n\nconst Input = (props) => {\n  return (\n    <input className=\"input\" {...props} >{ props.children }</input>\n  )\n}\n\nexport default Input;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport CallToActionButton from \"./CallToActionButton\";\nimport Button from \"./Button\";\nimport Input from \"./Input\";\n\nimport \"../styles/Main.scss\";\nimport \"../styles/NewGroup.scss\";\n\nclass NewGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      step: \"group-name\",\n      groupName: \"\",\n      roommates: []\n    };\n  }\n\n  formFlow = (current_step, next_step) => e => {\n    let newState = { step: next_step };\n    if (current_step == \"group-name\") {\n      newState.groupName = document.getElementById(\"group-name-input\").value;\n    }\n    this.setState(newState);\n  };\n\n  addRoommate = () => {\n    let roommates = this.state.roommates;\n    let new_roommate = {\n      name: document.getElementById(\"roommate-name-input\").value,\n      email: document.getElementById(\"roommate-email-input\").value\n    };\n    roommates.push(new_roommate);\n    document.getElementById(\"roommate-name-input\").value = \"\";\n    document.getElementById(\"roommate-email-input\").value = \"\";\n    this.setState({ roommates: roommates });\n  };\n\n  getFormElement() {\n    let formElement;\n    let roommates = this.state.roommates;\n    let _this = this;\n    if (this.state.step == \"group-name\") {\n      formElement = (\n        <div className=\"form group-name\">\n          <Input id=\"group-name-input\" placeholder=\"Group Name\" />\n          <Button\n            stylename=\"button--next\"\n            onClick={this.formFlow(\"group-name\", \"roommates\")}\n          />\n        </div>\n      );\n    } else if (this.state.step == \"roommates\") {\n      formElement = (\n        <div className=\"form roommates\">\n          <h4 className=\"form-title\">{this.state.groupName}</h4>\n          <p>Who are the roommates in this group?</p>\n          {roommates.map(function(roommate, index) {\n            return <div key={index}>{roommate.name}</div>;\n          })}\n          <Input id=\"roommate-name-input\" placeholder=\"Roommate Name\" />\n          <Input id=\"roommate-email-input\" placeholder=\"Roommate Email\" />\n          <div>\n            <Button\n              stylename=\"button--back\"\n              onClick={this.formFlow(\"roommates\", \"group-name\")}\n            />\n            <Button\n              stylename=\"button--call-to-action\"\n              onClick={_this.addRoommate}\n            >\n              {\" \"}\n              Add Roommate +\n            </Button>\n            <Link to=\"/addchore\">\n              <Button>Added All Roommates ></Button>\n            </Link>\n          </div>\n        </div>\n      );\n    }\n    return formElement;\n  }\n\n  render() {\n    let formElement = this.getFormElement();\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <div className=\"NewGroup\">{formElement}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NewGroup;\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport CallToActionButton from './CallToActionButton';\nimport Button from './Button';\nimport NewGroup from './NewGroup';\n\nimport '../styles/Main.scss';\n\nconst new_group_route = 'new'\n\nclass Main extends Component {\n  transitionOut() {\n    let elem = document.getElementById('landing');\n    elem.style.left = \"-10%\";\n    elem.style.opacity = 0;\n    // setTimeout(()=>{window.location.href += new_group_route}, 500);\n  }\n\n  render() {\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <div id=\"landing\">\n            <h2 className=\"welcome-header\">Welcome to Churro!</h2>\n            <h4 className=\"welcome-subheader\">The New Way to Manage Chores</h4>\n            <div className=\"button-container\">\n              <Link to=\"/new\"><CallToActionButton onClick={this.transitionOut}>START A NEW GROUP</CallToActionButton></Link>\n              <Link to=\"/login\"><Button>LOGIN</Button></Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\n\nimport store from '../store';\n\nimport '../styles/CircleInitials.scss'\n\nconst CircleInitials = ({ name, color }) => {\n  const parts = name.split(\" \");\n  const initials = parts[0][0] + parts[1][0]; \n\n  return (\n    <p style={{backgroundColor: color}} className=\"circle-initials\">\n      {initials}\n    </p>\n  )\n}\n\nexport default CircleInitials;\n","import firebase from './Firebase';\n\nclass Store {\n  constructor(firebase) {\n    // Initialize Cloud Firestore through Firebase\n    var db = firebase.firestore();\n\n    // Disable deprecated features\n    db.settings({\n      timestampsInSnapshots: true\n    });\n    this.db = db.collection('groups');\n    this.group = null;\n  }\n\n  fetchGroup(id) {\n    return this.db.doc(id).get().then((doc) => {\n      if (!doc.exists) {\n        console.log('No group with id of ' + id);\n        return;\n      }\n\n      this.group = doc.data();\n      this.group.id = id;\n      console.log(this.group);\n      return this.group;\n    });\n  }\n\n  getUsersGroups(email) {\n    return this.db.where('users', 'array-contains', email).get().then((doc) => {\n      if (!doc.exists) {\n        console.log('User has no groups with email ' + email);\n        return;\n      }\n      return doc.data();\n    });\n  }\n\n  addGroup(group) {\n    return this.db.add(group).then(doc => {\n      group.id = doc.id;\n      console.log(group);\n      return group;\n    });\n  }\n}\nconst store = new Store(firebase);\n\n\nconst users = {\n  'martin@martin.com': {\n    name: 'Martin Kong',\n    color: 'tomato'\n  },\n  'mihir@mihir.com': {\n    name: 'Mihir Mathur',\n    color: 'teal'\n  },\n  'hao@hao.com': {\n    name: 'Hao Nguyen',\n    color: 'turquoise'\n  },\n  'cody@cody.com': {\n    name: 'Cody Ley-Han',\n    color: 'forestGreen'\n  }\n}\n\nconst tasks = [\n  {\n    id: '3124lk1234',\n    name: 'Take out trash',\n    schedule: 'As needed',\n    description: 'Take out the trash and make sure that you put a new bag in the thing, also don\\'t throw recyclables in the trash',\n    currentQueue: [\n      'martin@martin.com',\n      'mihir@mihir.com',\n      'hao@hao.com',\n      'cody@cody.com',\n    ],\n    currentPosition: 0,\n    completed: false,\n    confirmed: false\n  },\n  {\n    id: '432jadffia0d9f',\n    name: 'Get the mail',\n    schedule: 'Daily',\n    description: 'Just grab the mail and put it on the table when you get it',\n    currentQueue: [\n      'cody@cody.com',\n      'mihir@mihir.com',\n      'hao@hao.com',\n      'martin@martin.com',\n    ],\n    currentPosition: 0,\n    completed: false,\n    confirmed: false\n  },\n  {\n    id: 'fasdf89sadf8',\n    name: 'Sweep the kitchen',\n    description: 'Make sure to do a good job so it doesn\\'t get all nasty',\n    schedule: 'Monthly',\n    currentQueue: [\n      'hao@hao.com',\n      'cody@cody.com',\n      'martin@martin.com',\n      'mihir@mihir.com',\n    ],\n    currentPosition: 0,\n    completed: false,\n    confirmed: false\n  },\n  {\n    id: 'a90f8sad9fas',\n    name: 'Maintanence Request',\n    description: 'The forms are in the closet if we need something done, hopefully not.  This also includes being there when someone comes',\n    schedule: 'As needed',\n    currentQueue: [\n      'cody@cody.com',\n      'martin@martin.com',\n      'mihir@mihir.com',\n      'hao@hao.com',\n    ],\n    currentPosition: 0,\n    completed: false,\n    confirmed: false\n  },\n  {\n    id: 'dsf9sdaf0asd89f9asdf',\n    name: 'Vaccum carpet',\n    schedule: 'Biweekly',\n    description: 'Pretty easy just make sure to clean out the thing after you\\re done',\n    currentQueue: [\n      'cody@cody.com',\n      'martin@martin.com',\n      'mihir@mihir.com',\n      'hao@hao.com',\n    ],\n    currentPosition: 0,\n    completed: false,\n    confirmed: false\n  },\n  {\n    id: 'jkll2k5j4l3k5',\n    name: 'Clean counters',\n    description: 'Use the chlorox wipes under the sink',\n    schedule: 'Daily',\n    currentQueue: [\n      'cody@cody.com',\n      'martin@martin.com',\n      'mihir@mihir.com',\n      'hao@hao.com',\n    ],\n    currentPosition: 0,\n    completed: false,\n    confirmed: false\n  },\n  {\n    id: 'h8439582435',\n    name: 'Put trash out',\n    schedule: 'Weekly',\n    description: 'Has to be put out every week by 5AM Monday morning',\n    currentQueue: [\n      'cody@cody.com',\n      'martin@martin.com',\n      'mihir@mihir.com',\n      'hao@hao.com',\n    ],\n    currentPosition: 0,\n    completed: false,\n    confirmed: false\n  }\n]\n\n\nexport default {\n  users,\n  tasks,\n  store\n}","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\"\n\nimport groupStore from '../stores/groups';\n\nimport '../styles/TaskCard.scss'\nimport CircleInitials from './CircleInitials';\n\n\nconst TaskCard = ({ tasks, title }) => {\n  if (tasks.length == 0) {\n    return null;\n  }\n  const items = tasks.map(task => {\n    const user = groupStore.group.users[task.currentQueue[0]];\n    return (\n      <li key={task.id} className=\"task-card-item\">\n        <span>\n          <span className=\"task-card-check\"><i className=\"far fa-check-circle\"></i></span>\n          {task.name} \n          <span className=\"task-card-right\">\n            <CircleInitials name={user.name} color={user.color} />\n            <Link className=\"task-card-focus-button\" to={\"/groups/\" + groupStore.group.id + \"/tasks/\" + task.id}><i className=\"fas fa-angle-right\"></i></Link>\n          </span>\n        </span>\n      </li>\n    )\n  })\n  return (\n    <section className=\"task-card\">\n      <header className=\"task-card-title\"> \n        {title}\n      </header>\n      <ul className=\"task-card-list\">\n        {items}\n      </ul>\n    </section>\n  )\n}\n\nexport default observer(TaskCard);\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport groupStore from '../stores/groups';\nimport CircleInitials from './CircleInitials';\nimport CallToActionButton from './CallToActionButton';\n\nimport '../styles/FocusedTask.scss'\n\nconst FocusedTask = ({ task, closeURL }) => {\n  const queue = task.currentQueue.map(email => {\n    const user = groupStore.group.users[email];\n    return (\n      <li key={email} className=\"focused-task-queue-item\">\n        <span><CircleInitials name={user.name} color={user.color} style={{display: 'inline'}} />{user.name}</span>\n      </li>\n    )\n  })\n\n  const handleComplete = () => {\n    task.currentQueue.push(task.currentQueue.shift());\n  }\n\n  return (\n    <section className=\"focused-task-card\">\n      <div className=\"focused-task-content\">\n        <div className=\"focused-task-close\">\n          <Link className=\"focused-task-close-button\" to={closeURL}>x</Link>\n        </div>\n        <header className=\"focused-task-card-name\"> \n          <h2>{task.name}</h2>\n        </header>\n        <p className=\"focused-task-card-desc\">\n          {task.description}\n        </p>\n\n        <ul className=\"focused-task-queue\">\n          {queue}\n        </ul>\n\n        <CallToActionButton onClick={handleComplete}>COMPLETE TASK</CallToActionButton>\n      </div>\n    </section>\n  )\n}\n\nexport default FocusedTask;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Route, NavLink, withRouter } from \"react-router-dom\";\nimport { push as Menu } from \"react-burger-menu\";\n\nimport userStore from \"../stores/users\";\n\nimport \"../styles/NavBar.scss\";\nimport CircleInitials from \"./CircleInitials\";\n\n\nconst NavBar = ({ team }) => {\n  return (\n    <Menu>\n      <NavLink exact className=\"link\" to={\"/\"}>\n        HOME\n      </NavLink>\n      <NavLink exact className=\"link\" to={\"/groups\"}>\n        GROUPS\n      </NavLink>\n      <NavLink exact className=\"link\" to={\"/addchore\"}>\n        ADD TASK\n      </NavLink>\n      <NavLink exact className=\"link\" to={\"/\"} onClick={() => {userStore.logout()}}>\n        LOGOUT\n      </NavLink>\n    </Menu>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\n\nimport \"../styles/AddChoreButton.scss\";\n\nconst AddChoreButton = props => {\n  return <button className=\"chore-button\">+</button>;\n};\n\nexport default AddChoreButton;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\"\n\nimport TaskCard from \"./TaskCard\";\nimport FocusedTask from \"./FocusedTask\";\nimport NavBar from \"./NavBar\";\nimport AddChoreButton from \"./AddChoreButton\";\n\nimport groupStore from '../stores/groups';\nimport userStore from '../stores/users';\n\nimport '../styles/MyTasks.scss';\n\nconst MyTasks = observer(class MyTasks extends Component {\n  componentDidMount() {\n    const groupID = this.props.match.params.group;\n    groupStore.get(groupID);\n  }\n\n  render() {\n    if (groupStore.isFetching) {\n      return (\n        <div>\n        <NavBar />\n        <h1>Loading!</h1>\n        <Link to=\"/addchore\">\n          <AddChoreButton />\n        </Link>\n      </div>\n      )\n    }\n\n    let focusedTask;\n    const tasks = groupStore.group.tasks.reduce((m, task) => {\n      if (this.props.match.params.id) {\n        if (task.id === this.props.match.params.id) {\n          focusedTask = task;\n        }\n      }\n\n      if (task.currentQueue[0] === userStore.currentUser) {\n        m[task.schedule].push(task);\n      } else if (1 < task.currentQueue.length && task.currentQueue[1] === userStore.currentUser) {\n        m[\"Coming up\"].push(task);\n      }\n      \n      return m;\n    }, {\n      \"Daily\": [],\n      \"Weekly\": [],\n      \"Biweekly\": [],\n      \"Monthly\": [],\n      \"As needed\": [],\n      \"Coming up\": [],\n    });\n\n    const cards = Object.entries(tasks).map(kv => {\n      return (<TaskCard key={kv[0]} title={kv[0]} tasks={kv[1]} />)\n    });\n\n    const groupID = this.props.match.params.group;\n\n    return (\n      <div>\n        <NavBar />\n        <div className=\"MyTasks\">\n          <h1 className=\"center\">{groupStore.group.name}</h1>\n          <h2 className=\"center\">My Tasks</h2>\n\n          <section className=\"my-tasks-columns\">\n            <div className=\"my-tasks-cards\">\n              {cards}\n            </div>\n            {focusedTask && (<FocusedTask task={focusedTask} closeURL={\"/groups/\" + groupID + \"/tasks\"} />)}\n          </section>\n        </div>\n        <Link to=\"/addchore\">\n          <AddChoreButton />\n        </Link>\n      </div>\n    );\n  }\n})\n\nexport default MyTasks;\n","import React, { Component } from 'react';\nimport { observer } from \"mobx-react\"\n\nimport Button from './Button';\nimport Input from './Input';\n\nimport userStore from '../stores/users';\n\nimport '../styles/Main.scss';\nimport '../styles/NewGroup.scss';\n\n\n\nconst Login = observer(class Login extends Component {\n  emailRE = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      styles: {}\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      email: e.target.value,\n      styles: {}\n    });\n  }\n\n  handleSubmit() {\n    if (this.state.email.trim() && this.emailRE.test(this.state.email)) {\n      userStore.setCurrentUser(this.state.email);\n      this.props.history.push('/groups');\n    } else {\n      this.setState({\n        email: this.state.email,\n        styles: {\n          borderBottom: \"3px solid #E00747\"\n        }\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <div className=\"NewGroup\">\n          <div className=\"form group-name\">\n            <Input id=\"group-name-input\" style={this.state.styles} placeholder=\"Email\" value={this.state.value} onChange={this.handleChange}/>\n            <Button stylename=\"button--next\" onClick={this.handleSubmit} />\n          </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n});\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport NavBar from \"./NavBar\";\nimport Input from \"./Input\";\nimport Button from \"./Button\";\n\nimport \"../styles/AddChore.scss\";\n\nclass AddChore extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirect: false\n    };\n  }\n\n  addChore = () => {\n    // TODO: USE FIREBASE TO ADD CHORE AND REDIRECT AS CALLBACK\n    this.setState({ redirect: true });\n    console.log(this.state.redirect);\n  };\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to=\"/tasks\" />;\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        {this.renderRedirect()}\n        <NavBar />\n        <div className=\"MyTasks center\">\n          <h1>The CSS Slayers</h1>\n          <h2>Add Task</h2>\n          Name: <Input id=\"task-name-id\" placeholder=\"Task Name\" />\n          <br />\n          Description:{\" \"}\n          <textarea\n            className=\"text-input\"\n            id=\"task-desc-id\"\n            placeholder=\"Task Description\"\n          />\n          <br />\n          Frequency:{\" \"}\n          <select id=\"task-freq-id\" defaultValue=\"daily\">\n            <option value=\"daily\">Daily</option>\n            <option value=\"weekly\">Weekly</option>\n            <option value=\"biweekly\">Biweekly</option>\n          </select>\n          <br />\n          <Button stylename=\"\" onClick={this.addChore}>\n            Add Chore\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddChore;\n","import React, { Component } from 'react';\nimport { observer } from \"mobx-react\"\nimport { Link } from \"react-router-dom\";\nimport Spinner from 'react-spinkit';\n\n\nimport userStore from '../stores/users';\n\nimport '../styles/Main.scss';\nimport '../styles/NewGroup.scss';\n\nconst GroupList = observer(class GroupList extends Component {\n  constructor(props) {\n    super(props);\n    userStore.fetchCurrentUsersGroups();\n  }\n\n  render() {\n    let content = (<Spinner name=\"folding-cube\" />);\n\n    if (!userStore.fetching) {\n      const groups = userStore.usersGroups.map(group => {\n        return (\n          <li key={group.id}>\n            <Link to={\"/groups/\" + group.id + \"/tasks\"}>{group.name}</Link>\n          </li>\n        )\n      });\n      content = (\n        <ul>\n          {groups}\n        </ul>\n      )\n    }\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <div className=\"NewGroup\">\n          <div className=\"form group-name\">\n            {content}\n          </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n});\n\nexport default GroupList;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport AuthenticatedRoute from './components/AuthenticatedRoute';\n\nimport Main from \"./components/Main\";\nimport NewGroup from \"./components/NewGroup\";\nimport MyTasks from \"./components/MyTasks\";\nimport Login from \"./components/Login\";\nimport AddChore from \"./components/AddChore\";\nimport GroupList from \"./components/GroupList\";\n\nimport \"./styles/index.scss\";\n\nconst App = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <main>\n      <Route path=\"/\" exact component={Main} />\n      <Route path=\"/login\" exact component={Login} />\n      <Route path=\"/new\" exact component={NewGroup} />\n      <AuthenticatedRoute path=\"/groups\" exact component={GroupList} />\n      <AuthenticatedRoute path=\"/groups/:group/tasks\" exact component={MyTasks} />\n      <AuthenticatedRoute path=\"/groups/:group/tasks/:id\" exact component={MyTasks} />\n      <AuthenticatedRoute path=\"/addchore\" exact component={AddChore} />\n    </main>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}