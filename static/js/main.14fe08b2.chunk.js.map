{"version":3,"sources":["Firebase.js","stores/errors.js","stores/groups.js","stores/users.js","components/AuthenticatedRoute.js","components/CallToActionButton.js","components/Button.js","components/NavBar.js","components/Main.js","components/Input.js","stores/newGroup.js","components/NewGroup.js","components/NewTasks.js","components/CircleInitials.js","components/TaskCard.js","components/Notif.js","components/FocusedTask.js","components/AddChoreButton.js","components/MyTasks.js","components/Login.js","components/AddChore.js","components/GroupList.js","components/Leaderboard.js","App.js","serviceWorker.js","index.js","img/churro.svg"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ErrorStore","errors","timeoutFn","_this","this","clearTimeout","setTimeout","err","push","waitAndClear","length","decorate","observable","addError","action","hasErrors","computed","GroupStore","Object","classCallCheck","group","isFetching","db","firestore","settings","timestampsInSnapshots","collection","autorun","updateGroup","delay","id","_this2","doc","get","then","exists","data","console","log","catch","errorStore","email","_this3","where","docs","empty","groups","forEach","item","name","description","schedule","task","Date","now","currentQueue","shuffle","keys","user_emails","tasks","shortid","generate","set","res","a","i","j","Math","floor","random","_ref","getUsersGroups","add","stores_groups","STORAGE_KEY","UserStore","currentUser","usersGroups","fetching","localStorage","getItem","removeItem","user","setItem","isLoggedIn","groupStore","map","users","setCurrentUser","getCurrentUsersGroups","stores_users","AuthenticatedRoute","Component","component","rest","objectWithoutProperties","react_default","createElement","Route","assign","render","props","userStore","Redirect","to","location","pathname","CallToActionButton","className","children","Button","stylename","concat","NavBar","BurgerMenu","NavLink","exact","onClick","logout","Main","observer","_Component","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","elem","document","getElementById","style","left","opacity","src","churro","Link","components_CallToActionButton","transitionOut","components_Button","Input","USER_COLORS","NewGroupStore","color","addUser","addTask","clear","newGroup","NewGroup","call","formFlow","current_step","next_step","e","newState","step","setState","addRoommate","new_roommate","newGroupStore","onKeyPress","fn","onUsersName","trim","state","formElement","components_Input","placeholder","onChange","target","groupName","values","roommate","index","getFormElement","NewChores","_getPrototypeOf2","_len","args","Array","_key","addChore","new_chore","frequency","saveGroup","save","history","paddingTop","defaultValue","CircleInitials","parts","split","initials","backgroundColor","titleMappings","Daily","Weekly","Biweekly","Monthly","As Needed","Coming up","title","items","components_CircleInitials","Notif","notifText","FocusedTask","closeURL","queue","display","random_churros","components_Notif","top","shift","AddChoreButton","MyTasks","groupID","match","params","content","dist_default","focusedTask","reduce","m","toString","cards","entries","kv","components_TaskCard","components_FocusedTask","components_NavBar","components_AddChoreButton","Login","emailRE","styles","bind","assertThisInitialized","handleChange","handleSubmit","test","URLSearchParams","search","next","borderBottom","AddChore","handleComplete","goBack","GroupList","fetchCurrentUsersGroups","Leaderboard","leaderboard","App","BrowserRouter","basename","process","path","components_AuthenticatedRoute","NewTasks","Boolean","window","hostname","ReactDOM","src_App","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.14fe08b2.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyAZnwch_QKuS6OPefMuAoUtEQd_ppiaa50\",\n  authDomain: \"churro-126ca.firebaseapp.com\",\n  databaseURL: \"https://churro-126ca.firebaseio.com\",\n  projectId: \"churro-126ca\",\n  storageBucket: \"\",\n  messagingSenderId: \"285905994423\"\n});\n\nexport default firebase;\n\n","import { observable, computed, decorate, action } from 'mobx'\n\nclass ErrorStore {\n  errors = [];\n  timeoutFn = null;\n\n  waitAndClear() {\n    if (this.timeoutFn !== null) {\n      clearTimeout(this.timeoutFn);\n    }\n    this.timeoutFn = setTimeout(() => {\n     this.errors = []; \n     this.timeoutFn = null;\n    }, 5000);\n  }\n\n  clear() {\n    this.errors = [];\n  }\n\n  addError(err) {\n    this.errors.push(err);\n    this.waitAndClear();\n  }\n\n  get hasErrors() {\n    return 0 < this.errors.length;\n  }\n}\n\ndecorate(ErrorStore, {\n  errors: observable,\n  addError: action,\n  hasErrors: computed\n});\n\nexport default new ErrorStore();","import { observable, decorate, action, autorun } from 'mobx';\nimport shortid from 'shortid';\n\nimport firebase from '../Firebase';\nimport errorStore from './errors';\n\nclass GroupStore {\n  group = null;\n  isFetching = true;\n\n  constructor(firebase) {\n    // Initialize Cloud Firestore through Firebase\n    var db = firebase.firestore();\n\n    // Disable deprecated features\n    db.settings({\n      timestampsInSnapshots: true\n    });\n    this.db = db.collection('groups');\n    autorun(() => this.updateGroup(), { delay: 300 });\n  }\n\n  get(id) {\n    if (this.group !== null && this.group.id === id) {\n      return;\n    }\n\n    this.isFetching = true;\n    return this.db.doc(id).get().then((doc) => {\n      if (!doc.exists) {\n        console.log('No group with id of ' + id);\n        return;\n      }\n\n      this.group = doc.data();\n      this.group.id = id;\n      this.isFetching = false;\n      return this.group;\n    }).catch(err => {\n      this.isFetching = false;\n      errorStore.addError(err);\n    })\n  }\n\n  getUsersGroups(email) {\n    return this.db.where('user_emails', 'array-contains', email).get().then((docs) => {\n      if (docs.empty) {\n        console.log('User has no groups with email ' + email);\n        return;\n      }\n\n      let groups = [];\n      docs.forEach(doc => {\n        const group = doc.data();\n        let item =  {\n          id: doc.id,\n          name: group.name\n        }\n        groups.push(item);\n      });\n      return groups;\n    }).catch(err => {\n      this.isFetching = false;\n      errorStore.addError(err);\n    });\n  }\n\n  addTask(name, description, schedule) {\n    const task = {\n      id: Date.now(),\n      name,\n      schedule,\n      description,\n      currentQueue: this.shuffle(Object.keys(this.group.user_emails))\n    }\n\n    this.group.tasks.push(task);\n  }\n\n  add(group) {\n    group.id = shortid.generate();\n    return this.db.doc(group.id).set(group).then(doc => {\n      console.log(group);\n      return group;\n    }).catch(err => {\n      errorStore.addError(err);\n    });\n  }\n\n  updateGroup() {\n    if (this.group === null) {\n      return;\n    }\n    this.db.doc(this.group.id).set(this.group).then(res => {\n      console.log('Successfully updated group');\n    }).catch(err => {\n      errorStore.addError(err);\n    })\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\ndecorate(GroupStore, {\n  group: observable,\n  isFetching: observable,\n  get: action,\n  getUsersGroups: action,\n  add: action,\n})\n\n\nexport default new GroupStore(firebase);","import { observable, computed, decorate, action } from 'mobx'\n\nimport groupStore from './groups';\n\nconst STORAGE_KEY = 'churro-user';\n\nclass UserStore {\n  currentUser = '';\n  usersGroups = [];\n  fetching = false;\n\n  constructor() {\n    if (localStorage.getItem(STORAGE_KEY)) {\n      this.currentUser = localStorage.getItem(STORAGE_KEY);\n    }\n  }\n\n  get isLoggedIn() {\n    return this.currentUser !== '';\n  }\n\n  logout() {\n    this.currentUser = '';\n    this.usersGroups = [];\n    localStorage.removeItem(STORAGE_KEY);\n  }\n\n  setCurrentUser(user) {\n    this.currentUser = user;\n    console.log('Set current user to ' + this.currentUser);\n    localStorage.setItem(STORAGE_KEY, user);\n  }\n\n  fetchCurrentUsersGroups() {\n    if (!this.isLoggedIn) {\n      return;\n    }\n    this.fetching = true;\n    groupStore.getUsersGroups(this.currentUser)\n      .then(groups => {\n        console.log(groups);\n        this.usersGroups = groups.map(group => { \n          return {\n            id: group.id, \n            name: group.name\n          }\n        });\n        this.fetching = false;\n      }).catch(err => {\n        console.log(err);\n        this.fetching = false;\n      });\n  }\n}\n\ndecorate(UserStore, {\n  currentUser: observable,\n  usersGroups: observable, \n  users: observable, \n  fetching: observable, \n  isLoggedIn: computed,\n  setCurrentUser: action,\n  getCurrentUsersGroups: action,\n});\n\nexport default new UserStore();","import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport userStore from '../stores/users';\n\nconst AuthenticatedRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        userStore.isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={\"/login?redirect=\" + props.location.pathname}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default AuthenticatedRoute;","import React from 'react';\n\nimport '../styles/Button.scss';\n\nconst CallToActionButton = (props) => {\n  return (\n    <button className=\"button button--call-to-action\" {...props}>{ props.children }</button>\n  )\n}\n\nexport default CallToActionButton;\n","import React from 'react';\n\nimport '../styles/Button.scss';\n\nconst Button = (props) => {\n  let stylename = '';\n  if (props && props.stylename) stylename = props.stylename;\n  return (\n    <button className={`button ${stylename}`} {...props} >{ props.children }</button>\n  )\n}\n\nexport default Button;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { push as Menu } from \"react-burger-menu\";\n\nimport userStore from \"../stores/users\";\n\nimport \"../styles/NavBar.scss\";\n\n\nconst NavBar = () => {\n  return (\n    <Menu>\n      <NavLink exact className=\"link\" to={\"/\"}>\n        HOME\n      </NavLink>\n      <NavLink exact className=\"link\" to={\"/groups\"}>\n        GROUPS\n      </NavLink>\n      <NavLink exact className=\"link\" to={\"/\"} onClick={() => {userStore.logout()}}>\n        LOGOUT\n      </NavLink>\n    </Menu>\n  );\n};\n\nexport default NavBar;\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\";\n\nimport CallToActionButton from './CallToActionButton';\nimport Button from './Button';\nimport NavBar from './NavBar';\n\nimport userStore from '../stores/users';\nimport churro from '../img/churro.svg'\n\nimport '../styles/Main.scss';\n\nconst Main = observer(class Main extends Component {\n  transitionOut() {\n    let elem = document.getElementById('landing');\n    elem.style.left = \"-10%\";\n    elem.style.opacity = 0;\n  }\n\n  render() {\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <div id=\"landing\">\n            <img className=\"landing-img\" src={churro} />\n            <h2 className=\"welcome-header\">Welcome to Churro!</h2>\n            <h4 className=\"welcome-subheader\">The New Way to Manage Chores</h4>\n            <div className=\"button-container\">\n              <Link to=\"/new\"><CallToActionButton onClick={this.transitionOut}>START A NEW GROUP</CallToActionButton></Link>\n              <Link to={userStore.isLoggedIn ? \"/groups\" : \"/login\"}><Button>{userStore.isLoggedIn ? \"YOUR GROUPS\" : \"LOGIN\"}</Button></Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n});\n\nexport default Main;\n","import React from 'react';\n\nimport '../styles/Input.scss';\n\nconst Input = (props) => {\n  return (\n    <input className=\"input\" {...props} >{ props.children }</input>\n  )\n}\n\nexport default Input;\n","import { observable, decorate, action } from 'mobx'\n\nimport groupStore from './groups';\nimport errorStore from './errors';\n\nconst USER_COLORS = [\n  'tomato',\n  'plum',\n  'teal',\n  'turquoise',\n  'forestGreen',\n  'fireBrick',\n  'MediumVioletRed',\n  'DarkOrange',\n  'gold',\n  'SlateBlue',\n  'CadetBlue',\n  'Navy',\n  'DarkSlateGray',\n  'LightSlateGray'\n]\n\n\nclass NewGroupStore {\n  name = '';\n  users = {};\n  tasks = [];\n\n  addUser(name, email) {\n    const user = {\n      id: Date.now(),\n      name,\n      email,\n      color: USER_COLORS[Object.keys(this.users).length%USER_COLORS.length]\n    }\n\n    this.users[email] = user;\n  }\n\n  addTask(name, description, schedule) {\n    const task = {\n      id: Date.now(),\n      name,\n      schedule,\n      description,\n      currentQueue: this.shuffle(Object.keys(this.users))\n    }\n\n    this.tasks.push(task);\n  }\n\n  clear() {\n    this.name = '';\n    this.users = {};\n    this.tasks = [];\n  }\n\n  save() {\n    const group = {\n      name: this.name,\n      users: this.users,\n      tasks: this.tasks,\n      user_emails: Object.keys(this.users)\n    }\n\n    return groupStore.add(group).then(res => {\n      console.log(res);\n      return res;\n    }).catch(err => {\n      errorStore.addError(err);\n    })\n  }\n\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\ndecorate(NewGroupStore, {\n  name: observable,\n  users: observable,\n  tasks: observable,\n  addUser: action,\n  addTask: action,\n  clear: action,\n});\n\nexport default new NewGroupStore();","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\";\n\nimport Button from \"./Button\";\nimport Input from \"./Input\";\n\nimport \"../styles/Main.scss\";\nimport \"../styles/NewGroup.scss\";\n\nimport newGroupStore from '../stores/newGroup';\nimport userStore from '../stores/users';\n\nconst NewGroup = observer(class NewGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      step: \"your-name\",\n    };\n  }\n\n  formFlow = (current_step, next_step) => e => {\n    let newState = { step: next_step };\n    this.setState(newState);\n  };\n\n  addRoommate = () => {\n    let new_roommate = {\n      name: document.getElementById(\"roommate-name-input\").value,\n      email: document.getElementById(\"roommate-email-input\").value\n    };\n    document.getElementById(\"roommate-name-input\").value = \"\";\n    document.getElementById(\"roommate-email-input\").value = \"\";\n    newGroupStore.addUser(new_roommate.name, new_roommate.email);\n  };\n\n  onKeyPress = fn => e => {\n    if (e.key === 'Enter') {\n      fn();\n    }\n  }\n\n  onUsersName = () => {\n    const name = document.getElementById(\"user-name-input\").value;\n   \n    if (name && name.trim()) {\n      console.log(name)\n      this.formFlow(\"your-name\", \"group-name\")();\n      newGroupStore.addUser(name, userStore.currentUser);\n    }\n  }\n\n  getFormElement() {\n    let formElement;\n    let _this = this;\n    if (this.state.step === \"your-name\") {\n      formElement =(\n        <div className=\"form group-name\">\n          <p>What is your name?</p>\n          <Input id=\"user-name-input\" placeholder=\"Your Name\"\n            onKeyPress={this.onKeyPress(this.onUsersName)}\n          />\n          <Button\n            stylename=\"button--next\"\n            onClick={() => {this.onUsersName()}}\n          />\n        </div>\n      );\n    }\n\n    if (this.state.step === \"group-name\") {\n      formElement = (\n        <div className=\"form group-name\">\n          <p>What is your group name?</p>\n          <Input id=\"group-name-input\" placeholder=\"Group Name\"\n            onKeyPress={this.onKeyPress(this.formFlow(\"group-name\", \"roommates\"))}\n            value={newGroupStore.name}\n            onChange={(e) => newGroupStore.name = e.target.value}\n          />\n          <Button\n            stylename=\"button--next\"\n            onClick={this.formFlow(\"group-name\", \"roommates\")}\n          />\n        </div>\n      );\n    } else if (this.state.step === \"roommates\") {\n      formElement = (\n        <div className=\"form roommates\">\n          <h4 className=\"form-title\">{this.state.groupName}</h4>\n          <p>Who are the roommates in this group?</p>\n          {Object.values(newGroupStore.users).map(function(roommate, index) {\n            return <div key={index}>{roommate.name} - {roommate.email}</div>;\n          })}\n          <Input id=\"roommate-name-input\" placeholder=\"Roommate Name\" />\n          <Input id=\"roommate-email-input\" placeholder=\"Roommate Email\" \n            onKeyPress={this.onKeyPress(_this.addRoommate)}\n          />\n          <div>\n            <Button\n              stylename=\"button--back\"\n              onClick={this.formFlow(\"roommates\", \"group-name\")}\n            />\n            <Button\n              stylename=\"button--call-to-action\"\n              onClick={_this.addRoommate}\n            >\n              {\" \"}\n              Add Roommate +\n            </Button>\n            <Link to={{ pathname: '/newchores', state: { groupName: this.state.groupName} }}>\n              <Button>Added All Roommates ></Button>\n            </Link>\n          </div>\n        </div>\n      );\n    }\n    return formElement;\n  }\n\n  render() {\n    let formElement = this.getFormElement();\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <div className=\"NewGroup\">{formElement}</div>\n        </div>\n      </div>\n    );\n  }\n})\n\nexport default NewGroup;\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\";\n\nimport Button from './Button';\nimport Input from './Input';\n\nimport '../styles/Main.scss';\nimport '../styles/NewGroup.scss';\n\nimport newGroupStore from '../stores/newGroup';\n\nconst NewChores = observer(class NewChores extends Component {\n  addChore = () => {\n    let new_chore = {\n      name: document.getElementById('chore-name-input').value,\n      description: document.getElementById('chore-email-input').value,\n      frequency: document.getElementById('chore-frequency-input').value\n    }\n    document.getElementById('chore-name-input').value = '';\n    document.getElementById('chore-email-input').value = '';\n    document.getElementById('chore-frequency-input').value = 'Daily';\n    newGroupStore.addTask(new_chore.name, new_chore.description, new_chore.frequency);\n  }\n\n  saveGroup = () => {\n    newGroupStore.save().then(group => {\n      this.props.history.push('/groups/' + group.id + '/tasks');\n      newGroupStore.clear();\n      console.log('cleared');\n    })\n  }\n\n  onKeyPress = fn => e => {\n    if (e.key === 'Enter') {\n      fn();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <div className=\"NewGroup\">\n            <div className=\"form roommates\">\n              <h4 className=\"form-title\">{newGroupStore.name}</h4>\n              <p>What are the chores y'all have to do?</p>\n              {\n                newGroupStore.tasks.map((task ) => { \n                  return <div key={task.id}>{task.name} - {task.schedule}</div>\n                })\n              }\n              <Input id=\"chore-name-input\" placeholder=\"Chore Name\"/>\n              <Input id=\"chore-email-input\" placeholder=\"Chore Description\"\n                onKeyPress={this.onKeyPress(this.addChore)}\n              />\n              <div style={{paddingTop: \"25px\"}}>Frequency:{\" \"}\n                <select id=\"chore-frequency-input\" defaultValue=\"daily\">\n                  <option value=\"Daily\">Daily</option>\n                  <option value=\"Weekly\">Weekly</option>\n                  <option value=\"Biweekly\">Biweekly</option>\n                  <option value=\"Monthly\">Monthly</option>\n                  <option value=\"As Needed\">As Needed</option>\n                </select>\n              </div>\n              <div>\n                <Button stylename=\"button--call-to-action\" onClick={this.addChore}> Add Chore +</Button>\n                <Button onClick={this.saveGroup}>Added All Chores ></Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n})\n\nexport default NewChores;\n","import React from 'react';\n\nimport '../styles/CircleInitials.scss'\n\nconst CircleInitials = ({ name, color }) => {\n  const parts = name.split(\" \");\n  let initials = parts[0][0];\n  if (1 < parts.length) {\n    initials += parts[1][0]; \n  }\n\n  return (\n    <p style={{backgroundColor: color}} className=\"circle-initials\">\n      {initials}\n    </p>\n  )\n}\n\nexport default CircleInitials;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\"\n\nimport groupStore from '../stores/groups';\n\nimport '../styles/TaskCard.scss'\nimport CircleInitials from './CircleInitials';\n\nconst titleMappings = {\n  \"Daily\": \"TODAY\",\n  \"Weekly\": \"THIS WEEK\",\n  \"Biweekly\": \"IN THE NEXT TWO WEEKS\",\n  \"Monthly\": \"THIS MONTH\",\n  \"As Needed\": \"AS NEEDED\",\n  \"Coming up\": \"COMING UP\",\n}\n\nconst TaskCard = ({ tasks, title }) => {\n  if (tasks.length === 0) {\n    return null;\n  }\n  const items = tasks.map(task => {\n    const user = groupStore.group.users[task.currentQueue[0]];\n    return (\n      <li key={task.id} className=\"task-card-item\">\n          <span className=\"task-card-check\"><i className=\"far fa-check-circle\"></i></span>\n          <span>{task.name}</span> \n          <span className=\"task-card-right\">\n            <CircleInitials name={user.name} color={user.color} />\n            <Link className=\"task-card-focus-button\" to={\"/groups/\" + groupStore.group.id + \"/tasks/\" + task.id}><i className=\"fas fa-angle-right\"></i></Link>\n          </span>\n      </li>\n    )\n  })\n  return (\n    <section className=\"task-card\">\n      <ul className=\"task-card-list\">\n        <header className=\"task-card-title\"> \n          {titleMappings[title] ? titleMappings[title] : title}\n        </header>\n        {items}\n      </ul>\n    </section>\n  )\n}\n\nexport default observer(TaskCard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\"\n\nimport groupStore from '../stores/groups';\nimport userStore from '../stores/users';\n\nimport '../styles/Notif.scss';\n\nconst Notif = observer(class Notif extends Component {\n  render() {\n    return (\n      <div id={this.props.id} className=\"Notif\">\n        {this.props.notifText}\n      </div>\n    )\n  }\n});\n\nexport default Notif;","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport groupStore from '../stores/groups';\nimport userStore from '../stores/users';\nimport CircleInitials from './CircleInitials';\nimport CallToActionButton from './CallToActionButton';\nimport Notif from \"./Notif.js\";\n\nimport '../styles/FocusedTask.scss'\n\nconst FocusedTask = ({ task, closeURL }) => {\n  const queue = task.currentQueue.map(email => {\n    const user = groupStore.group.users[email];\n    return (\n      <li key={email} className=\"focused-task-queue-item\">\n        <span><CircleInitials name={user.name} color={user.color} style={{display: 'inline'}} />{user.name}</span>\n      </li>\n    )\n  })\n\n  const handleComplete = () => {\n    document.getElementById(task.name).style.top = 0;\n    task.currentQueue.push(task.currentQueue.shift());\n    setTimeout(()=>{document.getElementById(task.name).style.top = \"-50px\";}, 2000);\n  }\n\n  let random_churros = Math.floor(Math.random() * 100);\n\n  return (\n    <section className=\"focused-task-card\">\n      <Notif id={task.name} notifText={task.name+\" - Done! You earned \" + random_churros + \" churros!\"}/>\n      <div className=\"focused-task-content\">\n        <header className=\"focused-task-card-name\"> \n          <div className=\"focused-task-close\">\n            <Link className=\"focused-task-close-button\" to={closeURL}>x</Link>\n          </div>\n          <h2>{task.name}</h2>\n        </header>\n        <p className=\"focused-task-card-desc\">\n          {task.description}\n        </p>\n\n        <ul className=\"focused-task-queue\">\n          {queue}\n        </ul>\n        {userStore.currentUser == task.currentQueue[0] ?\n          (<CallToActionButton onClick={handleComplete}>COMPLETE TASK</CallToActionButton>)\n          :\n          null\n         }\n        \n      </div>\n    </section>\n  )\n}\n\nexport default FocusedTask;\n","import React from \"react\";\n\nimport \"../styles/AddChoreButton.scss\";\n\nconst AddChoreButton = props => {\n  return <button className=\"chore-button\">+</button>;\n};\n\nexport default AddChoreButton;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\"\nimport Spinner from 'react-spinkit';\n\nimport TaskCard from \"./TaskCard\";\nimport Button from './Button';\nimport FocusedTask from \"./FocusedTask\";\nimport NavBar from \"./NavBar\";\nimport AddChoreButton from \"./AddChoreButton\";\nimport Notif from \"./Notif.js\";\n\nimport groupStore from '../stores/groups';\nimport userStore from '../stores/users';\n\nimport '../styles/MyTasks.scss';\nimport churro from '../img/churro.svg';\n\nconst MyTasks = observer(class MyTasks extends Component {\n  componentDidMount() {\n    const groupID = this.props.match.params.group;\n    groupStore.get(groupID);\n  }\n\n  render() {\n    let content = (<Spinner className=\"center\" name='double-bounce' />);\n    const groupID = this.props.match.params.group;\n    if (!groupStore.isFetching) {\n      let focusedTask;\n      const tasks = groupStore.group.tasks.reduce((m, task) => {\n        if (this.props.match.params.id) {\n          if (task.id.toString() === this.props.match.params.id) {\n            focusedTask = task;\n          }\n        }\n\n        if (task.currentQueue[0] === userStore.currentUser) {\n          m[task.schedule].push(task);\n        } else if (1 < task.currentQueue.length && task.currentQueue[1] === userStore.currentUser) {\n          m[\"Coming up\"].push(task);\n        }\n        \n        return m;\n      }, {\n        \"Daily\": [],\n        \"Weekly\": [],\n        \"Biweekly\": [],\n        \"Monthly\": [],\n        \"As Needed\": [],\n        \"Coming up\": [],\n      });\n\n      const cards = Object.entries(tasks).map(kv => {\n        return (<TaskCard key={kv[0]} title={kv[0]} tasks={kv[1]} />)\n      });\n\n      content = (\n        <div className=\"MyTasks\">\n          <div className=\"group-heading center\">\n            <img className=\"churro-img\" src={churro} />\n            <h1>{groupStore.group.name}</h1>\n          </div>\n            <p className=\"chores-list-title center\">Chores List</p>\n            <section className=\"my-tasks-columns\">\n              <div className=\"my-tasks-cards\">\n                {cards}\n              </div>\n              {focusedTask && (<FocusedTask task={focusedTask} closeURL={\"/groups/\" + groupID + \"/tasks\"} />)}\n            </section>\n        </div>\n      )\n    }\n\n    return (\n      <div>\n        <NavBar />\n          {content}\n        <Link to={\"/groups/\" + groupID + \"/leaderboard\"}>\n          <Button stylename=\"button--leaderboard\">Leaderboard</Button>\n        </Link>\n        <Link to={\"/groups/\" + groupID + \"/addchore\"}>\n          <AddChoreButton />\n        </Link>\n      </div>\n    );\n  }\n})\n\nexport default MyTasks;\n","import React, { Component } from 'react';\nimport { observer } from \"mobx-react\"\n\nimport Button from './Button';\nimport Input from './Input';\n\nimport userStore from '../stores/users';\n\nimport '../styles/Main.scss';\nimport '../styles/NewGroup.scss';\n\n\n\nconst Login = observer(class Login extends Component {\n  emailRE = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      styles: {}\n    };\n\n    this.onKeyPress = this.onKeyPress.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this); \n  }\n\n  onKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit();\n    }\n  }\n\n  handleChange(e) {\n    this.setState({\n      email: e.target.value,\n      styles: {}\n    });\n  }\n\n  handleSubmit() {\n    if (this.state.email.trim() && this.emailRE.test(this.state.email)) {\n      userStore.setCurrentUser(this.state.email);\n      let params = new URLSearchParams(this.props.location.search);\n      const next = params.get('redirect') ? params.get('redirect') : '/groups';\n      this.props.history.push(next);\n    } else {\n      this.setState({\n        email: this.state.email,\n        styles: {\n          borderBottom: \"3px solid #E00747\"\n        }\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <div className=\"NewGroup\">\n          <div className=\"form group-name\">\n            <p>What is your email?</p>\n            <Input id=\"group-name-input\" style={this.state.styles} placeholder=\"Email\" value={this.state.value} onChange={this.handleChange} onKeyPress={this.onKeyPress} />\n            <Button stylename=\"button--next\" onClick={this.handleSubmit} />\n          </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n});\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport NavBar from \"./NavBar\";\nimport Input from \"./Input\";\nimport Button from \"./Button\";\nimport Notif from \"./Notif\";\n\nimport \"../styles/AddChore.scss\";\n\nimport groupStore from '../stores/groups';\n\nclass AddChore extends Component {\n  handleComplete = () => {\n    document.getElementById(\"add-chore-popup\").style.top = 0;\n    setTimeout(()=>{document.getElementById(\"add-chore-popup\").style.top = \"-50px\";}, 3000);\n  }\n\n  addChore = () => {\n    let new_chore = {\n      name: document.getElementById('task-name').value,\n      description: document.getElementById('task-desc').value,\n      frequency: document.getElementById('task-freq').value\n    }\n    document.getElementById('task-name').value = '';\n    document.getElementById('task-desc').value = '';\n    document.getElementById('task-freq').value = 'Daily';\n    console.log(new_chore);\n    groupStore.addTask(new_chore.name, new_chore.description, new_chore.frequency);\n    this.handleComplete();\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar />\n        <div className=\"MyTasks center AddChore\">\n          <Notif id=\"add-chore-popup\" notifText=\"Chore was added!\" />\n          <h2>Add Chore</h2>\n          <Input id=\"task-name\" placeholder=\"Chore Name\" />\n          <br />\n          <textarea\n            className=\"text-input\"\n            id=\"task-desc\"\n            placeholder=\"Chore Description\"\n          />\n          <br />\n          Frequency:{\" \"}\n          <select id=\"task-freq\" defaultValue=\"daily\">\n            <option value=\"Daily\">Daily</option>\n            <option value=\"Weekly\">Weekly</option>\n            <option value=\"Biweekly\">Biweekly</option>\n            <option value=\"Monthly\">Monthly</option>\n            <option value=\"As Needed\">As Needed</option>\n          </select>\n          <br />\n          <Button stylename=\"button--call-to-action\" onClick={this.addChore}>Add Chore</Button>\n          <Button stylename=\"\" onClick={() => this.props.history.goBack()}>Cancel</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddChore;\n","import React, { Component } from 'react';\nimport { observer } from \"mobx-react\"\nimport { Link } from \"react-router-dom\";\nimport Spinner from 'react-spinkit';\n\n\nimport userStore from '../stores/users';\n\nimport '../styles/Main.scss';\nimport '../styles/NewGroup.scss';\nimport '../styles/GroupList.scss';\n\nconst GroupList = observer(class GroupList extends Component {\n  constructor(props) {\n    super(props);\n    userStore.fetchCurrentUsersGroups();\n  }\n\n  render() {\n    let content = (\n      <div>\n        <Spinner name='double-bounce' />\n      </div>\n    );\n\n    if (!userStore.fetching) {\n      const groups = userStore.usersGroups.map(group => {\n        return (\n          <li key={group.id}>\n            <Link to={\"/groups/\" + group.id + \"/tasks\"}>{group.name}</Link>\n          </li>\n        )\n      });\n      content = (\n        <section className=\"GroupList\">\n          <h1>Your Groups</h1>\n          <ul className=\"list-container\">\n            {groups}\n          </ul>\n        </section>\n      )\n    }\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <div className=\"NewGroup\">\n          <div className=\"form group-name\">\n            {content}\n          </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n});\n\nexport default GroupList;\n","import React, { Component } from 'react';\nimport { observer } from \"mobx-react\"\nimport { Link } from \"react-router-dom\";\nimport Spinner from 'react-spinkit';\n\nimport userStore from '../stores/users';\nimport groupStore from '../stores/groups';\n\nimport NavBar from \"./NavBar\";\n\nimport '../styles/Main.scss';\nimport '../styles/NewGroup.scss';\nimport '../styles/GroupList.scss';\nimport '../styles/Leaderboard.scss';\n\nconst Leaderboard = observer(class GroupList extends Component {\n  componentDidMount() {\n    const groupID = this.props.match.params.group;\n    groupStore.get(groupID);\n  }\n\n  render() {\n    let content = (\n      <div>\n        <Spinner name='double-bounce' />\n      </div>\n    );\n\n    const groupID = this.props.match.params.group;\n    let leaderboard = '';\n    if (!groupStore.isFetching) {\n      let users = groupStore.group.users;\n      leaderboard = Object.entries(users).map(kv=>{\n        return (\n          <tr className=\"leaderboard-row\" key={kv[0]}>\n            <td>{kv[1].name}</td>\n            <td>{Math.floor(Math.random() * 100)}</td>\n          </tr>)\n      });\n    }\n    content = (\n      <section className=\"GroupList\">\n        <h1>Leaderboard</h1>\n        <table className=\"leaderboard-table\">\n          <thead>\n          <tr className=\"leaderboard-row\">\n            <th>Name</th>\n            <th>Churros</th>\n          </tr>\n          </thead>\n          <tbody>{leaderboard}</tbody>\n        </table>\n      </section>\n    )\n    return (\n      <div>\n      <NavBar />\n        <div className=\"container\">\n          <div className=\"NewGroup\">\n          <div className=\"form group-name\">\n            {content}\n          </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n});\n\nexport default Leaderboard;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport AuthenticatedRoute from './components/AuthenticatedRoute';\n\nimport Main from \"./components/Main\";\nimport NewGroup from \"./components/NewGroup\";\nimport NewTasks from \"./components/NewTasks\";\nimport MyTasks from \"./components/MyTasks\";\nimport Login from \"./components/Login\";\nimport AddChore from \"./components/AddChore\";\nimport GroupList from \"./components/GroupList\";\nimport Leaderboard from \"./components/Leaderboard\";\n\nimport \"./styles/index.scss\";\n\nconst App = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <main>\n      <Route path=\"/\" exact component={Main} />\n      <Route path=\"/login\" exact component={Login} />\n      <AuthenticatedRoute path=\"/new\" exact component={NewGroup} />\n      <AuthenticatedRoute path=\"/groups/:group/leaderboard\" exact component={Leaderboard} />\n      <AuthenticatedRoute path=\"/newchores\" exact component={NewTasks} />\n      <AuthenticatedRoute path=\"/groups\" exact component={GroupList} />\n      <AuthenticatedRoute path=\"/groups/:group/tasks\" exact component={MyTasks} />\n      <AuthenticatedRoute path=\"/groups/:group/tasks/:id\" exact component={MyTasks} />\n      <AuthenticatedRoute path=\"/groups/:group/addchore\" exact component={AddChore} />\n    </main>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/churro.1b9bd282.svg\";"],"sourceRoot":""}