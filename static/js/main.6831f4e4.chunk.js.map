{"version":3,"sources":["components/CallToActionButton.js","components/Button.js","components/Input.js","components/NewGroup.js","components/Main.js","store.js","components/CircleInitials.js","components/TaskCard.js","components/FocusedTask.js","components/MyTasks.js","App.js","serviceWorker.js","index.js"],"names":["CallToActionButton","props","react_default","a","createElement","Object","assign","className","children","Button","stylename","concat","Input","NewGroup","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","formFlow","current_step","next_step","e","newState","step","groupName","document","getElementById","value","setState","addRoommate","roommates","state","new_roommate","name","email","push","formElement","components_Input","id","placeholder","components_Button","onClick","map","roommate","index","key","getFormElement","Component","Main","elem","style","left","opacity","Link","to","components_CallToActionButton","transitionOut","store","users","345345dafasdf","color","adf89dsaf980809df","gfg09h8dfs0g98df09g","908fdsg09dfg809","tasks","schedule","description","currentQueue","CircleInitials","_ref","parts","split","initials","backgroundColor","TaskCard","title","length","items","task","user","components_CircleInitials","FocusedTask","queue","display","MyTasks","focusedTask","reduce","m","match","params","Daily","Weekly","Biweekly","Monthly","As needed","Coming up","cards","entries","kv","components_TaskCard","console","log","components_FocusedTask","App","BrowserRouter","basename","process","Route","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6831f4e4.chunk.js","sourcesContent":["import React from 'react';\n\nimport '../styles/Button.scss';\n\nconst CallToActionButton = (props) => {\n  return (\n    <button className=\"button button--call-to-action\" {...props}>{ props.children }</button>\n  )\n}\n\nexport default CallToActionButton;\n","import React from 'react';\n\nimport '../styles/Button.scss';\n\nconst Button = (props) => {\n  let stylename = '';\n  if (props && props.stylename) stylename = props.stylename;\n  return (\n    <button className={`button ${stylename}`} {...props} >{ props.children }</button>\n  )\n}\n\nexport default Button;\n","import React from 'react';\n\nimport '../styles/Input.scss';\n\nconst Input = (props) => {\n  return (\n    <input className=\"input\" {...props} >{ props.children }</input>\n  )\n}\n\nexport default Input;\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport CallToActionButton from './CallToActionButton';\nimport Button from './Button';\nimport Input from './Input';\n\nimport '../styles/Main.scss';\nimport '../styles/NewGroup.scss';\n\nclass NewGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      step: 'group-name',\n      groupName: '',\n      roommates: []\n    }\n  }\n\n  formFlow = (current_step, next_step) => e => {\n    let newState = {step: next_step};\n    if (current_step == 'group-name') {\n      newState.groupName = document.getElementById('group-name-input').value;\n    }\n    this.setState(newState);\n  }\n\n  addRoommate = () => {\n    let roommates = this.state.roommates;\n    let new_roommate = {\n      name: document.getElementById('roommate-name-input').value,\n      email: document.getElementById('roommate-email-input').value\n    }\n    roommates.push(new_roommate);\n    document.getElementById('roommate-name-input').value = '';\n    document.getElementById('roommate-email-input').value = '';\n    this.setState({roommates: roommates});\n  }\n\n  getFormElement() {\n    let formElement;\n    let roommates = this.state.roommates;\n    let _this = this;\n    if (this.state.step == 'group-name') {\n      formElement = \n      <div className=\"form group-name\">\n        <Input id=\"group-name-input\" placeholder=\"Group Name\"/>\n        <Button stylename=\"button--next\" onClick={this.formFlow('group-name','roommates')}/>\n      </div>\n    }\n    else if (this.state.step == 'roommates'){\n      formElement = \n      <div className=\"form roommates\">\n        <h4 className=\"form-title\">{this.state.groupName}</h4>\n        <p>Who are the roommates in this group?</p>\n        {\n          roommates.map(function(roommate, index){\n            return <div key={index}>{roommate.name}</div>\n          })\n        }\n        <Input id=\"roommate-name-input\" placeholder=\"Roommate Name\"/>\n        <Input id=\"roommate-email-input\" placeholder=\"Roommate Email\"/>\n        <div>\n          <Button stylename=\"button--back\" onClick={this.formFlow('roommates','group-name')}/>\n          <Button stylename=\"button--call-to-action\" onClick={_this.addRoommate}> Add Roommate +</Button>\n          <Button>Added All Roommates ></Button>\n        </div>\n      </div>\n    }\n    return formElement\n  }\n\n  render() {\n    let formElement = this.getFormElement()\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <div className=\"NewGroup\">\n            {formElement}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NewGroup;\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport CallToActionButton from './CallToActionButton';\nimport Button from './Button';\nimport NewGroup from './NewGroup';\n\nimport '../styles/Main.scss';\n\nconst new_group_route = 'new'\n\nclass Main extends Component {\n  transitionOut() {\n    let elem = document.getElementById('landing');\n    elem.style.left = \"-10%\";\n    elem.style.opacity = 0;\n    // setTimeout(()=>{window.location.href += new_group_route}, 500);\n  }\n\n  render() {\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <div id=\"landing\">\n            <h2 className=\"welcome-header\">Welcome to Churro!</h2>\n            <h4 className=\"welcome-subheader\">The New Way to Manage Chores</h4>\n            <div className=\"button-container\">\n              <Link to=\"/new\"><CallToActionButton onClick={this.transitionOut}>START A NEW GROUP</CallToActionButton></Link>\n              <Link to=\"/tasks\"><Button>LOGIN</Button></Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","const users = {\n  '345345dafasdf': {\n    name: 'Martin Kong',\n    color: 'tomato'\n  },\n  'adf89dsaf980809df': {\n    name: 'Mihir Mathur',\n    color: 'teal'\n  },\n  'gfg09h8dfs0g98df09g': {\n    name: 'Hao Nguyen',\n    color: 'turquoise'\n  },\n  '908fdsg09dfg809': {\n    name: 'Cody Ley-Han',\n    color: 'forestGreen'\n  }\n}\n\nconst tasks = [\n  {\n    id: '3124lk1234',\n    name: 'Take out trash',\n    schedule: 'As needed',\n    description: 'Take out the trash and make sure that you put a new bag in the thing, also don\\'t throw recyclables in the trash',\n    currentQueue: [\n      '345345dafasdf',\n      'adf89dsaf980809df',\n      'gfg09h8dfs0g98df09g',\n      '908fdsg09dfg809',\n    ]\n  },\n  {\n    id: '432jadffia0d9f',\n    name: 'Get the mail',\n    schedule: 'Daily',\n    description: 'Just grab the mail and put it on the table when you get it',\n    currentQueue: [\n      '908fdsg09dfg809',\n      'adf89dsaf980809df',\n      'gfg09h8dfs0g98df09g',\n      '345345dafasdf',\n    ]\n  },\n  {\n    id: 'fasdf89sadf8',\n    name: 'Sweep the kitchen',\n    description: 'Make sure to do a good job so it doesn\\'t get all nasty',\n    schedule: 'Monthly',\n    currentQueue: [\n      'gfg09h8dfs0g98df09g',\n      '908fdsg09dfg809',\n      '345345dafasdf',\n      'adf89dsaf980809df',\n    ]\n  },\n  {\n    id: 'a90f8sad9fas',\n    name: 'Maintanence Request',\n    description: 'The forms are in the closet if we need something done, hopefully not.  This also includes being there when someone comes',\n    schedule: 'As needed',\n    currentQueue: [\n      '908fdsg09dfg809',\n      '345345dafasdf',\n      'adf89dsaf980809df',\n      'gfg09h8dfs0g98df09g',\n    ]\n  },\n  {\n    id: 'dsf9sdaf0asd89f9asdf',\n    name: 'Vaccum carpet',\n    schedule: 'Biweekly',\n    description: 'Pretty easy just make sure to clean out the thing after you\\re done',\n    currentQueue: [\n      '908fdsg09dfg809',\n      '345345dafasdf',\n      'adf89dsaf980809df',\n      'gfg09h8dfs0g98df09g',\n    ]\n  },\n  {\n    id: 'jkll2k5j4l3k5',\n    name: 'Clean counters',\n    description: 'Use the chlorox wipes under the sink',\n    schedule: 'Daily',\n    currentQueue: [\n      '908fdsg09dfg809',\n      '345345dafasdf',\n      'adf89dsaf980809df',\n      'gfg09h8dfs0g98df09g',\n    ]\n  },\n  {\n    id: 'h8439582435',\n    name: 'Put trash out',\n    schedule: 'Weekly',\n    description: 'Has to be put out every week by 5AM Monday morning',\n    currentQueue: [\n      '908fdsg09dfg809',\n      '345345dafasdf',\n      'adf89dsaf980809df',\n      'gfg09h8dfs0g98df09g',\n    ]\n  }\n]\n\n\nexport default {\n  users,\n  tasks\n}","import React from 'react';\n\nimport store from '../store';\n\nimport '../styles/CircleInitials.scss'\n\nconst CircleInitials = ({ name, color }) => {\n  const parts = name.split(\" \");\n  const initials = parts[0][0] + parts[1][0]; \n\n  return (\n    <p style={{backgroundColor: color}} className=\"circle-initials\">\n      {initials}\n    </p>\n  )\n}\n\nexport default CircleInitials;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport store from '../store';\n\nimport '../styles/TaskCard.scss'\nimport CircleInitials from './CircleInitials';\n\n\nconst TaskCard = ({title, tasks}) => {\n  if (tasks.length === 0) {\n    return null;\n  }\n\n  const items = tasks.map(task => {\n    const user = store.users[task.currentQueue[0]];\n\n    return (\n      <li key={task.id} className=\"task-card-item\">\n        <span>\n          <span className=\"task-card-check\"><i className=\"far fa-check-circle\"></i></span>\n          {task.name} \n          <span className=\"task-card-right\">\n            <CircleInitials name={user.name} color={user.color} />\n            <Link className=\"task-card-focus-button\" to={\"/tasks/\" + task.id}><i className=\"fas fa-angle-right\"></i></Link>\n          </span>\n        </span>\n      </li>\n    )\n  })\n  return (\n    <section className=\"task-card\">\n      <header className=\"task-card-title\"> \n        {title}\n      </header>\n      <ul className=\"task-card-list\">\n        {items}\n      </ul>\n    </section>\n  )\n}\n\nexport default TaskCard;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport store from '../store';\nimport CircleInitials from './CircleInitials';\nimport CallToActionButton from './CallToActionButton';\n\nimport '../styles/FocusedTask.scss'\n\nconst FocusedTask = ({ task }) => {\n  const queue = task.currentQueue.map(id => {\n    const user = store.users[id];\n\n    return (\n      <li key={id} className=\"focused-task-queue-item\">\n        <span><CircleInitials name={user.name} color={user.color} style={{display: 'inline'}} /> {user.name}</span>\n      </li>\n    )\n  });\n\n\n  return (\n    <section className=\"focused-task-card\">\n      <div className=\"focused-task-content\">\n        <div className=\"focused-task-close\">\n          <Link className=\"focused-task-close-button\" to=\"/tasks\">x</Link>\n        </div>\n        <header className=\"focused-task-card-name\"> \n          <h2>{task.name}</h2>\n        </header>\n        <p className=\"focused-task-card-desc\">\n          {task.description}\n        </p>\n\n        <ul className=\"focused-task-queue\">\n          {queue}\n        </ul>\n\n        <CallToActionButton>COMPLETE TASK</CallToActionButton>\n      </div>\n    </section>\n  )\n}\n\nexport default FocusedTask;\n","import React, { Component } from 'react';\n\nimport TaskCard from './TaskCard';\nimport FocusedTask from './FocusedTask';\n\nimport store from '../store';\nimport '../styles/MyTasks.scss';\n\nclass MyTasks extends Component {\n  render() {\n    let focusedTask;\n\n    const tasks = store.tasks.reduce((m, task) => {\n      if (this.props.match.params.id) {\n        if (task.id === this.props.match.params.id) {\n          focusedTask = task;\n        }\n      }\n\n      if (task.currentQueue[0] === '908fdsg09dfg809') {\n        m[task.schedule].push(task);\n      } else if (task.currentQueue[1] === '908fdsg09dfg809') {\n        m[\"Coming up\"].push(task);\n      }\n      \n      return m;\n    }, {\n      \"Daily\": [],\n      \"Weekly\": [],\n      \"Biweekly\": [],\n      \"Monthly\": [],\n      \"As needed\": [],\n      \"Coming up\": [],\n    });\n\n    const cards = Object.entries(tasks).map(kv => {\n      return (<TaskCard key={kv[0]} title={kv[0]} tasks={kv[1]}/>)\n    })\n\n    console.log(focusedTask);\n    return (\n      <div className=\"MyTasks\">\n        <h1>The CSS Slayers</h1>\n        <h2>My Tasks</h2>\n        \n        <section className=\"my-tasks-columns\">\n         <div className=\"my-tasks-cards\">\n          {cards}\n         </div>\n         {focusedTask && (<FocusedTask task={focusedTask} />)}\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default MyTasks;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Main from './components/Main';\nimport NewGroup from './components/NewGroup';\nimport MyTasks from './components/MyTasks';\n\nimport './styles/index.scss';\n\nconst App = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <main>\n      <Route path=\"/\" exact component={Main} />\n      <Route path=\"/new\" exact component={NewGroup} />\n      <Route path=\"/tasks\" exact component={MyTasks} />\n      <Route path=\"/tasks/:id\" component={MyTasks} />\n    </main>    \n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}