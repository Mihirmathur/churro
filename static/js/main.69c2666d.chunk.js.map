{"version":3,"sources":["Firebase.js","stores/errors.js","stores/groups.js","stores/users.js","components/AuthenticatedRoute.js","components/CallToActionButton.js","components/Button.js","components/Main.js","components/Input.js","components/NewGroup.js","components/NewTasks.js","components/CircleInitials.js","components/TaskCard.js","components/Notif.js","components/FocusedTask.js","components/NavBar.js","components/AddChoreButton.js","components/MyTasks.js","components/Login.js","components/AddChore.js","components/GroupList.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ErrorStore","errors","timeoutFn","_this","this","clearTimeout","setTimeout","err","push","waitAndClear","length","decorate","observable","addError","action","hasErrors","computed","GroupStore","Object","classCallCheck","group","isFetching","userColors","db","firestore","settings","timestampsInSnapshots","collection","autorun","updateGroup","delay","id","_this2","doc","get","then","exists","data","console","log","catch","errorStore","email","_this3","where","docs","empty","groups","forEach","item","name","userEmails","tasks","_this4","users","map","idx","color","user_emails","add","set","res","getUsersGroups","stores_groups","STORAGE_KEY","UserStore","currentUser","usersGroups","fetching","localStorage","getItem","removeItem","user","setItem","isLoggedIn","groupStore","setCurrentUser","getCurrentUsersGroups","stores_users","AuthenticatedRoute","_ref","Component","component","rest","objectWithoutProperties","react_default","a","createElement","Route","assign","render","props","userStore","Redirect","to","location","pathname","CallToActionButton","className","children","Button","stylename","concat","Main","observer","_Component","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","elem","document","getElementById","style","left","opacity","Link","components_CallToActionButton","onClick","transitionOut","components_Button","Input","NewGroup","call","formFlow","current_step","next_step","e","newState","step","groupName","setState","addRoommate","roommates","state","new_roommate","onKeyPress","fn","formElement","components_Input","placeholder","roommate","index","getFormElement","NewChores","addChore","chores","new_chore","description","frequency","chore","paddingTop","defaultValue","CircleInitials","parts","split","initials","backgroundColor","titleMappings","Daily","Weekly","Biweekly","Monthly","As needed","Coming up","title","items","task","currentQueue","components_CircleInitials","Notif","notifText","FocusedTask","closeURL","queue","display","components_Notif","top","shift","NavBar","BurgerMenu","NavLink","exact","logout","AddChoreButton","MyTasks","groupID","match","params","content","dist_default","focusedTask","reduce","m","schedule","cards","entries","kv","components_TaskCard","components_FocusedTask","components_NavBar","components_AddChoreButton","Login","emailRE","styles","bind","assertThisInitialized","handleChange","handleSubmit","target","trim","test","URLSearchParams","search","next","history","borderBottom","onChange","AddChore","redirect","renderRedirect","GroupList","fetchCurrentUsersGroups","App","BrowserRouter","basename","process","path","components_AuthenticatedRoute","NewTasks","Boolean","window","hostname","ReactDOM","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2VAEAA,IAASC,cAAc,CACrBC,OAAQ,0CACRC,WAAY,+BACZC,YAAa,sCACbC,UAAW,eACXC,cAAe,GACfC,kBAAmB,iBAGNP,QAAf,ECTMQ,mDACJC,OAAS,QACTC,UAAY,gEAEG,IAAAC,EAAAC,KACU,OAAnBA,KAAKF,WACPG,aAAaD,KAAKF,WAEpBE,KAAKF,UAAYI,WAAW,WAC3BH,EAAKF,OAAS,GACdE,EAAKD,UAAY,MACf,qCAIHE,KAAKH,OAAS,oCAGPM,GACPH,KAAKH,OAAOO,KAAKD,GACjBH,KAAKK,iDAIL,OAAO,EAAIL,KAAKH,OAAOS,gBAI3BC,YAASX,EAAY,CACnBC,OAAQW,IACRC,SAAUC,IACVC,UAAWC,MAGE,IAAAf,EAAA,IAAID,EC/BbiB,aAqBJ,SAAAA,EAAYzB,GAAU,IAAAW,EAAAC,KAAAc,OAAAC,EAAA,EAAAD,CAAAd,KAAAa,GAAAb,KApBtBgB,MAAQ,KAoBchB,KAnBtBiB,YAAa,EAmBSjB,KAjBtBkB,WAAa,CACX,SACA,OACA,OACA,YACA,cACA,YACA,kBACA,aACA,OACA,YACA,YACA,OACA,gBACA,kBAKA,IAAIC,EAAK/B,EAASgC,YAGlBD,EAAGE,SAAS,CACVC,uBAAuB,IAEzBtB,KAAKmB,GAAKA,EAAGI,WAAW,UACxBC,YAAQ,kBAAMzB,EAAK0B,eAAe,CAAEC,MAAO,sDAGzCC,GAAI,IAAAC,EAAA5B,KACN,GAAmB,OAAfA,KAAKgB,OAAkBhB,KAAKgB,MAAMW,KAAOA,EAK7C,OADA3B,KAAKiB,YAAa,EACXjB,KAAKmB,GAAGU,IAAIF,GAAIG,MAAMC,KAAK,SAACF,GACjC,GAAKA,EAAIG,OAQT,OAHAJ,EAAKZ,MAAQa,EAAII,OACjBL,EAAKZ,MAAMW,GAAKA,EAChBC,EAAKX,YAAa,EACXW,EAAKZ,MAPVkB,QAAQC,IAAI,uBAAyBR,KAQtCS,MAAM,SAAAjC,GACPyB,EAAKX,YAAa,EAClBoB,EAAW5B,SAASN,4CAITmC,GAAO,IAAAC,EAAAvC,KAEpB,OADAkC,QAAQC,IAAIG,GACLtC,KAAKmB,GAAGqB,MAAM,cAAe,iBAAkBF,GAAOR,MAAMC,KAAK,SAACU,GACvE,IAAIA,EAAKC,MAAT,CAKA,IAAIC,EAAS,GASb,OARAF,EAAKG,QAAQ,SAAAf,GACX,IAAMb,EAAQa,EAAII,OACdY,EAAQ,CACVlB,GAAIE,EAAIF,GACRmB,KAAM9B,EAAM8B,MAEdH,EAAOvC,KAAKyC,KAEPF,EAbLT,QAAQC,IAAI,iCAAmCG,KAchDF,MAAM,SAAAjC,GACPoC,EAAKtB,YAAa,EAClBoB,EAAW5B,SAASN,iCAIpB2C,EAAMC,EAAYC,GAAO,IAAAC,EAAAjD,KAQrBgB,EAAQ,CACZ8B,OACAI,MATYH,EAAWI,IAAI,SAACb,EAAOc,GACnC,MAAO,CACLd,QACAe,MAAOJ,EAAK/B,WAAWkC,EAAIH,EAAK/B,WAAWZ,WAO7C0C,QACAM,YAAaP,GAGf,OAAO/C,KAAKmB,GAAGoC,IAAIvC,GAAOe,KAAK,SAAAF,GAG7B,OAFAb,EAAMW,GAAKE,EAAIF,GACfO,QAAQC,IAAInB,GACLA,IACNoB,MAAM,SAAAjC,GACPkC,EAAW5B,SAASN,2CAKH,OAAfH,KAAKgB,OAGThB,KAAKmB,GAAGU,IAAI7B,KAAKgB,MAAMW,IAAI6B,IAAIxD,KAAKgB,OAAOe,KAAK,SAAA0B,GAC9CvB,QAAQC,IAAI,gCACXC,MAAM,SAAAjC,GACPkC,EAAW5B,SAASN,cAK1BI,YAASM,EAAY,CACnBG,MAAOR,IACPS,WAAYT,IACZsB,IAAKpB,IACLgD,eAAgBhD,IAChB6C,IAAK7C,MAIQ,IAAAiD,EAAA,IAAI9C,EAAWzB,GC7HxBwE,EAAc,cAEdC,aAKJ,SAAAA,IAAe/C,OAAAC,EAAA,EAAAD,CAAAd,KAAA6D,GAAA7D,KAJf8D,YAAc,GAIA9D,KAHd+D,YAAc,GAGA/D,KAFdgE,UAAW,EAGLC,aAAaC,QAAQN,KACvB5D,KAAK8D,YAAcG,aAAaC,QAAQN,yDAS1C5D,KAAK8D,YAAc,GACnB9D,KAAK+D,YAAc,GACnBE,aAAaE,WAAWP,0CAGXQ,GACbpE,KAAK8D,YAAcM,EACnBlC,QAAQC,IAAI,uBAAyBnC,KAAK8D,aAC1CG,aAAaI,QAAQT,EAAaQ,qDAGV,IAAArE,EAAAC,KACnBA,KAAKsE,aAGVtE,KAAKgE,UAAW,EAChBO,EAAWb,eAAe1D,KAAK8D,aAC5B/B,KAAK,SAAAY,GACJT,QAAQC,IAAIQ,GACZ5C,EAAKgE,YAAcpB,EAAOQ,IAAI,SAAAnC,GAC5B,MAAO,CACLW,GAAIX,EAAMW,GACVmB,KAAM9B,EAAM8B,QAGhB/C,EAAKiE,UAAW,IACf5B,MAAM,SAAAjC,GACP+B,QAAQC,IAAIhC,GACZJ,EAAKiE,UAAW,wCAhCpB,MAA4B,KAArBhE,KAAK8D,qBAqChBvD,YAASsD,EAAW,CAClBC,YAAatD,IACbuD,YAAavD,IACb0C,MAAO1C,IACPwD,SAAUxD,IACV8D,WAAY1D,IACZ4D,eAAgB9D,IAChB+D,sBAAuB/D,MAGV,IAAAgE,EAAA,IAAIb,EC3CJc,EAjBY,SAAAC,GAAuC,IAAzBC,EAAyBD,EAApCE,UAAyBC,EAAWjE,OAAAkE,EAAA,EAAAlE,CAAA8D,EAAA,eAChE,OACEK,EAAAC,EAAAC,cAACC,EAAA,EAADtE,OAAAuE,OAAA,GACMN,EADN,CAEEO,OAAQ,SAAAC,GAAK,OACXC,EAAUlB,WACRW,EAAAC,EAAAC,cAACN,EAAcU,GAEfN,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACEC,GAAI,mBAAqBH,EAAMI,SAASC,qDCJrCC,SANY,SAACN,GAC1B,OACEN,EAAAC,EAAAC,cAAA,SAAArE,OAAAuE,OAAA,CAAQS,UAAU,iCAAoCP,GAASA,EAAMQ,YCM1DC,EARA,SAACT,GACd,IAAIU,EAAY,GAEhB,OADIV,GAASA,EAAMU,YAAWA,EAAYV,EAAMU,WAE9ChB,EAAAC,EAAAC,cAAA,SAAArE,OAAAuE,OAAA,CAAQS,UAAS,UAAAI,OAAYD,IAAiBV,GAAUA,EAAMQ,WC4BnDI,SAzBFC,YAAQ,SAAAC,GAAA,SAAAF,IAAA,OAAArF,OAAAC,EAAA,EAAAD,CAAAd,KAAAmG,GAAArF,OAAAwF,EAAA,EAAAxF,CAAAd,KAAAc,OAAAyF,EAAA,EAAAzF,CAAAqF,GAAAK,MAAAxG,KAAAyG,YAAA,OAAA3F,OAAA4F,EAAA,EAAA5F,CAAAqF,EAAAE,GAAAvF,OAAA6F,EAAA,EAAA7F,CAAAqF,EAAA,EAAAS,IAAA,gBAAAC,MAAA,WAEjB,IAAIC,EAAOC,SAASC,eAAe,WACnCF,EAAKG,MAAMC,KAAO,OAClBJ,EAAKG,MAAME,QAAU,IAJJ,CAAAP,IAAA,SAAAC,MAAA,WAQjB,OACE5B,EAAAC,EAAAC,cAAA,OAAKW,UAAU,QACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,aACbb,EAAAC,EAAAC,cAAA,OAAKxD,GAAG,WACNsD,EAAAC,EAAAC,cAAA,MAAIW,UAAU,kBAAd,sBACAb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,qBAAd,gCACAb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,oBACbb,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAM1B,GAAG,QAAOT,EAAAC,EAAAC,cAACkC,EAAD,CAAoBC,QAAStH,KAAKuH,eAAlC,sBAChBtC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAM1B,GAAIF,EAAUlB,WAAa,UAAY,UAAUW,EAAAC,EAAAC,cAACqC,EAAD,KAAShC,EAAUlB,WAAa,cAAgB,kBAhBhG6B,EAAA,CAAoBtB,eCD1B4C,SAND,SAAClC,GACb,OACEN,EAAAC,EAAAC,cAAA,QAAArE,OAAAuE,OAAA,CAAOS,UAAU,SAAYP,GAAUA,EAAMQ,YCwGlC2B,qBApGb,SAAAA,EAAYnC,GAAO,IAAAxF,EAAA,OAAAe,OAAAC,EAAA,EAAAD,CAAAd,KAAA0H,IACjB3H,EAAAe,OAAAwF,EAAA,EAAAxF,CAAAd,KAAAc,OAAAyF,EAAA,EAAAzF,CAAA4G,GAAAC,KAAA3H,KAAMuF,KAQRqC,SAAW,SAACC,EAAcC,GAAf,OAA6B,SAAAC,GACtC,IAAIC,EAAW,CAAEC,KAAMH,GACH,cAAhBD,IACFG,EAASE,UAAYnB,SAASC,eAAe,oBAAoBH,OAEnE9G,EAAKoI,SAASH,KAdGjI,EAiBnBqI,YAAc,WACZ,IAAIC,EAAYtI,EAAKuI,MAAMD,UACvBE,EAAe,CACjBzF,KAAMiE,SAASC,eAAe,uBAAuBH,MACrDvE,MAAOyE,SAASC,eAAe,wBAAwBH,OAEzDwB,EAAUjI,KAAKmI,GACfxB,SAASC,eAAe,uBAAuBH,MAAQ,GACvDE,SAASC,eAAe,wBAAwBH,MAAQ,GACxD9G,EAAKoI,SAAS,CAAEE,UAAWA,KA1BVtI,EA6BnByI,WAAa,SAAAC,GAAE,OAAI,SAAAV,GACjB7F,QAAQC,IAAI,cAAe4F,EAAEnB,KACf,UAAVmB,EAAEnB,MACJ1E,QAAQC,IAAI,OAAQsG,GACpBA,OA/BF1I,EAAKuI,MAAQ,CACXL,KAAM,aACNC,UAAW,GACXG,UAAW,IALItI,gFAsCjB,IAAI2I,EACAL,EAAYrI,KAAKsI,MAAMD,UA8C3B,MA5CuB,cAAnBrI,KAAKsI,MAAML,KACbS,EACEzD,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mBACbb,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAACwD,EAAD,CAAOhH,GAAG,mBAAmBiH,YAAY,aACvCJ,WAAYxI,KAAKwI,WAAWxI,KAAK4H,SAAS,aAAc,gBAE1D3C,EAAAC,EAAAC,cAACqC,EAAD,CACEvB,UAAU,eACVqB,QAAStH,KAAK4H,SAAS,aAAc,gBAIf,aAAnB5H,KAAKsI,MAAML,OACpBS,EACEzD,EAAAC,EAAAC,cAAA,OAAKW,UAAU,kBACbb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,cAAc9F,KAAKsI,MAAMJ,WACvCjD,EAAAC,EAAAC,cAAA,iDACCkD,EAAUlF,IAAI,SAAS0F,EAAUC,GAChC,OAAO7D,EAAAC,EAAAC,cAAA,OAAKyB,IAAKkC,GAAQD,EAAS/F,QAEpCmC,EAAAC,EAAAC,cAACwD,EAAD,CAAOhH,GAAG,sBAAsBiH,YAAY,kBAC5C3D,EAAAC,EAAAC,cAACwD,EAAD,CAAOhH,GAAG,uBAAuBiH,YAAY,iBAC3CJ,WAAYxI,KAAKwI,WAxBbxI,KAwB8BoI,eAEpCnD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqC,EAAD,CACEvB,UAAU,eACVqB,QAAStH,KAAK4H,SAAS,YAAa,gBAEtC3C,EAAAC,EAAAC,cAACqC,EAAD,CACEvB,UAAU,yBACVqB,QAjCEtH,KAiCaoI,aAEd,IAJH,kBAOAnD,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAM1B,GAAI,CAAEE,SAAU,aAAc0C,MAAO,CAAEJ,UAAWlI,KAAKsI,MAAMJ,aACjEjD,EAAAC,EAAAC,cAACqC,EAAD,kCAMHkB,mCAIP,IAAIA,EAAc1I,KAAK+I,iBACvB,OACE9D,EAAAC,EAAAC,cAAA,OAAKW,UAAU,QACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,aACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,YAAY4C,YA9Fd7D,cCsERmE,cApEb,SAAAA,EAAYzD,GAAO,IAAAxF,EAAA,OAAAe,OAAAC,EAAA,EAAAD,CAAAd,KAAAgJ,IACjBjJ,EAAAe,OAAAwF,EAAA,EAAAxF,CAAAd,KAAAc,OAAAyF,EAAA,EAAAzF,CAAAkI,GAAArB,KAAA3H,KAAMuF,KAOR0D,SAAW,WACT,IAAIC,EAASnJ,EAAKuI,MAAMY,OACpBC,EAAY,CACdrG,KAAMiE,SAASC,eAAe,oBAAoBH,MAClDuC,YAAarC,SAASC,eAAe,qBAAqBH,MAC1DwC,UAAWtC,SAASC,eAAe,yBAAyBH,OAE9DqC,EAAO9I,KAAK+I,GACZpC,SAASC,eAAe,oBAAoBH,MAAQ,GACpDE,SAASC,eAAe,qBAAqBH,MAAQ,GACrDE,SAASC,eAAe,yBAAyBH,MAAQ,QACzD9G,EAAKoI,SAAS,CAACe,OAAQA,KAjBvBnJ,EAAKuI,MAAQ,CACXY,OAAQ,IAEVnJ,EAAKuI,MAAMJ,UAAY3C,EAAMI,SAAS2C,MAAMJ,UAL3BnI,gFAuBjB,IACImJ,EAASlJ,KAAKsI,MAAMY,OA2BxB,OAvBAjE,EAAAC,EAAAC,cAAA,OAAKW,UAAU,kBACbb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,cAAc9F,KAAKsI,MAAMJ,WACvCjD,EAAAC,EAAAC,cAAA,kDAEE+D,EAAO/F,IAAI,SAASmG,EAAOR,GACzB,OAAO7D,EAAAC,EAAAC,cAAA,OAAKyB,IAAKkC,GAAQQ,EAAMxG,KAAxB,MAAiCwG,EAAMD,aAGlDpE,EAAAC,EAAAC,cAACwD,EAAD,CAAOhH,GAAG,mBAAmBiH,YAAY,eACzC3D,EAAAC,EAAAC,cAACwD,EAAD,CAAOhH,GAAG,oBAAoBiH,YAAY,sBAC1C3D,EAAAC,EAAAC,cAAA,OAAK8B,MAAO,CAACsC,WAAY,SAAzB,aAA6C,IAC3CtE,EAAAC,EAAAC,cAAA,UAAQxD,GAAG,wBAAwB6H,aAAa,SAC5CvE,EAAAC,EAAAC,cAAA,UAAQ0B,MAAM,SAAd,SACA5B,EAAAC,EAAAC,cAAA,UAAQ0B,MAAM,UAAd,UACA5B,EAAAC,EAAAC,cAAA,UAAQ0B,MAAM,YAAd,cAGN5B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqC,EAAD,CAAQvB,UAAU,yBAAyBqB,QArBnCtH,KAqBkDiJ,UAA1D,gBACAhE,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAM1B,GAAG,WAAUT,EAAAC,EAAAC,cAACqC,EAAD,+DAQvB,IAAIkB,EAAc1I,KAAK+I,iBACvB,OACE9D,EAAAC,EAAAC,cAAA,OAAKW,UAAU,QACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,aACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,YACZ4C,YA7DW7D,8BCQT4E,eAdQ,SAAA7E,GAAqB,IAAlB9B,EAAkB8B,EAAlB9B,KAAMO,EAAYuB,EAAZvB,MACxBqG,EAAQ5G,EAAK6G,MAAM,KACrBC,EAAWF,EAAM,GAAG,GAKxB,OAJI,EAAIA,EAAMpJ,SACZsJ,GAAYF,EAAM,GAAG,IAIrBzE,EAAAC,EAAAC,cAAA,KAAG8B,MAAO,CAAC4C,gBAAiBxG,GAAQyC,UAAU,mBAC3C8D,KCJDE,EAAgB,CACpBC,MAAS,QACTC,OAAU,YACVC,SAAY,wBACZC,QAAW,aACXC,YAAa,YACbC,YAAa,aAkCAhE,cA/BE,SAAAxB,GAAsB,IAAnB5B,EAAmB4B,EAAnB5B,MAAOqH,EAAYzF,EAAZyF,MACzB,GAAqB,IAAjBrH,EAAM1C,OACR,OAAO,KAET,IAAMgK,EAAQtH,EAAMG,IAAI,SAAAoH,GACtB,IAAMnG,EAAOG,EAAWvD,MAAMkC,MAAMqH,EAAKC,aAAa,IACtD,OACEvF,EAAAC,EAAAC,cAAA,MAAIyB,IAAK2D,EAAK5I,GAAImE,UAAU,kBAC1Bb,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,QAAMW,UAAU,mBAAkBb,EAAAC,EAAAC,cAAA,KAAGW,UAAU,yBAC9CyE,EAAKzH,KACNmC,EAAAC,EAAAC,cAAA,QAAMW,UAAU,mBACdb,EAAAC,EAAAC,cAACsF,EAAD,CAAgB3H,KAAMsB,EAAKtB,KAAMO,MAAOe,EAAKf,QAC7C4B,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAMtB,UAAU,yBAAyBJ,GAAI,WAAanB,EAAWvD,MAAMW,GAAK,UAAY4I,EAAK5I,IAAIsD,EAAAC,EAAAC,cAAA,KAAGW,UAAU,6BAM5H,OACEb,EAAAC,EAAAC,cAAA,WAASW,UAAU,aACjBb,EAAAC,EAAAC,cAAA,UAAQW,UAAU,mBACfgE,EAAcO,GAASP,EAAcO,GAASA,GAEjDpF,EAAAC,EAAAC,cAAA,MAAIW,UAAU,kBACXwE,MCxBMI,SAVDtE,YAAQ,SAAAC,GAAA,SAAAqE,IAAA,OAAA5J,OAAAC,EAAA,EAAAD,CAAAd,KAAA0K,GAAA5J,OAAAwF,EAAA,EAAAxF,CAAAd,KAAAc,OAAAyF,EAAA,EAAAzF,CAAA4J,GAAAlE,MAAAxG,KAAAyG,YAAA,OAAA3F,OAAA4F,EAAA,EAAA5F,CAAA4J,EAAArE,GAAAvF,OAAA6F,EAAA,EAAA7F,CAAA4J,EAAA,EAAA9D,IAAA,SAAAC,MAAA,WAElB,OACE5B,EAAAC,EAAAC,cAAA,OAAKxD,GAAI3B,KAAKuF,MAAM5D,GAAImE,UAAU,SAC/B9F,KAAKuF,MAAMoF,eAJED,EAAA,CAAqB7F,eC8C5B+F,UA5CK,SAAAhG,GAAwB,IAArB2F,EAAqB3F,EAArB2F,KAAMM,EAAejG,EAAfiG,SACrBC,EAAQP,EAAKC,aAAarH,IAAI,SAAAb,GAClC,IAAM8B,EAAOG,EAAWvD,MAAMkC,MAAMZ,GACpC,OACE2C,EAAAC,EAAAC,cAAA,MAAIyB,IAAKtE,EAAOwD,UAAU,2BACxBb,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACsF,EAAD,CAAgB3H,KAAMsB,EAAKtB,KAAMO,MAAOe,EAAKf,MAAO4D,MAAO,CAAC8D,QAAS,YAAc3G,EAAKtB,SAWpG,OACEmC,EAAAC,EAAAC,cAAA,WAASW,UAAU,qBACjBb,EAAAC,EAAAC,cAAC6F,EAAD,CAAOrJ,GAAI4I,EAAKzH,KAAM6H,UAAWJ,EAAKzH,KAAK,aAC3CmC,EAAAC,EAAAC,cAAA,OAAKW,UAAU,wBACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,sBACbb,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAMtB,UAAU,4BAA4BJ,GAAImF,GAAhD,MAEF5F,EAAAC,EAAAC,cAAA,UAAQW,UAAU,0BAChBb,EAAAC,EAAAC,cAAA,UAAKoF,EAAKzH,OAEZmC,EAAAC,EAAAC,cAAA,KAAGW,UAAU,0BACVyE,EAAKnB,aAGRnE,EAAAC,EAAAC,cAAA,MAAIW,UAAU,sBACXgF,GAEFtF,EAAU1B,aAAeyG,EAAKC,aAAa,GACzCvF,EAAAC,EAAAC,cAACkC,EAAD,CAAoBC,QAxBN,WACrBP,SAASC,eAAeuD,EAAKzH,MAAMmE,MAAMgE,IAAM,EAC/CV,EAAKC,aAAapK,KAAKmK,EAAKC,aAAaU,SACzChL,WAAW,WAAK6G,SAASC,eAAeuD,EAAKzH,MAAMmE,MAAMgE,IAAM,SAAW,OAqBnE,iBAED,0BCtBKE,UAhBA,WACb,OACElG,EAAAC,EAAAC,cAACiG,EAAA,KAAD,KACEnG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAASC,OAAK,EAACxF,UAAU,OAAOJ,GAAI,KAApC,QAGAT,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAASC,OAAK,EAACxF,UAAU,OAAOJ,GAAI,WAApC,UAGAT,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAASC,OAAK,EAACxF,UAAU,OAAOJ,GAAI,IAAK4B,QAAS,WAAO9B,EAAU+F,WAAnE,aCVSC,UAJQ,SAAAjG,GACrB,OAAON,EAAAC,EAAAC,cAAA,UAAQW,UAAU,gBAAlB,OC8EM2F,UAnECrF,YAAQ,SAAAC,GAAA,SAAAoF,IAAA,OAAA3K,OAAAC,EAAA,EAAAD,CAAAd,KAAAyL,GAAA3K,OAAAwF,EAAA,EAAAxF,CAAAd,KAAAc,OAAAyF,EAAA,EAAAzF,CAAA2K,GAAAjF,MAAAxG,KAAAyG,YAAA,OAAA3F,OAAA4F,EAAA,EAAA5F,CAAA2K,EAAApF,GAAAvF,OAAA6F,EAAA,EAAA7F,CAAA2K,EAAA,EAAA7E,IAAA,oBAAAC,MAAA,WAEpB,IAAM6E,EAAU1L,KAAKuF,MAAMoG,MAAMC,OAAO5K,MACxCuD,EAAWzC,IAAI4J,KAHK,CAAA9E,IAAA,SAAAC,MAAA,WAMb,IAAA9G,EAAAC,KACH6L,EAAW5G,EAAAC,EAAAC,cAAC2G,EAAA5G,EAAD,CAASY,UAAU,SAAShD,KAAK,kBAC1C4I,EAAU1L,KAAKuF,MAAMoG,MAAMC,OAAO5K,MACxC,IAAKuD,EAAWtD,WAAY,CAC1B,IAAI8K,EACE/I,EAAQuB,EAAWvD,MAAMgC,MAAMgJ,OAAO,SAACC,EAAG1B,GAa9C,OAZIxK,EAAKwF,MAAMoG,MAAMC,OAAOjK,IACtB4I,EAAK5I,KAAO5B,EAAKwF,MAAMoG,MAAMC,OAAOjK,KACtCoK,EAAcxB,GAIdA,EAAKC,aAAa,KAAOhF,EAAU1B,YACrCmI,EAAE1B,EAAK2B,UAAU9L,KAAKmK,GACb,EAAIA,EAAKC,aAAalK,QAAUiK,EAAKC,aAAa,KAAOhF,EAAU1B,aAC5EmI,EAAE,aAAa7L,KAAKmK,GAGf0B,GACN,CACDlC,MAAS,GACTC,OAAU,GACVC,SAAY,GACZC,QAAW,GACXC,YAAa,GACbC,YAAa,KAGT+B,EAAQrL,OAAOsL,QAAQpJ,GAAOG,IAAI,SAAAkJ,GACtC,OAAQpH,EAAAC,EAAAC,cAACmH,EAAD,CAAU1F,IAAKyF,EAAG,GAAIhC,MAAOgC,EAAG,GAAIrJ,MAAOqJ,EAAG,OAGxDR,EACE5G,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIW,UAAU,UAAUvB,EAAWvD,MAAM8B,MACvCmC,EAAAC,EAAAC,cAAA,MAAIW,UAAU,UAAd,YAEAb,EAAAC,EAAAC,cAAA,WAASW,UAAU,oBACjBb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,kBACZqG,GAEFJ,GAAgB9G,EAAAC,EAAAC,cAACoH,EAAD,CAAahC,KAAMwB,EAAalB,SAAU,WAAaa,EAAU,aAM5F,OACEzG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqH,EAAD,MACAvH,EAAAC,EAAAC,cAAA,OAAKW,UAAU,WACZ+F,GAEH5G,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAM1B,GAAI,WAAagG,EAAU,aAC/BzG,EAAAC,EAAAC,cAACsH,EAAD,YA5DchB,EAAA,CAAuB5G,uBCyDhC6H,EA5DDtG,YAAQ,SAAAC,GAEpB,SAAAqG,EAAYnH,GAAO,IAAAxF,EAAA,OAAAe,OAAAC,EAAA,EAAAD,CAAAd,KAAA0M,IACjB3M,EAAAe,OAAAwF,EAAA,EAAAxF,CAAAd,KAAAc,OAAAyF,EAAA,EAAAzF,CAAA4L,GAAA/E,KAAA3H,KAAMuF,KAFRoH,QAAU,wJAGR5M,EAAKuI,MAAQ,CACXhG,MAAO,GACPsK,OAAQ,IAGV7M,EAAKyI,WAAazI,EAAKyI,WAAWqE,KAAhB/L,OAAAgM,EAAA,EAAAhM,QAAAgM,EAAA,EAAAhM,CAAAf,KAClBA,EAAKgN,aAAehN,EAAKgN,aAAaF,KAAlB/L,OAAAgM,EAAA,EAAAhM,QAAAgM,EAAA,EAAAhM,CAAAf,KACpBA,EAAKiN,aAAejN,EAAKiN,aAAaH,KAAlB/L,OAAAgM,EAAA,EAAAhM,QAAAgM,EAAA,EAAAhM,CAAAf,KATHA,EAFC,OAAAe,OAAA4F,EAAA,EAAA5F,CAAA4L,EAAArG,GAAAvF,OAAA6F,EAAA,EAAA7F,CAAA4L,EAAA,EAAA9F,IAAA,aAAAC,MAAA,SAcTkB,GACK,UAAVA,EAAEnB,KACJ5G,KAAKgN,iBAhBW,CAAApG,IAAA,eAAAC,MAAA,SAoBPkB,GACX/H,KAAKmI,SAAS,CACZ7F,MAAOyF,EAAEkF,OAAOpG,MAChB+F,OAAQ,OAvBQ,CAAAhG,IAAA,eAAAC,MAAA,WA4BlB,GAAI7G,KAAKsI,MAAMhG,MAAM4K,QAAUlN,KAAK2M,QAAQQ,KAAKnN,KAAKsI,MAAMhG,OAAQ,CAClEkD,EAAUhB,eAAexE,KAAKsI,MAAMhG,OACpC,IAAIsJ,EAAS,IAAIwB,gBAAgBpN,KAAKuF,MAAMI,SAAS0H,QAC/CC,EAAO1B,EAAO9J,IAAI,YAAc8J,EAAO9J,IAAI,YAAc,UAC/D9B,KAAKuF,MAAMgI,QAAQnN,KAAKkN,QAExBtN,KAAKmI,SAAS,CACZ7F,MAAOtC,KAAKsI,MAAMhG,MAClBsK,OAAQ,CACNY,aAAc,yBArCF,CAAA5G,IAAA,SAAAC,MAAA,WA4ClB,OACE5B,EAAAC,EAAAC,cAAA,OAAKW,UAAU,QACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,aACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,YACfb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mBACbb,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAACwD,EAAD,CAAOhH,GAAG,mBAAmBsF,MAAOjH,KAAKsI,MAAMsE,OAAQhE,YAAY,QAAQ/B,MAAO7G,KAAKsI,MAAMzB,MAAO4G,SAAUzN,KAAK+M,aAAcvE,WAAYxI,KAAKwI,aAClJvD,EAAAC,EAAAC,cAACqC,EAAD,CAAQvB,UAAU,eAAeqB,QAAStH,KAAKgN,uBAnDrCN,EAAA,CAAqB7H,cCgD5B6I,sBAnDb,SAAAA,EAAYnI,GAAO,IAAAxF,EAAA,OAAAe,OAAAC,EAAA,EAAAD,CAAAd,KAAA0N,IACjB3N,EAAAe,OAAAwF,EAAA,EAAAxF,CAAAd,KAAAc,OAAAyF,EAAA,EAAAzF,CAAA4M,GAAA/F,KAAA3H,KAAMuF,KAMR0D,SAAW,WAETlJ,EAAKoI,SAAS,CAAEwF,UAAU,IAC1BzL,QAAQC,IAAIpC,EAAKuI,MAAMqF,WAVN5N,EAanB6N,eAAiB,WACf,GAAI7N,EAAKuI,MAAMqF,SACb,OAAO1I,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAUC,GAAG,YAbtB3F,EAAKuI,MAAQ,CACXqF,UAAU,GAHK5N,wEAoBjB,OACEkF,EAAAC,EAAAC,cAAA,WACGnF,KAAK4N,iBACN3I,EAAAC,EAAAC,cAACqH,EAAD,MACAvH,EAAAC,EAAAC,cAAA,OAAKW,UAAU,2BACbb,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACwD,EAAD,CAAOhH,GAAG,eAAeiH,YAAY,eACrC3D,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YACEW,UAAU,aACVnE,GAAG,eACHiH,YAAY,sBAEd3D,EAAAC,EAAAC,cAAA,WAVF,aAWa,IACXF,EAAAC,EAAAC,cAAA,UAAQxD,GAAG,eAAe6H,aAAa,SACrCvE,EAAAC,EAAAC,cAAA,UAAQ0B,MAAM,SAAd,SACA5B,EAAAC,EAAAC,cAAA,UAAQ0B,MAAM,UAAd,UACA5B,EAAAC,EAAAC,cAAA,UAAQ0B,MAAM,YAAd,aAEF5B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACqC,EAAD,CAAQvB,UAAU,GAAGqB,QAAStH,KAAKiJ,UAAnC,sBA3CapE,cC8CRgJ,EA5CGzH,YAAQ,SAAAC,GACxB,SAAAwH,EAAYtI,GAAO,IAAAxF,EAAA,OAAAe,OAAAC,EAAA,EAAAD,CAAAd,KAAA6N,GACjB9N,EAAAe,OAAAwF,EAAA,EAAAxF,CAAAd,KAAAc,OAAAyF,EAAA,EAAAzF,CAAA+M,GAAAlG,KAAA3H,KAAMuF,IACNC,EAAUsI,0BAFO/N,EADK,OAAAe,OAAA4F,EAAA,EAAA5F,CAAA+M,EAAAxH,GAAAvF,OAAA6F,EAAA,EAAA7F,CAAA+M,EAAA,EAAAjH,IAAA,SAAAC,MAAA,WAOtB,IAAIgF,EACF5G,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2G,EAAA5G,EAAD,CAASpC,KAAK,mBAIlB,IAAK0C,EAAUxB,SAAU,CACvB,IAAMrB,EAAS6C,EAAUzB,YAAYZ,IAAI,SAAAnC,GACvC,OACEiE,EAAAC,EAAAC,cAAA,MAAIyB,IAAK5F,EAAMW,IACbsD,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAM1B,GAAI,WAAa1E,EAAMW,GAAK,UAAWX,EAAM8B,SAIzD+I,EACE5G,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,UACGxC,IAKT,OACEsC,EAAAC,EAAAC,cAAA,OAAKW,UAAU,QACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,aACbb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,YACfb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mBACZ+F,UAnCagC,EAAA,CAAyBhJ,cCmBpCkJ,UAfH,kBACV9I,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAQC,SAAUC,WAChBjJ,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO+I,KAAK,IAAI7C,OAAK,EAACxG,UAAWqB,IACjClB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO+I,KAAK,SAAS7C,OAAK,EAACxG,UAAW4H,IACtCzH,EAAAC,EAAAC,cAACiJ,EAAD,CAAoBD,KAAK,OAAO7C,OAAK,EAACxG,UAAW4C,IACjDzC,EAAAC,EAAAC,cAACiJ,EAAD,CAAoBD,KAAK,aAAa7C,OAAK,EAACxG,UAAWuJ,IACvDpJ,EAAAC,EAAAC,cAACiJ,EAAD,CAAoBD,KAAK,UAAU7C,OAAK,EAACxG,UAAW+I,IACpD5I,EAAAC,EAAAC,cAACiJ,EAAD,CAAoBD,KAAK,uBAAuB7C,OAAK,EAACxG,UAAW2G,IACjExG,EAAAC,EAAAC,cAACiJ,EAAD,CAAoBD,KAAK,2BAA2B7C,OAAK,EAACxG,UAAW2G,IACrExG,EAAAC,EAAAC,cAACiJ,EAAD,CAAoBD,KAAK,0BAA0B7C,OAAK,EAACxG,UAAW4I,QCbtDY,QACW,cAA7BC,OAAO5I,SAAS6I,UAEe,UAA7BD,OAAO5I,SAAS6I,UAEhBD,OAAO5I,SAAS6I,SAAS7C,MACvB,2DCZN8C,IAASnJ,OAAOL,EAAAC,EAAAC,cAACuJ,EAAD,MAAS3H,SAASC,eAAe,SDuH3C,kBAAmB2H,WACrBA,UAAUC,cAAcC,MAAM9M,KAAK,SAAA+M,GACjCA,EAAaC","file":"static/js/main.69c2666d.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyAZnwch_QKuS6OPefMuAoUtEQd_ppiaa50\",\n  authDomain: \"churro-126ca.firebaseapp.com\",\n  databaseURL: \"https://churro-126ca.firebaseio.com\",\n  projectId: \"churro-126ca\",\n  storageBucket: \"\",\n  messagingSenderId: \"285905994423\"\n});\n\nexport default firebase;\n\n","import { observable, computed, decorate, action } from 'mobx'\n\nclass ErrorStore {\n  errors = [];\n  timeoutFn = null;\n\n  waitAndClear() {\n    if (this.timeoutFn !== null) {\n      clearTimeout(this.timeoutFn);\n    }\n    this.timeoutFn = setTimeout(() => {\n     this.errors = []; \n     this.timeoutFn = null;\n    }, 5000);\n  }\n\n  clear() {\n    this.errors = [];\n  }\n\n  addError(err) {\n    this.errors.push(err);\n    this.waitAndClear();\n  }\n\n  get hasErrors() {\n    return 0 < this.errors.length;\n  }\n}\n\ndecorate(ErrorStore, {\n  errors: observable,\n  addError: action,\n  hasErrors: computed\n});\n\nexport default new ErrorStore();","import { observable, decorate, action, autorun } from 'mobx'\n\nimport firebase from '../Firebase';\nimport errorStore from './errors';\n\nclass GroupStore {\n  group = null;\n  isFetching = true;\n\n  userColors = [\n    'tomato',\n    'plum',\n    'teal',\n    'turquoise',\n    'forestGreen',\n    'fireBrick',\n    'MediumVioletRed',\n    'DarkOrange',\n    'gold',\n    'SlateBlue',\n    'CadetBlue',\n    'Navy',\n    'DarkSlateGray',\n    'LightSlateGray'\n  ]\n\n  constructor(firebase) {\n    // Initialize Cloud Firestore through Firebase\n    var db = firebase.firestore();\n\n    // Disable deprecated features\n    db.settings({\n      timestampsInSnapshots: true\n    });\n    this.db = db.collection('groups');\n    autorun(() => this.updateGroup(), { delay: 300 });\n  }\n\n  get(id) {\n    if (this.group !== null && this.group.id === id) {\n      return;\n    }\n\n    this.isFetching = true;\n    return this.db.doc(id).get().then((doc) => {\n      if (!doc.exists) {\n        console.log('No group with id of ' + id);\n        return;\n      }\n\n      this.group = doc.data();\n      this.group.id = id;\n      this.isFetching = false;\n      return this.group;\n    }).catch(err => {\n      this.isFetching = false;\n      errorStore.addError(err);\n    })\n  }\n\n  getUsersGroups(email) {\n    console.log(email);\n    return this.db.where('user_emails', 'array-contains', email).get().then((docs) => {\n      if (docs.empty) {\n        console.log('User has no groups with email ' + email);\n        return;\n      }\n\n      let groups = [];\n      docs.forEach(doc => {\n        const group = doc.data();\n        let item =  {\n          id: doc.id,\n          name: group.name\n        }\n        groups.push(item);\n      });\n      return groups;\n    }).catch(err => {\n      this.isFetching = false;\n      errorStore.addError(err);\n    });\n  }\n\n  add(name, userEmails, tasks) {\n    const users = userEmails.map((email, idx) => {\n      return {\n        email,\n        color: this.userColors[idx%this.userColors.length]\n      }\n    });\n    \n    const group = {\n      name,\n      users,\n      tasks,\n      user_emails: userEmails,\n    }\n\n    return this.db.add(group).then(doc => {\n      group.id = doc.id;\n      console.log(group);\n      return group;\n    }).catch(err => {\n      errorStore.addError(err);\n    });\n  }\n\n  updateGroup() {\n    if (this.group === null) {\n      return;\n    }\n    this.db.doc(this.group.id).set(this.group).then(res => {\n      console.log('Successfully updated group');\n    }).catch(err => {\n      errorStore.addError(err);\n    })\n  }\n}\n\ndecorate(GroupStore, {\n  group: observable,\n  isFetching: observable,\n  get: action,\n  getUsersGroups: action,\n  add: action,\n})\n\n\nexport default new GroupStore(firebase);","import { observable, computed, decorate, action } from 'mobx'\n\nimport groupStore from './groups';\n\nconst STORAGE_KEY = 'churro-user';\n\nclass UserStore {\n  currentUser = '';\n  usersGroups = [];\n  fetching = false;\n\n  constructor() {\n    if (localStorage.getItem(STORAGE_KEY)) {\n      this.currentUser = localStorage.getItem(STORAGE_KEY);\n    }\n  }\n\n  get isLoggedIn() {\n    return this.currentUser !== '';\n  }\n\n  logout() {\n    this.currentUser = '';\n    this.usersGroups = [];\n    localStorage.removeItem(STORAGE_KEY);\n  }\n\n  setCurrentUser(user) {\n    this.currentUser = user;\n    console.log('Set current user to ' + this.currentUser);\n    localStorage.setItem(STORAGE_KEY, user);\n  }\n\n  fetchCurrentUsersGroups() {\n    if (!this.isLoggedIn) {\n      return;\n    }\n    this.fetching = true;\n    groupStore.getUsersGroups(this.currentUser)\n      .then(groups => {\n        console.log(groups);\n        this.usersGroups = groups.map(group => { \n          return {\n            id: group.id, \n            name: group.name\n          }\n        });\n        this.fetching = false;\n      }).catch(err => {\n        console.log(err);\n        this.fetching = false;\n      });\n  }\n}\n\ndecorate(UserStore, {\n  currentUser: observable,\n  usersGroups: observable, \n  users: observable, \n  fetching: observable, \n  isLoggedIn: computed,\n  setCurrentUser: action,\n  getCurrentUsersGroups: action,\n});\n\nexport default new UserStore();","import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport userStore from '../stores/users';\n\nconst AuthenticatedRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        userStore.isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={\"/login?redirect=\" + props.location.pathname}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default AuthenticatedRoute;","import React from 'react';\n\nimport '../styles/Button.scss';\n\nconst CallToActionButton = (props) => {\n  return (\n    <button className=\"button button--call-to-action\" {...props}>{ props.children }</button>\n  )\n}\n\nexport default CallToActionButton;\n","import React from 'react';\n\nimport '../styles/Button.scss';\n\nconst Button = (props) => {\n  let stylename = '';\n  if (props && props.stylename) stylename = props.stylename;\n  return (\n    <button className={`button ${stylename}`} {...props} >{ props.children }</button>\n  )\n}\n\nexport default Button;\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\";\n\nimport CallToActionButton from './CallToActionButton';\nimport Button from './Button';\n\nimport userStore from '../stores/users';\n\nimport '../styles/Main.scss';\n\nconst Main = observer(class Main extends Component {\n  transitionOut() {\n    let elem = document.getElementById('landing');\n    elem.style.left = \"-10%\";\n    elem.style.opacity = 0;\n  }\n\n  render() {\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <div id=\"landing\">\n            <h2 className=\"welcome-header\">Welcome to Churro!</h2>\n            <h4 className=\"welcome-subheader\">The New Way to Manage Chores</h4>\n            <div className=\"button-container\">\n              <Link to=\"/new\"><CallToActionButton onClick={this.transitionOut}>START A NEW GROUP</CallToActionButton></Link>\n              <Link to={userStore.isLoggedIn ? \"/groups\" : \"/login\"}><Button>{userStore.isLoggedIn ? \"YOUR GROUPS\" : \"LOGIN\"}</Button></Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n});\n\nexport default Main;\n","import React from 'react';\n\nimport '../styles/Input.scss';\n\nconst Input = (props) => {\n  return (\n    <input className=\"input\" {...props} >{ props.children }</input>\n  )\n}\n\nexport default Input;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Button from \"./Button\";\nimport Input from \"./Input\";\n\nimport \"../styles/Main.scss\";\nimport \"../styles/NewGroup.scss\";\n\nclass NewGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      step: \"group-name\",\n      groupName: \"\",\n      roommates: []\n    };\n  }\n\n  formFlow = (current_step, next_step) => e => {\n    let newState = { step: next_step };\n    if (current_step == \"group-name\") {\n      newState.groupName = document.getElementById(\"group-name-input\").value;\n    }\n    this.setState(newState);\n  };\n\n  addRoommate = () => {\n    let roommates = this.state.roommates;\n    let new_roommate = {\n      name: document.getElementById(\"roommate-name-input\").value,\n      email: document.getElementById(\"roommate-email-input\").value\n    };\n    roommates.push(new_roommate);\n    document.getElementById(\"roommate-name-input\").value = \"\";\n    document.getElementById(\"roommate-email-input\").value = \"\";\n    this.setState({ roommates: roommates });\n  };\n\n  onKeyPress = fn => e => {\n    console.log('key pressed', e.key);\n    if (e.key === 'Enter') {\n      console.log('here', fn);\n      fn();\n    }\n  }\n\n  getFormElement() {\n    let formElement;\n    let roommates = this.state.roommates;\n    let _this = this;\n    if (this.state.step == \"group-name\") {\n      formElement = (\n        <div className=\"form group-name\">\n          <p>What is your group name?</p>\n          <Input id=\"group-name-input\" placeholder=\"Group Name\"\n            onKeyPress={this.onKeyPress(this.formFlow(\"group-name\", \"roommates\"))}\n          />\n          <Button\n            stylename=\"button--next\"\n            onClick={this.formFlow(\"group-name\", \"roommates\")}\n          />\n        </div>\n      );\n    } else if (this.state.step == \"roommates\") {\n      formElement = (\n        <div className=\"form roommates\">\n          <h4 className=\"form-title\">{this.state.groupName}</h4>\n          <p>Who are the roommates in this group?</p>\n          {roommates.map(function(roommate, index) {\n            return <div key={index}>{roommate.name}</div>;\n          })}\n          <Input id=\"roommate-name-input\" placeholder=\"Roommate Name\" />\n          <Input id=\"roommate-email-input\" placeholder=\"Roommate Email\" \n            onKeyPress={this.onKeyPress(_this.addRoommate)}\n          />\n          <div>\n            <Button\n              stylename=\"button--back\"\n              onClick={this.formFlow(\"roommates\", \"group-name\")}\n            />\n            <Button\n              stylename=\"button--call-to-action\"\n              onClick={_this.addRoommate}\n            >\n              {\" \"}\n              Add Roommate +\n            </Button>\n            <Link to={{ pathname: '/newchores', state: { groupName: this.state.groupName} }}>\n              <Button>Added All Roommates ></Button>\n            </Link>\n          </div>\n        </div>\n      );\n    }\n    return formElement;\n  }\n\n  render() {\n    let formElement = this.getFormElement();\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <div className=\"NewGroup\">{formElement}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NewGroup;\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport CallToActionButton from './CallToActionButton';\nimport Button from './Button';\nimport Input from './Input';\n\nimport '../styles/Main.scss';\nimport '../styles/NewGroup.scss';\n\nclass NewChores extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chores: []\n    }\n    this.state.groupName = props.location.state.groupName;\n  }\n\n  addChore = () => {\n    let chores = this.state.chores;\n    let new_chore = {\n      name: document.getElementById('chore-name-input').value,\n      description: document.getElementById('chore-email-input').value,\n      frequency: document.getElementById('chore-frequency-input').value\n    }\n    chores.push(new_chore);\n    document.getElementById('chore-name-input').value = '';\n    document.getElementById('chore-email-input').value = '';\n    document.getElementById('chore-frequency-input').value = 'Daily';\n    this.setState({chores: chores});\n  }\n\n  getFormElement() {\n    let formElement;\n    let chores = this.state.chores;\n    let _this = this;\n    \n    formElement = \n    <div className=\"form roommates\">\n      <h4 className=\"form-title\">{this.state.groupName}</h4>\n      <p>What are the chores y'all have to do?</p>\n      {\n        chores.map(function(chore, index){\n          return <div key={index}>{chore.name} - {chore.frequency}</div>\n        })\n      }\n      <Input id=\"chore-name-input\" placeholder=\"Chore Name\"/>\n      <Input id=\"chore-email-input\" placeholder=\"Chore Description\"/>\n      <div style={{paddingTop: \"25px\"}}>Frequency:{\" \"}\n        <select id=\"chore-frequency-input\" defaultValue=\"daily\">\n            <option value=\"Daily\">Daily</option>\n            <option value=\"Weekly\">Weekly</option>\n            <option value=\"Biweekly\">Biweekly</option>\n        </select>\n      </div>\n      <div>\n        <Button stylename=\"button--call-to-action\" onClick={_this.addChore}> Add Chore +</Button>\n        <Link to='/groups'><Button>Added All Chores ></Button></Link>\n      </div>\n    </div>\n    \n    return formElement\n  }\n\n  render() {\n    let formElement = this.getFormElement()\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <div className=\"NewGroup\">\n            {formElement}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NewChores;\n","import React from 'react';\n\nimport '../styles/CircleInitials.scss'\n\nconst CircleInitials = ({ name, color }) => {\n  const parts = name.split(\" \");\n  let initials = parts[0][0];\n  if (1 < parts.length) {\n    initials += parts[1][0]; \n  }\n\n  return (\n    <p style={{backgroundColor: color}} className=\"circle-initials\">\n      {initials}\n    </p>\n  )\n}\n\nexport default CircleInitials;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\"\n\nimport groupStore from '../stores/groups';\n\nimport '../styles/TaskCard.scss'\nimport CircleInitials from './CircleInitials';\n\nconst titleMappings = {\n  \"Daily\": \"TODAY\",\n  \"Weekly\": \"THIS WEEK\",\n  \"Biweekly\": \"IN THE NEXT TWO WEEKS\",\n  \"Monthly\": \"THIS MONTH\",\n  \"As needed\": \"AS NEEDED\",\n  \"Coming up\": \"COMING UP\",\n}\n\nconst TaskCard = ({ tasks, title }) => {\n  if (tasks.length === 0) {\n    return null;\n  }\n  const items = tasks.map(task => {\n    const user = groupStore.group.users[task.currentQueue[0]];\n    return (\n      <li key={task.id} className=\"task-card-item\">\n        <span>\n          <span className=\"task-card-check\"><i className=\"far fa-check-circle\"></i></span>\n          {task.name} \n          <span className=\"task-card-right\">\n            <CircleInitials name={user.name} color={user.color} />\n            <Link className=\"task-card-focus-button\" to={\"/groups/\" + groupStore.group.id + \"/tasks/\" + task.id}><i className=\"fas fa-angle-right\"></i></Link>\n          </span>\n        </span>\n      </li>\n    )\n  })\n  return (\n    <section className=\"task-card\">\n      <header className=\"task-card-title\"> \n        {titleMappings[title] ? titleMappings[title] : title}\n      </header>\n      <ul className=\"task-card-list\">\n        {items}\n      </ul>\n    </section>\n  )\n}\n\nexport default observer(TaskCard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\"\n\nimport groupStore from '../stores/groups';\nimport userStore from '../stores/users';\n\nimport '../styles/Notif.scss';\n\nconst Notif = observer(class Notif extends Component {\n  render() {\n    return (\n      <div id={this.props.id} className=\"Notif\">\n        {this.props.notifText}\n      </div>\n    )\n  }\n});\n\nexport default Notif;","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport groupStore from '../stores/groups';\nimport userStore from '../stores/users';\nimport CircleInitials from './CircleInitials';\nimport CallToActionButton from './CallToActionButton';\nimport Notif from \"./Notif.js\";\n\nimport '../styles/FocusedTask.scss'\n\nconst FocusedTask = ({ task, closeURL }) => {\n  const queue = task.currentQueue.map(email => {\n    const user = groupStore.group.users[email];\n    return (\n      <li key={email} className=\"focused-task-queue-item\">\n        <span><CircleInitials name={user.name} color={user.color} style={{display: 'inline'}} />{user.name}</span>\n      </li>\n    )\n  })\n\n  const handleComplete = () => {\n    document.getElementById(task.name).style.top = 0;\n    task.currentQueue.push(task.currentQueue.shift());\n    setTimeout(()=>{document.getElementById(task.name).style.top = \"-50px\";}, 2000);\n  }\n\n  return (\n    <section className=\"focused-task-card\">\n      <Notif id={task.name} notifText={task.name+\" - Done!\"}/>\n      <div className=\"focused-task-content\">\n        <div className=\"focused-task-close\">\n          <Link className=\"focused-task-close-button\" to={closeURL}>x</Link>\n        </div>\n        <header className=\"focused-task-card-name\"> \n          <h2>{task.name}</h2>\n        </header>\n        <p className=\"focused-task-card-desc\">\n          {task.description}\n        </p>\n\n        <ul className=\"focused-task-queue\">\n          {queue}\n        </ul>\n        {userStore.currentUser == task.currentQueue[0] ?\n          (<CallToActionButton onClick={handleComplete}>COMPLETE TASK</CallToActionButton>)\n          :\n          null\n         }\n        \n      </div>\n    </section>\n  )\n}\n\nexport default FocusedTask;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { push as Menu } from \"react-burger-menu\";\n\nimport userStore from \"../stores/users\";\n\nimport \"../styles/NavBar.scss\";\n\n\nconst NavBar = () => {\n  return (\n    <Menu>\n      <NavLink exact className=\"link\" to={\"/\"}>\n        HOME\n      </NavLink>\n      <NavLink exact className=\"link\" to={\"/groups\"}>\n        GROUPS\n      </NavLink>\n      <NavLink exact className=\"link\" to={\"/\"} onClick={() => {userStore.logout()}}>\n        LOGOUT\n      </NavLink>\n    </Menu>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\n\nimport \"../styles/AddChoreButton.scss\";\n\nconst AddChoreButton = props => {\n  return <button className=\"chore-button\">+</button>;\n};\n\nexport default AddChoreButton;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react\"\nimport Spinner from 'react-spinkit';\n\nimport TaskCard from \"./TaskCard\";\nimport FocusedTask from \"./FocusedTask\";\nimport NavBar from \"./NavBar\";\nimport AddChoreButton from \"./AddChoreButton\";\nimport Notif from \"./Notif.js\";\n\nimport groupStore from '../stores/groups';\nimport userStore from '../stores/users';\n\nimport '../styles/MyTasks.scss';\n\nconst MyTasks = observer(class MyTasks extends Component {\n  componentDidMount() {\n    const groupID = this.props.match.params.group;\n    groupStore.get(groupID);\n  }\n\n  render() {\n    let content = (<Spinner className=\"center\" name='double-bounce' />);\n    const groupID = this.props.match.params.group;\n    if (!groupStore.isFetching) {\n      let focusedTask;\n      const tasks = groupStore.group.tasks.reduce((m, task) => {\n        if (this.props.match.params.id) {\n          if (task.id === this.props.match.params.id) {\n            focusedTask = task;\n          }\n        }\n\n        if (task.currentQueue[0] === userStore.currentUser) {\n          m[task.schedule].push(task);\n        } else if (1 < task.currentQueue.length && task.currentQueue[1] === userStore.currentUser) {\n          m[\"Coming up\"].push(task);\n        }\n        \n        return m;\n      }, {\n        \"Daily\": [],\n        \"Weekly\": [],\n        \"Biweekly\": [],\n        \"Monthly\": [],\n        \"As needed\": [],\n        \"Coming up\": [],\n      });\n\n      const cards = Object.entries(tasks).map(kv => {\n        return (<TaskCard key={kv[0]} title={kv[0]} tasks={kv[1]} />)\n      });\n\n      content = (\n        <div>\n          <h1 className=\"center\">{groupStore.group.name}</h1>\n            <h2 className=\"center\">My Tasks</h2>\n\n            <section className=\"my-tasks-columns\">\n              <div className=\"my-tasks-cards\">\n                {cards}\n              </div>\n              {focusedTask && (<FocusedTask task={focusedTask} closeURL={\"/groups/\" + groupID + \"/tasks\"} />)}\n            </section>\n        </div>\n      )\n    }\n\n    return (\n      <div>\n        <NavBar />\n        <div className=\"MyTasks\">\n          {content}\n        </div>\n        <Link to={\"/groups/\" + groupID + \"/addchore\"}>\n          <AddChoreButton />\n        </Link>\n      </div>\n    );\n  }\n})\n\nexport default MyTasks;\n","import React, { Component } from 'react';\nimport { observer } from \"mobx-react\"\n\nimport Button from './Button';\nimport Input from './Input';\n\nimport userStore from '../stores/users';\n\nimport '../styles/Main.scss';\nimport '../styles/NewGroup.scss';\n\n\n\nconst Login = observer(class Login extends Component {\n  emailRE = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      styles: {}\n    };\n\n    this.onKeyPress = this.onKeyPress.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this); \n  }\n\n  onKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSubmit();\n    }\n  }\n\n  handleChange(e) {\n    this.setState({\n      email: e.target.value,\n      styles: {}\n    });\n  }\n\n  handleSubmit() {\n    if (this.state.email.trim() && this.emailRE.test(this.state.email)) {\n      userStore.setCurrentUser(this.state.email);\n      let params = new URLSearchParams(this.props.location.search);\n      const next = params.get('redirect') ? params.get('redirect') : '/groups';\n      this.props.history.push(next);\n    } else {\n      this.setState({\n        email: this.state.email,\n        styles: {\n          borderBottom: \"3px solid #E00747\"\n        }\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <div className=\"NewGroup\">\n          <div className=\"form group-name\">\n            <p>What is your email?</p>\n            <Input id=\"group-name-input\" style={this.state.styles} placeholder=\"Email\" value={this.state.value} onChange={this.handleChange} onKeyPress={this.onKeyPress} />\n            <Button stylename=\"button--next\" onClick={this.handleSubmit} />\n          </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n});\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport NavBar from \"./NavBar\";\nimport Input from \"./Input\";\nimport Button from \"./Button\";\n\nimport \"../styles/AddChore.scss\";\n\nclass AddChore extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirect: false\n    };\n  }\n\n  addChore = () => {\n    // TODO: USE FIREBASE TO ADD CHORE AND REDIRECT AS CALLBACK\n    this.setState({ redirect: true });\n    console.log(this.state.redirect);\n  };\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to=\"/tasks\" />;\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        {this.renderRedirect()}\n        <NavBar />\n        <div className=\"MyTasks center AddChore\">\n          <h1>The CSS Slayers</h1>\n          <h2>Add Chore</h2>\n          <Input id=\"task-name-id\" placeholder=\"Chore Name\" />\n          <br />\n          <textarea\n            className=\"text-input\"\n            id=\"task-desc-id\"\n            placeholder=\"Chore Description\"\n          />\n          <br />\n          Frequency:{\" \"}\n          <select id=\"task-freq-id\" defaultValue=\"daily\">\n            <option value=\"daily\">Daily</option>\n            <option value=\"weekly\">Weekly</option>\n            <option value=\"biweekly\">Biweekly</option>\n          </select>\n          <br />\n          <Button stylename=\"\" onClick={this.addChore}>\n            Add Chore\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddChore;\n","import React, { Component } from 'react';\nimport { observer } from \"mobx-react\"\nimport { Link } from \"react-router-dom\";\nimport Spinner from 'react-spinkit';\n\n\nimport userStore from '../stores/users';\n\nimport '../styles/Main.scss';\nimport '../styles/NewGroup.scss';\n\nconst GroupList = observer(class GroupList extends Component {\n  constructor(props) {\n    super(props);\n    userStore.fetchCurrentUsersGroups();\n  }\n\n  render() {\n    let content = (\n      <div>\n        <Spinner name='double-bounce' />\n      </div>\n    );\n\n    if (!userStore.fetching) {\n      const groups = userStore.usersGroups.map(group => {\n        return (\n          <li key={group.id}>\n            <Link to={\"/groups/\" + group.id + \"/tasks\"}>{group.name}</Link>\n          </li>\n        )\n      });\n      content = (\n        <section>\n          <h1>Your Groups</h1>\n          <ul>\n            {groups}\n          </ul>\n        </section>\n      )\n    }\n    return (\n      <div className=\"Main\">\n        <div className=\"container\">\n          <div className=\"NewGroup\">\n          <div className=\"form group-name\">\n            {content}\n          </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n});\n\nexport default GroupList;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport AuthenticatedRoute from './components/AuthenticatedRoute';\n\nimport Main from \"./components/Main\";\nimport NewGroup from \"./components/NewGroup\";\nimport NewTasks from \"./components/NewTasks\";\nimport MyTasks from \"./components/MyTasks\";\nimport Login from \"./components/Login\";\nimport AddChore from \"./components/AddChore\";\nimport GroupList from \"./components/GroupList\";\n\nimport \"./styles/index.scss\";\n\nconst App = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <main>\n      <Route path=\"/\" exact component={Main} />\n      <Route path=\"/login\" exact component={Login} />\n      <AuthenticatedRoute path=\"/new\" exact component={NewGroup} />\n      <AuthenticatedRoute path=\"/newchores\" exact component={NewTasks} />\n      <AuthenticatedRoute path=\"/groups\" exact component={GroupList} />\n      <AuthenticatedRoute path=\"/groups/:group/tasks\" exact component={MyTasks} />\n      <AuthenticatedRoute path=\"/groups/:group/tasks/:id\" exact component={MyTasks} />\n      <AuthenticatedRoute path=\"/groups/:group/addchore\" exact component={AddChore} />\n    </main>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}